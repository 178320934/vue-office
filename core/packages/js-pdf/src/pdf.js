export const pdfLibJsStr = '/*! For license information please see pdf.js.LICENSE.txt */
var __webpack_exports__={},root,factory;root=globalThis,factory=()=>(()=>{var __webpack_modules__=[,(t,e,r)=>{function n(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||i(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){if(t){if("string"==typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(t,e):void 0}}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}function l(t,e,r){return e&&s(t.prototype,e),r&&s(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function u(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function f(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=d(t);if(e){var i=d(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return function(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,r)}}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.VerbosityLevel=e.Util=e.UnknownErrorException=e.UnexpectedResponseException=e.UNSUPPORTED_FEATURES=e.TextRenderingMode=e.StreamType=e.RenderingIntentFlag=e.PermissionFlag=e.PasswordResponses=e.PasswordException=e.PageActionEventType=e.OPS=e.MissingPDFException=e.LINE_FACTOR=e.LINE_DESCENT_FACTOR=e.InvalidPDFException=e.ImageKind=e.IDENTITY_MATRIX=e.FormatError=e.FontType=e.FeatureTest=e.FONT_IDENTITY_MATRIX=e.DocumentActionEventType=e.CMapCompressionType=e.BaseException=e.BASELINE_FACTOR=e.AnnotationType=e.AnnotationStateModelType=e.AnnotationReviewState=e.AnnotationReplyType=e.AnnotationMode=e.AnnotationMarkedState=e.AnnotationFlag=e.AnnotationFieldFlag=e.AnnotationEditorType=e.AnnotationEditorPrefix=e.AnnotationEditorParamsType=e.AnnotationBorderStyleType=e.AnnotationActionEventType=e.AbortException=void 0,e.arrayByteLength=T,e.arraysToBytes=function(t){var e=t.length;if(1===e&&t[0]instanceof Uint8Array)return t[0];for(var r=0,n=0;n<e;n++)r+=T(t[n]);for(var i=0,a=new Uint8Array(r),o=0;o<e;o++){var s=t[o];s instanceof Uint8Array||(s="string"==typeof s?P(s):new Uint8Array(s));var l=s.byteLength;a.set(s,i),i+=l}return a},e.assert=function(t,e){t||m(e)},e.bytesToString=function(t){"object"===o(t)&&null!==t&&void 0!==t.length||m("Invalid argument for bytesToString");var e=t.length,r=8192;if(e<r)return String.fromCharCode.apply(null,t);for(var n=[],i=0;i<e;i+=r){var a=Math.min(i+r,e),s=t.subarray(i,a);n.push(String.fromCharCode.apply(null,s))}return n.join("")},e.createPromiseCapability=function(){var t=Object.create(null),e=!1;return Object.defineProperty(t,"settled",{get:function(){return e}}),t.promise=new Promise((function(r,n){t.resolve=function(t){e=!0,r(t)},t.reject=function(t){e=!0,n(t)}})),t},e.createValidAbsoluteUrl=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!t)return null;try{if(r&&"string"==typeof t){if(r.addDefaultProtocol&&t.startsWith("www.")){var n=t.match(/\./g);n&&n.length>=2&&(t="http://".concat(t))}if(r.tryConvertEncoding)try{t=R(t)}catch(t){}}var i=e?new URL(t,e):new URL(t);if(function(t){if(!t)return!1;switch(t.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(i))return i}catch(t){}return null},e.getModificationDate=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date;return[t.getUTCFullYear().toString(),(t.getUTCMonth()+1).toString().padStart(2,"0"),t.getUTCDate().toString().padStart(2,"0"),t.getUTCHours().toString().padStart(2,"0"),t.getUTCMinutes().toString().padStart(2,"0"),t.getUTCSeconds().toString().padStart(2,"0")].join("")},e.getVerbosityLevel=function(){return v},e.info=function(t){v>=p.INFOS&&console.log("Info: ".concat(t))},e.isArrayBuffer=function(t){return"object"===o(t)&&null!==t&&void 0!==t.byteLength},e.isArrayEqual=function(t,e){if(t.length!==e.length)return!1;for(var r=0,n=t.length;r<n;r++)if(t[r]!==e[r])return!1;return!0},e.objectFromMap=function(t){var e,r,n=Object.create(null),a=function(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=i(t))){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return s=t.done,t},e:function(t){l=!0,o=t},f:function(){try{s||null==r.return||r.return()}finally{if(l)throw o}}}}(t);try{for(a.s();!(e=a.n()).done;){var o=(r=e.value,2,function(t){if(Array.isArray(t))return t}(r)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{for(a=(r=r.call(t)).next,0;!(l=(n=a.call(r)).done)&&(s.push(n.value),2!==s.length);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(r)||i(r,2)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=o[0],l=o[1];n[s]=l}}catch(t){a.e(t)}finally{a.f()}return n},e.objectSize=function(t){return Object.keys(t).length},e.setVerbosityLevel=function(t){Number.isInteger(t)&&(v=t)},e.shadow=g,e.string32=function(t){return String.fromCharCode(t>>24&255,t>>16&255,t>>8&255,255&t)},e.stringToBytes=P,e.stringToPDFString=function(t){var e;if(t[0]>="ï"&&("þ"===t[0]&&"ÿ"===t[1]?e="utf-16be":"ÿ"===t[0]&&"þ"===t[1]?e="utf-16le":"ï"===t[0]&&"»"===t[1]&&"¿"===t[2]&&(e="utf-8"),e))try{var r=new TextDecoder(e,{fatal:!0}),n=P(t);return r.decode(n)}catch(t){y('stringToPDFString: "'.concat(t,'".'))}for(var i=[],a=0,o=t.length;a<o;a++){var s=M[t.charCodeAt(a)];i.push(s?String.fromCharCode(s):t.charAt(a))}return i.join("")},e.stringToUTF8String=R,e.unreachable=m,e.utf8StringToString=function(t){return unescape(encodeURIComponent(t))},e.warn=y,globalThis._pdfjsCompatibilityChecked||(globalThis._pdfjsCompatibilityChecked=!0,r(2)),e.IDENTITY_MATRIX=[1,0,0,1,0,0],e.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0],e.LINE_FACTOR=1.35,e.LINE_DESCENT_FACTOR=.35,e.BASELINE_FACTOR=.25925925925925924,e.RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,OPLIST:256},e.AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},e.AnnotationEditorPrefix="pdfjs_internal_editor_",e.AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,INK:15},e.AnnotationEditorParamsType={FREETEXT_SIZE:1,FREETEXT_COLOR:2,FREETEXT_OPACITY:3,INK_COLOR:11,INK_THICKNESS:12,INK_OPACITY:13},e.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},e.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},e.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},e.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},e.AnnotationStateModelType={MARKED:"Marked",REVIEW:"Review"},e.AnnotationMarkedState={MARKED:"Marked",UNMARKED:"Unmarked"},e.AnnotationReviewState={ACCEPTED:"Accepted",REJECTED:"Rejected",CANCELLED:"Cancelled",COMPLETED:"Completed",NONE:"None"},e.AnnotationReplyType={GROUP:"Group",REPLY:"R"},e.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512},e.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864},e.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},e.AnnotationActionEventType={E:"Mouse Enter",X:"Mouse Exit",D:"Mouse Down",U:"Mouse Up",Fo:"Focus",Bl:"Blur",PO:"PageOpen",PC:"PageClose",PV:"PageVisible",PI:"PageInvisible",K:"Keystroke",F:"Format",V:"Validate",C:"Calculate"},e.DocumentActionEventType={WC:"WillClose",WS:"WillSave",DS:"DidSave",WP:"WillPrint",DP:"DidPrint"},e.PageActionEventType={O:"PageOpen",C:"PageClose"},e.StreamType={UNKNOWN:"UNKNOWN",FLATE:"FLATE",LZW:"LZW",DCT:"DCT",JPX:"JPX",JBIG:"JBIG",A85:"A85",AHX:"AHX",CCF:"CCF",RLX:"RLX"},e.FontType={UNKNOWN:"UNKNOWN",TYPE1:"TYPE1",TYPE1STANDARD:"TYPE1STANDARD",TYPE1C:"TYPE1C",CIDFONTTYPE0:"CIDFONTTYPE0",CIDFONTTYPE0C:"CIDFONTTYPE0C",TRUETYPE:"TRUETYPE",CIDFONTTYPE2:"CIDFONTTYPE2",TYPE3:"TYPE3",OPENTYPE:"OPENTYPE",TYPE0:"TYPE0",MMTYPE1:"MMTYPE1"};var p={ERRORS:0,WARNINGS:1,INFOS:5};e.VerbosityLevel=p,e.CMapCompressionType={NONE:0,BINARY:1},e.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},e.UNSUPPORTED_FEATURES={forms:"forms",javaScript:"javaScript",signatures:"signatures",smask:"smask",shadingPattern:"shadingPattern",errorTilingPattern:"errorTilingPattern",errorExtGState:"errorExtGState",errorXObject:"errorXObject",errorFontLoadType3:"errorFontLoadType3",errorFontState:"errorFontState",errorFontMissing:"errorFontMissing",errorFontTranslate:"errorFontTranslate",errorColorSpace:"errorColorSpace",errorOperatorList:"errorOperatorList",errorFontToUnicode:"errorFontToUnicode",errorFontLoadNative:"errorFontLoadNative",errorFontBuildPath:"errorFontBuildPath",errorFontGetPath:"errorFontGetPath",errorMarkedContent:"errorMarkedContent",errorContentSubStream:"errorContentSubStream"},e.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};var v=p.WARNINGS;function y(t){v>=p.WARNINGS&&console.log("Warning: ".concat(t))}function m(t){throw new Error(t)}function g(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return Object.defineProperty(t,e,{value:r,enumerable:!n,configurable:!0,writable:!1}),r}var b=function(){function t(e,r){this.constructor===t&&m("Cannot initialize BaseException."),this.message=e,this.name=r}return t.prototype=new Error,t.constructor=t,t}();e.BaseException=b;var _=function(t){c(r,t);var e=f(r);function r(t,n){var i;return u(this,r),(i=e.call(this,t,"PasswordException")).code=n,i}return l(r)}(b);e.PasswordException=_;var w=function(t){c(r,t);var e=f(r);function r(t,n){var i;return u(this,r),(i=e.call(this,t,"UnknownErrorException")).details=n,i}return l(r)}(b);e.UnknownErrorException=w;var A=function(t){c(r,t);var e=f(r);function r(t){return u(this,r),e.call(this,t,"InvalidPDFException")}return l(r)}(b);e.InvalidPDFException=A;var k=function(t){c(r,t);var e=f(r);function r(t){return u(this,r),e.call(this,t,"MissingPDFException")}return l(r)}(b);e.MissingPDFException=k;var S=function(t){c(r,t);var e=f(r);function r(t,n){var i;return u(this,r),(i=e.call(this,t,"UnexpectedResponseException")).status=n,i}return l(r)}(b);e.UnexpectedResponseException=S;var x=function(t){c(r,t);var e=f(r);function r(t){return u(this,r),e.call(this,t,"FormatError")}return l(r)}(b);e.FormatError=x;var E=function(t){c(r,t);var e=f(r);function r(t){return u(this,r),e.call(this,t,"AbortException")}return l(r)}(b);function P(t){"string"!=typeof t&&m("Invalid argument for stringToBytes");for(var e=t.length,r=new Uint8Array(e),n=0;n<e;++n)r[n]=255&t.charCodeAt(n);return r}function T(t){return void 0!==t.length?t.length:void 0!==t.byteLength?t.byteLength:void m("Invalid argument for arrayByteLength")}e.AbortException=E;var C=function(){function t(){u(this,t)}return l(t,null,[{key:"isLittleEndian",get:function(){return g(this,"isLittleEndian",((t=new Uint8Array(4))[0]=1,1===new Uint32Array(t.buffer,0,1)[0]));var t}},{key:"isEvalSupported",get:function(){return g(this,"isEvalSupported",function(){try{return new Function(""),!0}catch(t){return!1}}())}},{key:"isOffscreenCanvasSupported",get:function(){return g(this,"isOffscreenCanvasSupported","undefined"!=typeof OffscreenCanvas)}},{key:"platform",get:function(){return"undefined"==typeof navigator?g(this,"platform",{isWin:!1,isMac:!1}):g(this,"platform",{isWin:navigator.platform.includes("Win"),isMac:navigator.platform.includes("Mac")})}}]),t}();e.FeatureTest=C;var O=n(Array(256).keys()).map((function(t){return t.toString(16).padStart(2,"0")})),F=function(){function t(){u(this,t)}return l(t,null,[{key:"makeHexColor",value:function(t,e,r){return"#".concat(O[t]).concat(O[e]).concat(O[r])}},{key:"scaleMinMax",value:function(t,e){var r;t[0]?(t[0]<0&&(r=e[0],e[0]=e[1],e[1]=r),e[0]*=t[0],e[1]*=t[0],t[3]<0&&(r=e[2],e[2]=e[3],e[3]=r),e[2]*=t[3],e[3]*=t[3]):(r=e[0],e[0]=e[2],e[2]=r,r=e[1],e[1]=e[3],e[3]=r,t[1]<0&&(r=e[2],e[2]=e[3],e[3]=r),e[2]*=t[1],e[3]*=t[1],t[2]<0&&(r=e[0],e[0]=e[1],e[1]=r),e[0]*=t[2],e[1]*=t[2]),e[0]+=t[4],e[1]+=t[4],e[2]+=t[5],e[3]+=t[5]}},{key:"transform",value:function(t,e){return[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],t[0]*e[4]+t[2]*e[5]+t[4],t[1]*e[4]+t[3]*e[5]+t[5]]}},{key:"applyTransform",value:function(t,e){return[t[0]*e[0]+t[1]*e[2]+e[4],t[0]*e[1]+t[1]*e[3]+e[5]]}},{key:"applyInverseTransform",value:function(t,e){var r=e[0]*e[3]-e[1]*e[2];return[(t[0]*e[3]-t[1]*e[2]+e[2]*e[5]-e[4]*e[3])/r,(-t[0]*e[1]+t[1]*e[0]+e[4]*e[1]-e[5]*e[0])/r]}},{key:"getAxialAlignedBoundingBox",value:function(e,r){var n=t.applyTransform(e,r),i=t.applyTransform(e.slice(2,4),r),a=t.applyTransform([e[0],e[3]],r),o=t.applyTransform([e[2],e[1]],r);return[Math.min(n[0],i[0],a[0],o[0]),Math.min(n[1],i[1],a[1],o[1]),Math.max(n[0],i[0],a[0],o[0]),Math.max(n[1],i[1],a[1],o[1])]}},{key:"inverseTransform",value:function(t){var e=t[0]*t[3]-t[1]*t[2];return[t[3]/e,-t[1]/e,-t[2]/e,t[0]/e,(t[2]*t[5]-t[4]*t[3])/e,(t[4]*t[1]-t[5]*t[0])/e]}},{key:"singularValueDecompose2dScale",value:function(t){var e=[t[0],t[2],t[1],t[3]],r=t[0]*e[0]+t[1]*e[2],n=t[0]*e[1]+t[1]*e[3],i=t[2]*e[0]+t[3]*e[2],a=t[2]*e[1]+t[3]*e[3],o=(r+a)/2,s=Math.sqrt(Math.pow(r+a,2)-4*(r*a-i*n))/2,l=o+s||1,u=o-s||1;return[Math.sqrt(l),Math.sqrt(u)]}},{key:"normalizeRect",value:function(t){var e=t.slice(0);return t[0]>t[2]&&(e[0]=t[2],e[2]=t[0]),t[1]>t[3]&&(e[1]=t[3],e[3]=t[1]),e}},{key:"intersect",value:function(t,e){var r=Math.max(Math.min(t[0],t[2]),Math.min(e[0],e[2])),n=Math.min(Math.max(t[0],t[2]),Math.max(e[0],e[2]));if(r>n)return null;var i=Math.max(Math.min(t[1],t[3]),Math.min(e[1],e[3])),a=Math.min(Math.max(t[1],t[3]),Math.max(e[1],e[3]));return i>a?null:[r,i,n,a]}},{key:"bezierBoundingBox",value:function(t,e,r,i,a,o,s,l){for(var u,c,h,f,d,p,v,y,m=[],g=[[],[]],b=0;b<2;++b)if(0===b?(c=6*t-12*r+6*a,u=-3*t+9*r-9*a+3*s,h=3*r-3*t):(c=6*e-12*i+6*o,u=-3*e+9*i-9*o+3*l,h=3*i-3*e),Math.abs(u)<1e-12){if(Math.abs(c)<1e-12)continue;0<(f=-h/c)&&f<1&&m.push(f)}else v=c*c-4*h*u,y=Math.sqrt(v),v<0||(0<(d=(-c+y)/(2*u))&&d<1&&m.push(d),0<(p=(-c-y)/(2*u))&&p<1&&m.push(p));for(var _,w=m.length,A=w;w--;)_=1-(f=m[w]),g[0][w]=_*_*_*t+3*_*_*f*r+3*_*f*f*a+f*f*f*s,g[1][w]=_*_*_*e+3*_*_*f*i+3*_*f*f*o+f*f*f*l;return g[0][A]=t,g[1][A]=e,g[0][A+1]=s,g[1][A+1]=l,g[0].length=g[1].length=A+2,[Math.min.apply(Math,n(g[0])),Math.min.apply(Math,n(g[1])),Math.max.apply(Math,n(g[0])),Math.max.apply(Math,n(g[1]))]}}]),t}();e.Util=F;var M=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function R(t){return decodeURIComponent(escape(t))}},(t,e,r)=>{var n=r(3);!globalThis.btoa&&n.isNodeJS&&(globalThis.btoa=function(t){return Buffer.from(t,"binary").toString("base64")}),!globalThis.atob&&n.isNodeJS&&(globalThis.atob=function(t){return Buffer.from(t,"base64").toString("binary")}),!globalThis.DOMMatrix&&n.isNodeJS&&(globalThis.DOMMatrix=require("canvas").DOMMatrix),!globalThis.ReadableStream&&n.isNodeJS&&(globalThis.ReadableStream=require("web-streams-polyfill/dist/ponyfill.js").ReadableStream),Array.prototype.at||r(4),Uint8Array.prototype.at||r(78),globalThis.structuredClone||r(88)},(t,e)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.isNodeJS=void 0;var n=!("object"!==("undefined"==typeof process?"undefined":r(process))||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type);e.isNodeJS=n},(t,e,r)=>{r(5);var n=r(77);t.exports=n("Array","at")},(t,e,r)=>{var n=r(6),i=r(43),a=r(67),o=r(65),s=r(72);n({target:"Array",proto:!0},{at:function(t){var e=i(this),r=a(e),n=o(t),s=n>=0?n:r+n;return s<0||s>=r?void 0:e[s]}}),s("at")},(t,e,r)=>{var n=r(7),i=r(8).f,a=r(47),o=r(51),s=r(41),l=r(59),u=r(71);t.exports=function(t,e){var r,c,h,f,d,p=t.target,v=t.global,y=t.stat;if(r=v?n:y?n[p]||s(p,{}):(n[p]||{}).prototype)for(c in e){if(f=e[c],h=t.dontCallGetSet?(d=i(r,c))&&d.value:r[c],!u(v?c:p+(y?".":"#")+c,t.forced)&&void 0!==h){if(typeof f==typeof h)continue;l(f,h)}(t.sham||h&&h.sham)&&a(f,"sham",!0),o(r,c,f,t)}}},t=>{var e=function(t){return t&&t.Math==Math&&t};t.exports=e("object"==typeof globalThis&&globalThis)||e("object"==typeof window&&window)||e("object"==typeof self&&self)||e("object"==typeof global&&global)||function(){return this}()||Function("return this")()},(t,e,r)=>{var n=r(9),i=r(11),a=r(13),o=r(14),s=r(15),l=r(21),u=r(42),c=r(45),h=Object.getOwnPropertyDescriptor;e.f=n?h:function(t,e){if(t=s(t),e=l(e),c)try{return h(t,e)}catch(t){}if(u(t,e))return o(!i(a.f,t,e),t[e])}},(t,e,r)=>{var n=r(10);t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},(t,e,r)=>{var n=r(12),i=Function.prototype.call;t.exports=n?i.bind(i):function(){return i.apply(i,arguments)}},(t,e,r)=>{var n=r(10);t.exports=!n((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},(t,e)=>{var r={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,i=n&&!r.call({1:2},1);e.f=i?function(t){var e=n(this,t);return!!e&&e.enumerable}:r},t=>{t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},(t,e,r)=>{var n=r(16),i=r(19);t.exports=function(t){return n(i(t))}},(t,e,r)=>{var n=r(17),i=r(10),a=r(18),o=Object,s=n("".split);t.exports=i((function(){return!o("z").propertyIsEnumerable(0)}))?function(t){return"String"==a(t)?s(t,""):o(t)}:o},(t,e,r)=>{var n=r(12),i=Function.prototype,a=i.call,o=n&&i.bind.bind(a,a);t.exports=n?o:function(t){return function(){return a.apply(t,arguments)}}},(t,e,r)=>{var n=r(17),i=n({}.toString),a=n("".slice);t.exports=function(t){return a(i(t),8,-1)}},(t,e,r)=>{var n=r(20),i=TypeError;t.exports=function(t){if(n(t))throw i("Can't call method on "+t);return t}},t=>{t.exports=function(t){return null==t}},(t,e,r)=>{var n=r(22),i=r(26);t.exports=function(t){var e=n(t,"string");return i(e)?e:e+""}},(t,e,r)=>{var n=r(11),i=r(23),a=r(26),o=r(33),s=r(36),l=r(37),u=TypeError,c=l("toPrimitive");t.exports=function(t,e){if(!i(t)||a(t))return t;var r,l=o(t,c);if(l){if(void 0===e&&(e="default"),r=n(l,t,e),!i(r)||a(r))return r;throw u("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(t,e)}},(t,e,r)=>{var n=r(24),i=r(25),a=i.all;t.exports=i.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:n(t)||t===a}:function(t){return"object"==typeof t?null!==t:n(t)}},(t,e,r)=>{var n=r(25),i=n.all;t.exports=n.IS_HTMLDDA?function(t){return"function"==typeof t||t===i}:function(t){return"function"==typeof t}},t=>{var e="object"==typeof document&&document.all,r=void 0===e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:r}},(t,e,r)=>{var n=r(27),i=r(24),a=r(28),o=r(29),s=Object;t.exports=o?function(t){return"symbol"==typeof t}:function(t){var e=n("Symbol");return i(e)&&a(e.prototype,s(t))}},(t,e,r)=>{var n=r(7),i=r(24);t.exports=function(t,e){return arguments.length<2?(r=n[t],i(r)?r:void 0):n[t]&&n[t][e];var r}},(t,e,r)=>{var n=r(17);t.exports=n({}.isPrototypeOf)},(t,e,r)=>{var n=r(30);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},(t,e,r)=>{var n=r(31),i=r(10);t.exports=!!Object.getOwnPropertySymbols&&!i((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},(t,e,r)=>{var n,i,a=r(7),o=r(32),s=a.process,l=a.Deno,u=s&&s.versions||l&&l.version,c=u&&u.v8;c&&(i=(n=c.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!i&&o&&(!(n=o.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=o.match(/Chrome\/(\d+)/))&&(i=+n[1]),t.exports=i},(t,e,r)=>{var n=r(27);t.exports=n("navigator","userAgent")||""},(t,e,r)=>{var n=r(34),i=r(20);t.exports=function(t,e){var r=t[e];return i(r)?void 0:n(r)}},(t,e,r)=>{var n=r(24),i=r(35),a=TypeError;t.exports=function(t){if(n(t))return t;throw a(i(t)+" is not a function")}},t=>{var e=String;t.exports=function(t){try{return e(t)}catch(t){return"Object"}}},(t,e,r)=>{var n=r(11),i=r(24),a=r(23),o=TypeError;t.exports=function(t,e){var r,s;if("string"===e&&i(r=t.toString)&&!a(s=n(r,t)))return s;if(i(r=t.valueOf)&&!a(s=n(r,t)))return s;if("string"!==e&&i(r=t.toString)&&!a(s=n(r,t)))return s;throw o("Can't convert object to primitive value")}},(t,e,r)=>{var n=r(7),i=r(38),a=r(42),o=r(44),s=r(30),l=r(29),u=i("wks"),c=n.Symbol,h=c&&c.for,f=l?c:c&&c.withoutSetter||o;t.exports=function(t){if(!a(u,t)||!s&&"string"!=typeof u[t]){var e="Symbol."+t;s&&a(c,t)?u[t]=c[t]:u[t]=l&&h?h(e):f(e)}return u[t]}},(t,e,r)=>{var n=r(39),i=r(40);(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.26.1",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})},t=>{t.exports=!1},(t,e,r)=>{var n=r(7),i=r(41),a="__core-js_shared__",o=n[a]||i(a,{});t.exports=o},(t,e,r)=>{var n=r(7),i=Object.defineProperty;t.exports=function(t,e){try{i(n,t,{value:e,configurable:!0,writable:!0})}catch(r){n[t]=e}return e}},(t,e,r)=>{var n=r(17),i=r(43),a=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return a(i(t),e)}},(t,e,r)=>{var n=r(19),i=Object;t.exports=function(t){return i(n(t))}},(t,e,r)=>{var n=r(17),i=0,a=Math.random(),o=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+o(++i+a,36)}},(t,e,r)=>{var n=r(9),i=r(10),a=r(46);t.exports=!n&&!i((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},(t,e,r)=>{var n=r(7),i=r(23),a=n.document,o=i(a)&&i(a.createElement);t.exports=function(t){return o?a.createElement(t):{}}},(t,e,r)=>{var n=r(9),i=r(48),a=r(14);t.exports=n?function(t,e,r){return i.f(t,e,a(1,r))}:function(t,e,r){return t[e]=r,t}},(t,e,r)=>{var n=r(9),i=r(45),a=r(49),o=r(50),s=r(21),l=TypeError,u=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",f="configurable",d="writable";e.f=n?a?function(t,e,r){if(o(t),e=s(e),o(r),"function"==typeof t&&"prototype"===e&&"value"in r&&d in r&&!r[d]){var n=c(t,e);n&&n[d]&&(t[e]=r.value,r={configurable:f in r?r[f]:n[f],enumerable:h in r?r[h]:n[h],writable:!1})}return u(t,e,r)}:u:function(t,e,r){if(o(t),e=s(e),o(r),i)try{return u(t,e,r)}catch(t){}if("get"in r||"set"in r)throw l("Accessors not supported");return"value"in r&&(t[e]=r.value),t}},(t,e,r)=>{var n=r(9),i=r(10);t.exports=n&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},(t,e,r)=>{var n=r(23),i=String,a=TypeError;t.exports=function(t){if(n(t))return t;throw a(i(t)+" is not an object")}},(t,e,r)=>{var n=r(24),i=r(48),a=r(52),o=r(41);t.exports=function(t,e,r,s){s||(s={});var l=s.enumerable,u=void 0!==s.name?s.name:e;if(n(r)&&a(r,u,s),s.global)l?t[e]=r:o(e,r);else{try{s.unsafe?t[e]&&(l=!0):delete t[e]}catch(t){}l?t[e]=r:i.f(t,e,{value:r,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return t}},(t,e,r)=>{var n=r(10),i=r(24),a=r(42),o=r(9),s=r(53).CONFIGURABLE,l=r(54),u=r(55),c=u.enforce,h=u.get,f=Object.defineProperty,d=o&&!n((function(){return 8!==f((function(){}),"length",{value:8}).length})),p=String(String).split("String"),v=t.exports=function(t,e,r){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),r&&r.getter&&(e="get "+e),r&&r.setter&&(e="set "+e),(!a(t,"name")||s&&t.name!==e)&&(o?f(t,"name",{value:e,configurable:!0}):t.name=e),d&&r&&a(r,"arity")&&t.length!==r.arity&&f(t,"length",{value:r.arity});try{r&&a(r,"constructor")&&r.constructor?o&&f(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var n=c(t);return a(n,"source")||(n.source=p.join("string"==typeof e?e:"")),t};Function.prototype.toString=v((function(){return i(this)&&h(this).source||l(this)}),"toString")},(t,e,r)=>{var n=r(9),i=r(42),a=Function.prototype,o=n&&Object.getOwnPropertyDescriptor,s=i(a,"name"),l=s&&"something"===function(){}.name,u=s&&(!n||n&&o(a,"name").configurable);t.exports={EXISTS:s,PROPER:l,CONFIGURABLE:u}},(t,e,r)=>{var n=r(17),i=r(24),a=r(40),o=n(Function.toString);i(a.inspectSource)||(a.inspectSource=function(t){return o(t)}),t.exports=a.inspectSource},(t,e,r)=>{var n,i,a,o=r(56),s=r(7),l=r(23),u=r(47),c=r(42),h=r(40),f=r(57),d=r(58),p="Object already initialized",v=s.TypeError,y=s.WeakMap;if(o||h.state){var m=h.state||(h.state=new y);m.get=m.get,m.has=m.has,m.set=m.set,n=function(t,e){if(m.has(t))throw v(p);return e.facade=t,m.set(t,e),e},i=function(t){return m.get(t)||{}},a=function(t){return m.has(t)}}else{var g=f("state");d[g]=!0,n=function(t,e){if(c(t,g))throw v(p);return e.facade=t,u(t,g,e),e},i=function(t){return c(t,g)?t[g]:{}},a=function(t){return c(t,g)}}t.exports={set:n,get:i,has:a,enforce:function(t){return a(t)?i(t):n(t,{})},getterFor:function(t){return function(e){var r;if(!l(e)||(r=i(e)).type!==t)throw v("Incompatible receiver, "+t+" required");return r}}}},(t,e,r)=>{var n=r(7),i=r(24),a=n.WeakMap;t.exports=i(a)&&/native code/.test(String(a))},(t,e,r)=>{var n=r(38),i=r(44),a=n("keys");t.exports=function(t){return a[t]||(a[t]=i(t))}},t=>{t.exports={}},(t,e,r)=>{var n=r(42),i=r(60),a=r(8),o=r(48);t.exports=function(t,e,r){for(var s=i(e),l=o.f,u=a.f,c=0;c<s.length;c++){var h=s[c];n(t,h)||r&&n(r,h)||l(t,h,u(e,h))}}},(t,e,r)=>{var n=r(27),i=r(17),a=r(61),o=r(70),s=r(50),l=i([].concat);t.exports=n("Reflect","ownKeys")||function(t){var e=a.f(s(t)),r=o.f;return r?l(e,r(t)):e}},(t,e,r)=>{var n=r(62),i=r(69).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,i)}},(t,e,r)=>{var n=r(17),i=r(42),a=r(15),o=r(63).indexOf,s=r(58),l=n([].push);t.exports=function(t,e){var r,n=a(t),u=0,c=[];for(r in n)!i(s,r)&&i(n,r)&&l(c,r);for(;e.length>u;)i(n,r=e[u++])&&(~o(c,r)||l(c,r));return c}},(t,e,r)=>{var n=r(15),i=r(64),a=r(67),o=function(t){return function(e,r,o){var s,l=n(e),u=a(l),c=i(o,u);if(t&&r!=r){for(;u>c;)if((s=l[c++])!=s)return!0}else for(;u>c;c++)if((t||c in l)&&l[c]===r)return t||c||0;return!t&&-1}};t.exports={includes:o(!0),indexOf:o(!1)}},(t,e,r)=>{var n=r(65),i=Math.max,a=Math.min;t.exports=function(t,e){var r=n(t);return r<0?i(r+e,0):a(r,e)}},(t,e,r)=>{var n=r(66);t.exports=function(t){var e=+t;return e!=e||0===e?0:n(e)}},t=>{var e=Math.ceil,r=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?r:e)(n)}},(t,e,r)=>{var n=r(68);t.exports=function(t){return n(t.length)}},(t,e,r)=>{var n=r(65),i=Math.min;t.exports=function(t){return t>0?i(n(t),9007199254740991):0}},t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},(t,e)=>{e.f=Object.getOwnPropertySymbols},(t,e,r)=>{var n=r(10),i=r(24),a=/#|\.prototype\./,o=function(t,e){var r=l[s(t)];return r==c||r!=u&&(i(e)?n(e):!!e)},s=o.normalize=function(t){return String(t).replace(a,".").toLowerCase()},l=o.data={},u=o.NATIVE="N",c=o.POLYFILL="P";t.exports=o},(t,e,r)=>{var n=r(37),i=r(73),a=r(48).f,o=n("unscopables"),s=Array.prototype;null==s[o]&&a(s,o,{configurable:!0,value:i(null)}),t.exports=function(t){s[o][t]=!0}},(t,e,r)=>{var n,i=r(50),a=r(74),o=r(69),s=r(58),l=r(76),u=r(46),c=r(57),h="prototype",f="script",d=c("IE_PROTO"),p=function(){},v=function(t){return"<"+f+">"+t+"</"+f+">"},y=function(t){t.write(v("")),t.close();var e=t.parentWindow.Object;return t=null,e},m=function(){try{n=new ActiveXObject("htmlfile")}catch(t){}var t,e,r;m="undefined"!=typeof document?document.domain&&n?y(n):(e=u("iframe"),r="java"+f+":",e.style.display="none",l.appendChild(e),e.src=String(r),(t=e.contentWindow.document).open(),t.write(v("document.F=Object")),t.close(),t.F):y(n);for(var i=o.length;i--;)delete m[h][o[i]];return m()};s[d]=!0,t.exports=Object.create||function(t,e){var r;return null!==t?(p[h]=i(t),r=new p,p[h]=null,r[d]=t):r=m(),void 0===e?r:a.f(r,e)}},(t,e,r)=>{var n=r(9),i=r(49),a=r(48),o=r(50),s=r(15),l=r(75);e.f=n&&!i?Object.defineProperties:function(t,e){o(t);for(var r,n=s(e),i=l(e),u=i.length,c=0;u>c;)a.f(t,r=i[c++],n[r]);return t}},(t,e,r)=>{var n=r(62),i=r(69);t.exports=Object.keys||function(t){return n(t,i)}},(t,e,r)=>{var n=r(27);t.exports=n("document","documentElement")},(t,e,r)=>{var n=r(7),i=r(17);t.exports=function(t,e){return i(n[t].prototype[e])}},(t,e,r)=>{r(79)},(t,e,r)=>{var n=r(80),i=r(67),a=r(65),o=n.aTypedArray;(0,n.exportTypedArrayMethod)("at",(function(t){var e=o(this),r=i(e),n=a(t),s=n>=0?n:r+n;return s<0||s>=r?void 0:e[s]}))},(t,e,r)=>{var n,i,a,o=r(81),s=r(9),l=r(7),u=r(24),c=r(23),h=r(42),f=r(82),d=r(35),p=r(47),v=r(51),y=r(48).f,m=r(28),g=r(84),b=r(86),_=r(37),w=r(44),A=r(55),k=A.enforce,S=A.get,x=l.Int8Array,E=x&&x.prototype,P=l.Uint8ClampedArray,T=P&&P.prototype,C=x&&g(x),O=E&&g(E),F=Object.prototype,M=l.TypeError,R=_("toStringTag"),I=w("TYPED_ARRAY_TAG"),j="TypedArrayConstructor",L=o&&!!b&&"Opera"!==f(l.opera),D=!1,N={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},U={BigInt64Array:8,BigUint64Array:8},W=function(t){var e=g(t);if(c(e)){var r=S(e);return r&&h(r,j)?r[j]:W(e)}},G=function(t){if(!c(t))return!1;var e=f(t);return h(N,e)||h(U,e)};for(n in N)(a=(i=l[n])&&i.prototype)?k(a)[j]=i:L=!1;for(n in U)(a=(i=l[n])&&i.prototype)&&(k(a)[j]=i);if((!L||!u(C)||C===Function.prototype)&&(C=function(){throw M("Incorrect invocation")},L))for(n in N)l[n]&&b(l[n],C);if((!L||!O||O===F)&&(O=C.prototype,L))for(n in N)l[n]&&b(l[n].prototype,O);if(L&&g(T)!==O&&b(T,O),s&&!h(O,R))for(n in D=!0,y(O,R,{get:function(){return c(this)?this[I]:void 0}}),N)l[n]&&p(l[n],I,n);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:L,TYPED_ARRAY_TAG:D&&I,aTypedArray:function(t){if(G(t))return t;throw M("Target is not a typed array")},aTypedArrayConstructor:function(t){if(u(t)&&(!b||m(C,t)))return t;throw M(d(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,e,r,n){if(s){if(r)for(var i in N){var a=l[i];if(a&&h(a.prototype,t))try{delete a.prototype[t]}catch(r){try{a.prototype[t]=e}catch(t){}}}O[t]&&!r||v(O,t,r?e:L&&E[t]||e,n)}},exportTypedArrayStaticMethod:function(t,e,r){var n,i;if(s){if(b){if(r)for(n in N)if((i=l[n])&&h(i,t))try{delete i[t]}catch(t){}if(C[t]&&!r)return;try{return v(C,t,r?e:L&&C[t]||e)}catch(t){}}for(n in N)!(i=l[n])||i[t]&&!r||v(i,t,e)}},getTypedArrayConstructor:W,isView:function(t){if(!c(t))return!1;var e=f(t);return"DataView"===e||h(N,e)||h(U,e)},isTypedArray:G,TypedArray:C,TypedArrayPrototype:O}},t=>{t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},(t,e,r)=>{var n=r(83),i=r(24),a=r(18),o=r(37)("toStringTag"),s=Object,l="Arguments"==a(function(){return arguments}());t.exports=n?a:function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=s(t),o))?r:l?a(e):"Object"==(n=a(e))&&i(e.callee)?"Arguments":n}},(t,e,r)=>{var n={};n[r(37)("toStringTag")]="z",t.exports="[object z]"===String(n)},(t,e,r)=>{var n=r(42),i=r(24),a=r(43),o=r(57),s=r(85),l=o("IE_PROTO"),u=Object,c=u.prototype;t.exports=s?u.getPrototypeOf:function(t){var e=a(t);if(n(e,l))return e[l];var r=e.constructor;return i(r)&&e instanceof r?r.prototype:e instanceof u?c:null}},(t,e,r)=>{var n=r(10);t.exports=!n((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},(t,e,r)=>{var n=r(17),i=r(50),a=r(87);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,r={};try{(t=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),e=r instanceof Array}catch(t){}return function(r,n){return i(r),a(n),e?t(r,n):r.__proto__=n,r}}():void 0)},(t,e,r)=>{var n=r(24),i=String,a=TypeError;t.exports=function(t){if("object"==typeof t||n(t))return t;throw a("Can't set "+i(t)+" as a prototype")}},(t,e,r)=>{r(89),r(96),r(98),r(121),r(123);var n=r(132);t.exports=n.structuredClone},(t,e,r)=>{var n=r(15),i=r(72),a=r(90),o=r(55),s=r(48).f,l=r(91),u=r(95),c=r(39),h=r(9),f="Array Iterator",d=o.set,p=o.getterFor(f);t.exports=l(Array,"Array",(function(t,e){d(this,{type:f,target:n(t),index:0,kind:e})}),(function(){var t=p(this),e=t.target,r=t.kind,n=t.index++;return!e||n>=e.length?(t.target=void 0,u(void 0,!0)):u("keys"==r?n:"values"==r?e[n]:[n,e[n]],!1)}),"values");var v=a.Arguments=a.Array;if(i("keys"),i("values"),i("entries"),!c&&h&&"values"!==v.name)try{s(v,"name",{value:"values"})}catch(t){}},t=>{t.exports={}},(t,e,r)=>{var n=r(6),i=r(11),a=r(39),o=r(53),s=r(24),l=r(92),u=r(84),c=r(86),h=r(94),f=r(47),d=r(51),p=r(37),v=r(90),y=r(93),m=o.PROPER,g=o.CONFIGURABLE,b=y.IteratorPrototype,_=y.BUGGY_SAFARI_ITERATORS,w=p("iterator"),A="keys",k="values",S="entries",x=function(){return this};t.exports=function(t,e,r,o,p,y,E){l(r,e,o);var P,T,C,O=function(t){if(t===p&&j)return j;if(!_&&t in R)return R[t];switch(t){case A:case k:case S:return function(){return new r(this,t)}}return function(){return new r(this)}},F=e+" Iterator",M=!1,R=t.prototype,I=R[w]||R["@@iterator"]||p&&R[p],j=!_&&I||O(p),L="Array"==e&&R.entries||I;if(L&&(P=u(L.call(new t)))!==Object.prototype&&P.next&&(a||u(P)===b||(c?c(P,b):s(P[w])||d(P,w,x)),h(P,F,!0,!0),a&&(v[F]=x)),m&&p==k&&I&&I.name!==k&&(!a&&g?f(R,"name",k):(M=!0,j=function(){return i(I,this)})),p)if(T={values:O(k),keys:y?j:O(A),entries:O(S)},E)for(C in T)(_||M||!(C in R))&&d(R,C,T[C]);else n({target:e,proto:!0,forced:_||M},T);return a&&!E||R[w]===j||d(R,w,j,{name:p}),v[e]=j,T}},(t,e,r)=>{var n=r(93).IteratorPrototype,i=r(73),a=r(14),o=r(94),s=r(90),l=function(){return this};t.exports=function(t,e,r,u){var c=e+" Iterator";return t.prototype=i(n,{next:a(+!u,r)}),o(t,c,!1,!0),s[c]=l,t}},(t,e,r)=>{var n,i,a,o=r(10),s=r(24),l=r(23),u=r(73),c=r(84),h=r(51),f=r(37),d=r(39),p=f("iterator"),v=!1;[].keys&&("next"in(a=[].keys())?(i=c(c(a)))!==Object.prototype&&(n=i):v=!0),!l(n)||o((function(){var t={};return n[p].call(t)!==t}))?n={}:d&&(n=u(n)),s(n[p])||h(n,p,(function(){return this})),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:v}},(t,e,r)=>{var n=r(48).f,i=r(42),a=r(37)("toStringTag");t.exports=function(t,e,r){t&&!r&&(t=t.prototype),t&&!i(t,a)&&n(t,a,{configurable:!0,value:e})}},t=>{t.exports=function(t,e){return{value:t,done:e}}},(t,e,r)=>{var n=r(83),i=r(51),a=r(97);n||i(Object.prototype,"toString",a,{unsafe:!0})},(t,e,r)=>{var n=r(83),i=r(82);t.exports=n?{}.toString:function(){return"[object "+i(this)+"]"}},(t,e,r)=>{r(99)},(t,e,r)=>{r(100)("Map",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(118))},(t,e,r)=>{var n=r(6),i=r(7),a=r(17),o=r(71),s=r(51),l=r(101),u=r(108),c=r(115),h=r(24),f=r(20),d=r(23),p=r(10),v=r(116),y=r(94),m=r(117);t.exports=function(t,e,r){var g=-1!==t.indexOf("Map"),b=-1!==t.indexOf("Weak"),_=g?"set":"add",w=i[t],A=w&&w.prototype,k=w,S={},x=function(t){var e=a(A[t]);s(A,t,"add"==t?function(t){return e(this,0===t?0:t),this}:"delete"==t?function(t){return!(b&&!d(t))&&e(this,0===t?0:t)}:"get"==t?function(t){return b&&!d(t)?void 0:e(this,0===t?0:t)}:"has"==t?function(t){return!(b&&!d(t))&&e(this,0===t?0:t)}:function(t,r){return e(this,0===t?0:t,r),this})};if(o(t,!h(w)||!(b||A.forEach&&!p((function(){(new w).entries().next()})))))k=r.getConstructor(e,t,g,_),l.enable();else if(o(t,!0)){var E=new k,P=E[_](b?{}:-0,1)!=E,T=p((function(){E.has(1)})),C=v((function(t){new w(t)})),O=!b&&p((function(){for(var t=new w,e=5;e--;)t[_](e,e);return!t.has(-0)}));C||((k=e((function(t,e){c(t,A);var r=m(new w,t,k);return f(e)||u(e,r[_],{that:r,AS_ENTRIES:g}),r}))).prototype=A,A.constructor=k),(T||O)&&(x("delete"),x("has"),g&&x("get")),(O||P)&&x(_),b&&A.clear&&delete A.clear}return S[t]=k,n({global:!0,constructor:!0,forced:k!=w},S),y(k,t),b||r.setStrong(k,t,g),k}},(t,e,r)=>{var n=r(6),i=r(17),a=r(58),o=r(23),s=r(42),l=r(48).f,u=r(61),c=r(102),h=r(105),f=r(44),d=r(107),p=!1,v=f("meta"),y=0,m=function(t){l(t,v,{value:{objectID:"O"+y++,weakData:{}}})},g=t.exports={enable:function(){g.enable=function(){},p=!0;var t=u.f,e=i([].splice),r={};r[v]=1,t(r).length&&(u.f=function(r){for(var n=t(r),i=0,a=n.length;i<a;i++)if(n[i]===v){e(n,i,1);break}return n},n({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:c.f}))},fastKey:function(t,e){if(!o(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!s(t,v)){if(!h(t))return"F";if(!e)return"E";m(t)}return t[v].objectID},getWeakData:function(t,e){if(!s(t,v)){if(!h(t))return!0;if(!e)return!1;m(t)}return t[v].weakData},onFreeze:function(t){return d&&p&&h(t)&&!s(t,v)&&m(t),t}};a[v]=!0},(t,e,r)=>{var n=r(18),i=r(15),a=r(61).f,o=r(103),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return s&&"Window"==n(t)?function(t){try{return a(t)}catch(t){return o(s)}}(t):a(i(t))}},(t,e,r)=>{var n=r(64),i=r(67),a=r(104),o=Array,s=Math.max;t.exports=function(t,e,r){for(var l=i(t),u=n(e,l),c=n(void 0===r?l:r,l),h=o(s(c-u,0)),f=0;u<c;u++,f++)a(h,f,t[u]);return h.length=f,h}},(t,e,r)=>{var n=r(21),i=r(48),a=r(14);t.exports=function(t,e,r){var o=n(e);o in t?i.f(t,o,a(0,r)):t[o]=r}},(t,e,r)=>{var n=r(10),i=r(23),a=r(18),o=r(106),s=Object.isExtensible,l=n((function(){s(1)}));t.exports=l||o?function(t){return!!i(t)&&(!o||"ArrayBuffer"!=a(t))&&(!s||s(t))}:s},(t,e,r)=>{var n=r(10);t.exports=n((function(){if("function"==typeof ArrayBuffer){var t=new ArrayBuffer(8);Object.isExtensible(t)&&Object.defineProperty(t,"a",{value:8})}}))},(t,e,r)=>{var n=r(10);t.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},(t,e,r)=>{var n=r(109),i=r(11),a=r(50),o=r(35),s=r(111),l=r(67),u=r(28),c=r(112),h=r(113),f=r(114),d=TypeError,p=function(t,e){this.stopped=t,this.result=e},v=p.prototype;t.exports=function(t,e,r){var y,m,g,b,_,w,A,k=r&&r.that,S=!(!r||!r.AS_ENTRIES),x=!(!r||!r.IS_RECORD),E=!(!r||!r.IS_ITERATOR),P=!(!r||!r.INTERRUPTED),T=n(e,k),C=function(t){return y&&f(y,"normal",t),new p(!0,t)},O=function(t){return S?(a(t),P?T(t[0],t[1],C):T(t[0],t[1])):P?T(t,C):T(t)};if(x)y=t.iterator;else if(E)y=t;else{if(!(m=h(t)))throw d(o(t)+" is not iterable");if(s(m)){for(g=0,b=l(t);b>g;g++)if((_=O(t[g]))&&u(v,_))return _;return new p(!1)}y=c(t,m)}for(w=x?t.next:y.next;!(A=i(w,y)).done;){try{_=O(A.value)}catch(t){f(y,"throw",t)}if("object"==typeof _&&_&&u(v,_))return _}return new p(!1)}},(t,e,r)=>{var n=r(110),i=r(34),a=r(12),o=n(n.bind);t.exports=function(t,e){return i(t),void 0===e?t:a?o(t,e):function(){return t.apply(e,arguments)}}},(t,e,r)=>{var n=r(18),i=r(17);t.exports=function(t){if("Function"===n(t))return i(t)}},(t,e,r)=>{var n=r(37),i=r(90),a=n("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||o[a]===t)}},(t,e,r)=>{var n=r(11),i=r(34),a=r(50),o=r(35),s=r(113),l=TypeError;t.exports=function(t,e){var r=arguments.length<2?s(t):e;if(i(r))return a(n(r,t));throw l(o(t)+" is not iterable")}},(t,e,r)=>{var n=r(82),i=r(33),a=r(20),o=r(90),s=r(37)("iterator");t.exports=function(t){if(!a(t))return i(t,s)||i(t,"@@iterator")||o[n(t)]}},(t,e,r)=>{var n=r(11),i=r(50),a=r(33);t.exports=function(t,e,r){var o,s;i(t);try{if(!(o=a(t,"return"))){if("throw"===e)throw r;return r}o=n(o,t)}catch(t){s=!0,o=t}if("throw"===e)throw r;if(s)throw o;return i(o),r}},(t,e,r)=>{var n=r(28),i=TypeError;t.exports=function(t,e){if(n(e,t))return t;throw i("Incorrect invocation")}},(t,e,r)=>{var n=r(37)("iterator"),i=!1;try{var a=0,o={next:function(){return{done:!!a++}},return:function(){i=!0}};o[n]=function(){return this},Array.from(o,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},t(a)}catch(t){}return r}},(t,e,r)=>{var n=r(24),i=r(23),a=r(86);t.exports=function(t,e,r){var o,s;return a&&n(o=e.constructor)&&o!==r&&i(s=o.prototype)&&s!==r.prototype&&a(t,s),t}},(t,e,r)=>{var n=r(48).f,i=r(73),a=r(119),o=r(109),s=r(115),l=r(20),u=r(108),c=r(91),h=r(95),f=r(120),d=r(9),p=r(101).fastKey,v=r(55),y=v.set,m=v.getterFor;t.exports={getConstructor:function(t,e,r,c){var h=t((function(t,n){s(t,f),y(t,{type:e,index:i(null),first:void 0,last:void 0,size:0}),d||(t.size=0),l(n)||u(n,t[c],{that:t,AS_ENTRIES:r})})),f=h.prototype,v=m(e),g=function(t,e,r){var n,i,a=v(t),o=b(t,e);return o?o.value=r:(a.last=o={index:i=p(e,!0),key:e,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=o),n&&(n.next=o),d?a.size++:t.size++,"F"!==i&&(a.index[i]=o)),t},b=function(t,e){var r,n=v(t),i=p(e);if("F"!==i)return n.index[i];for(r=n.first;r;r=r.next)if(r.key==e)return r};return a(f,{clear:function(){for(var t=v(this),e=t.index,r=t.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete e[r.index],r=r.next;t.first=t.last=void 0,d?t.size=0:this.size=0},delete:function(t){var e=this,r=v(e),n=b(e,t);if(n){var i=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=i),i&&(i.previous=a),r.first==n&&(r.first=i),r.last==n&&(r.last=a),d?r.size--:e.size--}return!!n},forEach:function(t){for(var e,r=v(this),n=o(t,arguments.length>1?arguments[1]:void 0);e=e?e.next:r.first;)for(n(e.value,e.key,this);e&&e.removed;)e=e.previous},has:function(t){return!!b(this,t)}}),a(f,r?{get:function(t){var e=b(this,t);return e&&e.value},set:function(t,e){return g(this,0===t?0:t,e)}}:{add:function(t){return g(this,t=0===t?0:t,t)}}),d&&n(f,"size",{get:function(){return v(this).size}}),h},setStrong:function(t,e,r){var n=e+" Iterator",i=m(e),a=m(n);c(t,e,(function(t,e){y(this,{type:n,target:t,state:i(t),kind:e,last:void 0})}),(function(){for(var t=a(this),e=t.kind,r=t.last;r&&r.removed;)r=r.previous;return t.target&&(t.last=r=r?r.next:t.state.first)?h("keys"==e?r.key:"values"==e?r.value:[r.key,r.value],!1):(t.target=void 0,h(void 0,!0))}),r?"entries":"values",!r,!0),f(e)}}},(t,e,r)=>{var n=r(51);t.exports=function(t,e,r){for(var i in e)n(t,i,e[i],r);return t}},(t,e,r)=>{var n=r(27),i=r(48),a=r(37),o=r(9),s=a("species");t.exports=function(t){var e=n(t),r=i.f;o&&e&&!e[s]&&r(e,s,{configurable:!0,get:function(){return this}})}},(t,e,r)=>{r(122)},(t,e,r)=>{r(100)("Set",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(118))},(t,e,r)=>{var n,i=r(39),a=r(6),o=r(7),s=r(27),l=r(17),u=r(10),c=r(44),h=r(24),f=r(124),d=r(20),p=r(23),v=r(26),y=r(108),m=r(50),g=r(82),b=r(42),_=r(104),w=r(47),A=r(67),k=r(125),S=r(126),x=r(128),E=r(31),P=r(129),T=r(130),C=r(131),O=o.Object,F=o.Date,M=o.Error,R=o.EvalError,I=o.RangeError,j=o.ReferenceError,L=o.SyntaxError,D=o.TypeError,N=o.URIError,U=o.PerformanceMark,W=o.WebAssembly,G=W&&W.CompileError||M,B=W&&W.LinkError||M,q=W&&W.RuntimeError||M,H=s("DOMException"),z=s("Set"),V=s("Map"),X=V.prototype,Y=l(X.has),K=l(X.get),J=l(X.set),Q=l(z.prototype.add),$=s("Object","keys"),Z=l([].push),tt=l((!0).valueOf),et=l(1..valueOf),rt=l("".valueOf),nt=l(F.prototype.getTime),it=c("structuredClone"),at="DataCloneError",ot="Transferring",st=function(t){return!u((function(){var e=new o.Set([7]),r=t(e),n=t(O(7));return r==e||!r.has(7)||"object"!=typeof n||7!=n}))&&t},lt=function(t,e){return!u((function(){var r=new e,n=t({a:r,b:r});return!(n&&n.a===n.b&&n.a instanceof e&&n.a.stack===r.stack)}))},ut=o.structuredClone,ct=i||!lt(ut,M)||!lt(ut,H)||(n=ut,!!u((function(){var t=n(new o.AggregateError([1],it,{cause:3}));return"AggregateError"!=t.name||1!=t.errors[0]||t.message!=it||3!=t.cause}))),ht=!ut&&st((function(t){return new U(it,{detail:t}).detail})),ft=st(ut)||ht,dt=function(t){throw new H("Uncloneable type: "+t,at)},pt=function(t,e){throw new H((e||"Cloning")+" of "+t+" cannot be properly polyfilled in this engine",at)},vt=function(t,e){if(v(t)&&dt("Symbol"),!p(t))return t;if(e){if(Y(e,t))return K(e,t)}else e=new V;var r,n,i,a,l,u,c,f,d,y,m=g(t),k=!1;switch(m){case"Array":i=[],k=!0;break;case"Object":i={},k=!0;break;case"Map":i=new V,k=!0;break;case"Set":i=new z,k=!0;break;case"RegExp":i=new RegExp(t.source,S(t));break;case"Error":switch(n=t.name){case"AggregateError":i=s("AggregateError")([]);break;case"EvalError":i=R();break;case"RangeError":i=I();break;case"ReferenceError":i=j();break;case"SyntaxError":i=L();break;case"TypeError":i=D();break;case"URIError":i=N();break;case"CompileError":i=G();break;case"LinkError":i=B();break;case"RuntimeError":i=q();break;default:i=M()}k=!0;break;case"DOMException":i=new H(t.message,t.name),k=!0;break;case"DataView":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":r=o[m],p(r)||pt(m),i=new r(vt(t.buffer,e),t.byteOffset,"DataView"===m?t.byteLength:t.length);break;case"DOMQuad":try{i=new DOMQuad(vt(t.p1,e),vt(t.p2,e),vt(t.p3,e),vt(t.p4,e))}catch(e){ft?i=ft(t):pt(m)}break;case"FileList":if(a=function(){var t;try{t=new o.DataTransfer}catch(e){try{t=new o.ClipboardEvent("").clipboardData}catch(t){}}return t&&t.items&&t.files?t:null}()){for(l=0,u=A(t);l<u;l++)a.items.add(vt(t[l],e));i=a.files}else ft?i=ft(t):pt(m);break;case"ImageData":try{i=new ImageData(vt(t.data,e),t.width,t.height,{colorSpace:t.colorSpace})}catch(e){ft?i=ft(t):pt(m)}break;default:if(ft)i=ft(t);else switch(m){case"BigInt":i=O(t.valueOf());break;case"Boolean":i=O(tt(t));break;case"Number":i=O(et(t));break;case"String":i=O(rt(t));break;case"Date":i=new F(nt(t));break;case"ArrayBuffer":(r=o.DataView)||"function"==typeof t.slice||pt(m);try{if("function"==typeof t.slice)i=t.slice(0);else for(u=t.byteLength,i=new ArrayBuffer(u),d=new r(t),y=new r(i),l=0;l<u;l++)y.setUint8(l,d.getUint8(l))}catch(t){throw new H("ArrayBuffer is detached",at)}break;case"SharedArrayBuffer":i=t;break;case"Blob":try{i=t.slice(0,t.size,t.type)}catch(t){pt(m)}break;case"DOMPoint":case"DOMPointReadOnly":r=o[m];try{i=r.fromPoint?r.fromPoint(t):new r(t.x,t.y,t.z,t.w)}catch(t){pt(m)}break;case"DOMRect":case"DOMRectReadOnly":r=o[m];try{i=r.fromRect?r.fromRect(t):new r(t.x,t.y,t.width,t.height)}catch(t){pt(m)}break;case"DOMMatrix":case"DOMMatrixReadOnly":r=o[m];try{i=r.fromMatrix?r.fromMatrix(t):new r(t)}catch(t){pt(m)}break;case"AudioData":case"VideoFrame":h(t.clone)||pt(m);try{i=t.clone()}catch(t){dt(m)}break;case"File":try{i=new File([t],t.name,t)}catch(t){pt(m)}break;case"CropTarget":case"CryptoKey":case"FileSystemDirectoryHandle":case"FileSystemFileHandle":case"FileSystemHandle":case"GPUCompilationInfo":case"GPUCompilationMessage":case"ImageBitmap":case"RTCCertificate":case"WebAssembly.Module":pt(m);default:dt(m)}}if(J(e,t,i),k)switch(m){case"Array":case"Object":for(c=$(t),l=0,u=A(c);l<u;l++)f=c[l],_(i,f,vt(t[f],e));break;case"Map":t.forEach((function(t,r){J(i,vt(r,e),vt(t,e))}));break;case"Set":t.forEach((function(t){Q(i,vt(t,e))}));break;case"Error":w(i,"message",vt(t.message,e)),b(t,"cause")&&w(i,"cause",vt(t.cause,e)),"AggregateError"==n&&(i.errors=vt(t.errors,e));case"DOMException":x&&w(i,"stack",vt(t.stack,e))}return i},yt=ut&&!u((function(){if(T&&E>92||C&&E>94||P&&E>97)return!1;var t=new ArrayBuffer(8),e=ut(t,{transfer:[t]});return 0!=t.byteLength||8!=e.byteLength}));a({global:!0,enumerable:!0,sham:!yt,forced:ct},{structuredClone:function(t){var e,r=k(arguments.length,1)>1&&!d(arguments[1])?m(arguments[1]):void 0,n=r?r.transfer:void 0;return void 0!==n&&function(t,e){if(!p(t))throw D("Transfer option cannot be converted to a sequence");var r=[];y(t,(function(t){Z(r,m(t))}));var n,i,a,s,l,u,c=0,d=A(r);if(yt)for(s=ut(r,{transfer:r});c<d;)J(e,r[c],s[c++]);else for(;c<d;){if(n=r[c++],Y(e,n))throw new H("Duplicate transferable",at);switch(i=g(n)){case"ImageBitmap":a=o.OffscreenCanvas,f(a)||pt(i,ot);try{(u=new a(n.width,n.height)).getContext("bitmaprenderer").transferFromImageBitmap(n),l=u.transferToImageBitmap()}catch(t){}break;case"AudioData":case"VideoFrame":h(n.clone)&&h(n.close)||pt(i,ot);try{l=n.clone(),n.close()}catch(t){}break;case"ArrayBuffer":case"MediaSourceHandle":case"MessagePort":case"OffscreenCanvas":case"ReadableStream":case"TransformStream":case"WritableStream":pt(i,ot)}if(void 0===l)throw new H("This object cannot be transferred: "+i,at);J(e,n,l)}}(n,e=new V),vt(t,e)}})},(t,e,r)=>{var n=r(17),i=r(10),a=r(24),o=r(82),s=r(27),l=r(54),u=function(){},c=[],h=s("Reflect","construct"),f=/^\s*(?:class|function)\b/,d=n(f.exec),p=!f.exec(u),v=function(t){if(!a(t))return!1;try{return h(u,c,t),!0}catch(t){return!1}},y=function(t){if(!a(t))return!1;switch(o(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return p||!!d(f,l(t))}catch(t){return!0}};y.sham=!0,t.exports=!h||i((function(){var t;return v(v.call)||!v(Object)||!v((function(){t=!0}))||t}))?y:v},t=>{var e=TypeError;t.exports=function(t,r){if(t<r)throw e("Not enough arguments");return t}},(t,e,r)=>{var n=r(11),i=r(42),a=r(28),o=r(127),s=RegExp.prototype;t.exports=function(t){var e=t.flags;return void 0!==e||"flags"in s||i(t,"flags")||!a(s,t)?e:n(o,t)}},(t,e,r)=>{var n=r(50);t.exports=function(){var t=n(this),e="";return t.hasIndices&&(e+="d"),t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.unicodeSets&&(e+="v"),t.sticky&&(e+="y"),e}},(t,e,r)=>{var n=r(10),i=r(14);t.exports=!n((function(){var t=Error("a");return!("stack"in t)||(Object.defineProperty(t,"stack",i(1,7)),7!==t.stack)}))},(t,e,r)=>{var n=r(130),i=r(131);t.exports=!n&&!i&&"object"==typeof window&&"object"==typeof document},t=>{t.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},(t,e,r)=>{var n=r(18),i=r(7);t.exports="process"==n(i.process)},(t,e,r)=>{var n=r(7);t.exports=n},(__unused_webpack_module,exports,__w_pdfjs_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.build=exports.RenderTask=exports.PDFWorkerUtil=exports.PDFWorker=exports.PDFPageProxy=exports.PDFDocumentProxy=exports.PDFDocumentLoadingTask=exports.PDFDataRangeTransport=exports.LoopbackPort=exports.DefaultStandardFontDataFactory=exports.DefaultCanvasFactory=exports.DefaultCMapReaderFactory=void 0,exports.getDocument=getDocument,exports.setPDFNetworkStreamFactory=setPDFNetworkStreamFactory,exports.version=void 0;var _util=__w_pdfjs_require__(1),_annotation_storage=__w_pdfjs_require__(134),_display_utils=__w_pdfjs_require__(137),_font_loader=__w_pdfjs_require__(140),_canvas=__w_pdfjs_require__(141),_worker_options=__w_pdfjs_require__(144),_is_node=__w_pdfjs_require__(3),_message_handler=__w_pdfjs_require__(145),_metadata=__w_pdfjs_require__(146),_optional_content_config=__w_pdfjs_require__(147),_transport_stream=__w_pdfjs_require__(148),_xfa_text=__w_pdfjs_require__(149);function _classPrivateMethodInitSpec(t,e){_checkPrivateRedeclaration(t,e),e.add(t)}function _classPrivateMethodGet(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _createForOfIteratorHelper(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function _regeneratorRuntime(){_regeneratorRuntime=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,r){return t[e]=r}}function u(t,e,r,i){var a=e&&e.prototype instanceof f?e:f,o=Object.create(a.prototype),s=new x(i||[]);return n(o,"_invoke",{value:w(t,r,s)}),o}function c(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var h={};function f(){}function d(){}function p(){}var v={};l(v,a,(function(){return this}));var y=Object.getPrototypeOf,m=y&&y(y(E([])));m&&m!==e&&r.call(m,a)&&(v=m);var g=p.prototype=f.prototype=Object.create(v);function b(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function _(t,e){function i(n,a,o,s){var l=c(t[n],t,a);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==_typeof(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(h).then((function(t){u.value=t,o(u)}),(function(t){return i("throw",t,o,s)}))}s(l.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function w(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=A(o,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=c(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===h)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function A(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,A(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),h;var i=c(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,h;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,h):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,h)}function k(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function S(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function x(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(k,this),this.reset(!0)}function E(t){if(t){var e=t[a];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:P}}function P(){return{value:void 0,done:!0}}return d.prototype=p,n(g,"constructor",{value:p,configurable:!0}),n(p,"constructor",{value:d,configurable:!0}),d.displayName=l(p,s,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===d||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,l(t,s,"GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},b(_.prototype),l(_.prototype,o,(function(){return this})),t.AsyncIterator=_,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new _(u(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},b(g),l(g,s,"Generator"),l(g,a,(function(){return this})),l(g,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=E,x.prototype={constructor:x,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,h):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),h},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),S(r),h}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;S(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:E(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),h}},t}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){var e=_toPrimitive(t,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}function _classPrivateFieldInitSpec(t,e,r){_checkPrivateRedeclaration(t,e),e.set(t,r)}function _checkPrivateRedeclaration(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateFieldSet(t,e,r){return _classApplyDescriptorSet(t,_classExtractFieldDescriptor(t,e,"set"),r),r}function _classPrivateFieldGet(t,e){return _classApplyDescriptorGet(t,_classExtractFieldDescriptor(t,e,"get"))}function _classExtractFieldDescriptor(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}function _classStaticPrivateFieldSpecSet(t,e,r,n){return _classCheckPrivateStaticAccess(t,e),_classCheckPrivateStaticFieldDescriptor(r,"set"),_classApplyDescriptorSet(t,r,n),n}function _classApplyDescriptorSet(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}function _classStaticPrivateFieldSpecGet(t,e,r){return _classCheckPrivateStaticAccess(t,e),_classCheckPrivateStaticFieldDescriptor(r,"get"),_classApplyDescriptorGet(t,r)}function _classCheckPrivateStaticFieldDescriptor(t,e){if(void 0===t)throw new TypeError("attempted to "+e+" private static field before its declaration")}function _classCheckPrivateStaticAccess(t,e){if(t!==e)throw new TypeError("Private static access of wrong provenance")}function _classApplyDescriptorGet(t,e){return e.get?e.get.call(t):e.value}function asyncGeneratorStep(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function _asyncToGenerator(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function o(t){asyncGeneratorStep(a,n,i,o,s,"next",t)}function s(t){asyncGeneratorStep(a,n,i,o,s,"throw",t)}o(void 0)}))}}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function _iterableToArrayLimit(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}var DEFAULT_RANGE_CHUNK_SIZE=65536,RENDERING_CANCELLED_TIMEOUT=100,DefaultCanvasFactory=_display_utils.DOMCanvasFactory;exports.DefaultCanvasFactory=DefaultCanvasFactory;var DefaultCMapReaderFactory=_display_utils.DOMCMapReaderFactory;exports.DefaultCMapReaderFactory=DefaultCMapReaderFactory;var DefaultStandardFontDataFactory=_display_utils.DOMStandardFontDataFactory,createPDFNetworkStream;if(exports.DefaultStandardFontDataFactory=DefaultStandardFontDataFactory,_is_node.isNodeJS){var _require=__w_pdfjs_require__(150),NodeCanvasFactory=_require.NodeCanvasFactory,NodeCMapReaderFactory=_require.NodeCMapReaderFactory,NodeStandardFontDataFactory=_require.NodeStandardFontDataFactory;exports.DefaultCanvasFactory=DefaultCanvasFactory=NodeCanvasFactory,exports.DefaultCMapReaderFactory=DefaultCMapReaderFactory=NodeCMapReaderFactory,exports.DefaultStandardFontDataFactory=DefaultStandardFontDataFactory=NodeStandardFontDataFactory}function setPDFNetworkStreamFactory(t){createPDFNetworkStream=t}function getDocument(t){var e,r=new PDFDocumentLoadingTask;if("string"==typeof t||t instanceof URL)e={url:t};else if((0,_util.isArrayBuffer)(t))e={data:t};else if(t instanceof PDFDataRangeTransport)e={range:t};else{if("object"!==_typeof(t))throw new Error("Invalid parameter in getDocument, need either string, URL, TypedArray, or parameter object.");if(!t.url&&!t.data&&!t.range)throw new Error("Invalid parameter object: need either .data, .range or .url");e=t}var n=Object.create(null),i=null,a=null;for(var o in e){var s=e[o];switch(o){case"url":if("undefined"!=typeof window)try{n[o]=new URL(s,window.location).href;continue}catch(t){(0,_util.warn)('Cannot create valid URL: "'.concat(t,'".'))}else if("string"==typeof s||s instanceof URL){n[o]=s.toString();continue}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.");case"range":i=s;continue;case"worker":a=s;continue;case"data":if(_is_node.isNodeJS&&"undefined"!=typeof Buffer&&s instanceof Buffer)n[o]=new Uint8Array(s);else{if(s instanceof Uint8Array)break;if("string"==typeof s)n[o]=(0,_util.stringToBytes)(s);else if("object"!==_typeof(s)||null===s||isNaN(s.length)){if(!(0,_util.isArrayBuffer)(s))throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.");n[o]=new Uint8Array(s)}else n[o]=new Uint8Array(s)}continue}n[o]=s}if(n.CMapReaderFactory=n.CMapReaderFactory||DefaultCMapReaderFactory,n.StandardFontDataFactory=n.StandardFontDataFactory||DefaultStandardFontDataFactory,n.ignoreErrors=!0!==n.stopAtErrors,n.fontExtraProperties=!0===n.fontExtraProperties,n.pdfBug=!0===n.pdfBug,n.enableXfa=!0===n.enableXfa,(!Number.isInteger(n.rangeChunkSize)||n.rangeChunkSize<1)&&(n.rangeChunkSize=DEFAULT_RANGE_CHUNK_SIZE),("string"!=typeof n.docBaseUrl||(0,_display_utils.isDataScheme)(n.docBaseUrl))&&(n.docBaseUrl=null),(!Number.isInteger(n.maxImageSize)||n.maxImageSize<-1)&&(n.maxImageSize=-1),"string"!=typeof n.cMapUrl&&(n.cMapUrl=null),"string"!=typeof n.standardFontDataUrl&&(n.standardFontDataUrl=null),"boolean"!=typeof n.useWorkerFetch&&(n.useWorkerFetch=n.CMapReaderFactory===_display_utils.DOMCMapReaderFactory&&n.StandardFontDataFactory===_display_utils.DOMStandardFontDataFactory),"boolean"!=typeof n.isEvalSupported&&(n.isEvalSupported=!0),"boolean"!=typeof n.isOffscreenCanvasSupported&&(n.isOffscreenCanvasSupported=!_is_node.isNodeJS),"boolean"!=typeof n.disableFontFace&&(n.disableFontFace=_is_node.isNodeJS),"boolean"!=typeof n.useSystemFonts&&(n.useSystemFonts=!_is_node.isNodeJS&&!n.disableFontFace),"object"===_typeof(n.ownerDocument)&&null!==n.ownerDocument||(n.ownerDocument=globalThis.document),"boolean"!=typeof n.disableRange&&(n.disableRange=!1),"boolean"!=typeof n.disableStream&&(n.disableStream=!1),"boolean"!=typeof n.disableAutoFetch&&(n.disableAutoFetch=!1),(0,_util.setVerbosityLevel)(n.verbosity),!a){var l={verbosity:n.verbosity,port:_worker_options.GlobalWorkerOptions.workerPort};a=l.port?PDFWorker.fromPort(l):new PDFWorker(l),r._worker=a}var u=r.docId;return a.promise.then((function(){if(r.destroyed)throw new Error("Loading aborted");var t=_fetchDocument(a,n,i,u),e=new Promise((function(t){var e;i?e=new _transport_stream.PDFDataTransportStream({length:n.length,initialData:n.initialData,progressiveDone:n.progressiveDone,contentDispositionFilename:n.contentDispositionFilename,disableRange:n.disableRange,disableStream:n.disableStream},i):n.data||(e=createPDFNetworkStream({url:n.url,length:n.length,httpHeaders:n.httpHeaders,withCredentials:n.withCredentials,rangeChunkSize:n.rangeChunkSize,disableRange:n.disableRange,disableStream:n.disableStream})),t(e)}));return Promise.all([t,e]).then((function(t){var e=_slicedToArray(t,2),i=e[0],o=e[1];if(r.destroyed)throw new Error("Loading aborted");var s=new _message_handler.MessageHandler(u,i,a.port),l=new WorkerTransport(s,r,o,n);r._transport=l,s.send("Ready",null)}))})).catch(r._capability.reject),r}function _fetchDocument(t,e,r,n){return _fetchDocument2.apply(this,arguments)}function _fetchDocument2(){return(_fetchDocument2=_asyncToGenerator(_regeneratorRuntime().mark((function t(e,r,n,i){var a;return _regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.destroyed){t.next=2;break}throw new Error("Worker was destroyed");case 2:return n&&(r.length=n.length,r.initialData=n.initialData,r.progressiveDone=n.progressiveDone,r.contentDispositionFilename=n.contentDispositionFilename),t.next=5,e.messageHandler.sendWithPromise("GetDocRequest",{docId:i,apiVersion:"3.2.0",data:r.data,password:r.password,disableAutoFetch:r.disableAutoFetch,rangeChunkSize:r.rangeChunkSize,length:r.length,docBaseUrl:r.docBaseUrl,enableXfa:r.enableXfa,evaluatorOptions:{maxImageSize:r.maxImageSize,disableFontFace:r.disableFontFace,ignoreErrors:r.ignoreErrors,isEvalSupported:r.isEvalSupported,isOffscreenCanvasSupported:r.isOffscreenCanvasSupported,fontExtraProperties:r.fontExtraProperties,useSystemFonts:r.useSystemFonts,cMapUrl:r.useWorkerFetch?r.cMapUrl:null,standardFontDataUrl:r.useWorkerFetch?r.standardFontDataUrl:null}});case 5:if(a=t.sent,r.data&&(r.data=null),!e.destroyed){t.next=9;break}throw new Error("Worker was destroyed");case 9:return t.abrupt("return",a);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var _onUnsupportedFeature=new WeakMap,PDFDocumentLoadingTask=function(){function t(){var e,r;_classCallCheck(this,t),_classPrivateFieldInitSpec(this,_onUnsupportedFeature,{writable:!0,value:null}),this._capability=(0,_util.createPromiseCapability)(),this._transport=null,this._worker=null,this.docId="d".concat((_classStaticPrivateFieldSpecSet(t,t,_docId,(e=_classStaticPrivateFieldSpecGet(t,t,_docId),r=e++,e)),r)),this.destroyed=!1,this.onPassword=null,this.onProgress=null}var e;return _createClass(t,[{key:"onUnsupportedFeature",get:function(){return _classPrivateFieldGet(this,_onUnsupportedFeature)},set:function(t){(0,_display_utils.deprecated)("The PDFDocumentLoadingTask onUnsupportedFeature property will be removed in the future."),_classPrivateFieldSet(this,_onUnsupportedFeature,t)}},{key:"promise",get:function(){return this._capability.promise}},{key:"destroy",value:(e=_asyncToGenerator(_regeneratorRuntime().mark((function t(){var e;return _regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.destroyed=!0,t.next=3,null===(e=this._transport)||void 0===e?void 0:e.destroy();case 3:this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null);case 5:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})}]),t}();exports.PDFDocumentLoadingTask=PDFDocumentLoadingTask;var _docId={writable:!0,value:0},PDFDataRangeTransport=function(){function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;_classCallCheck(this,t),this.length=e,this.initialData=r,this.progressiveDone=n,this.contentDispositionFilename=i,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=(0,_util.createPromiseCapability)()}return _createClass(t,[{key:"addRangeListener",value:function(t){this._rangeListeners.push(t)}},{key:"addProgressListener",value:function(t){this._progressListeners.push(t)}},{key:"addProgressiveReadListener",value:function(t){this._progressiveReadListeners.push(t)}},{key:"addProgressiveDoneListener",value:function(t){this._progressiveDoneListeners.push(t)}},{key:"onDataRange",value:function(t,e){var r,n=_createForOfIteratorHelper(this._rangeListeners);try{for(n.s();!(r=n.n()).done;)(0,r.value)(t,e)}catch(t){n.e(t)}finally{n.f()}}},{key:"onDataProgress",value:function(t,e){var r=this;this._readyCapability.promise.then((function(){var n,i=_createForOfIteratorHelper(r._progressListeners);try{for(i.s();!(n=i.n()).done;)(0,n.value)(t,e)}catch(t){i.e(t)}finally{i.f()}}))}},{key:"onDataProgressiveRead",value:function(t){var e=this;this._readyCapability.promise.then((function(){var r,n=_createForOfIteratorHelper(e._progressiveReadListeners);try{for(n.s();!(r=n.n()).done;)(0,r.value)(t)}catch(t){n.e(t)}finally{n.f()}}))}},{key:"onDataProgressiveDone",value:function(){var t=this;this._readyCapability.promise.then((function(){var e,r=_createForOfIteratorHelper(t._progressiveDoneListeners);try{for(r.s();!(e=r.n()).done;)(0,e.value)()}catch(t){r.e(t)}finally{r.f()}}))}},{key:"transportReady",value:function(){this._readyCapability.resolve()}},{key:"requestDataRange",value:function(t,e){(0,_util.unreachable)("Abstract method PDFDataRangeTransport.requestDataRange")}},{key:"abort",value:function(){}}]),t}();exports.PDFDataRangeTransport=PDFDataRangeTransport;var PDFDocumentProxy=function(){function t(e,r){_classCallCheck(this,t),this._pdfInfo=e,this._transport=r}return _createClass(t,[{key:"annotationStorage",get:function(){return this._transport.annotationStorage}},{key:"numPages",get:function(){return this._pdfInfo.numPages}},{key:"fingerprints",get:function(){return this._pdfInfo.fingerprints}},{key:"stats",get:function(){return(0,_display_utils.deprecated)("The PDFDocumentProxy stats property will be removed in the future."),this._transport.stats}},{key:"isPureXfa",get:function(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}},{key:"allXfaHtml",get:function(){return this._transport._htmlForXfa}},{key:"getPage",value:function(t){return this._transport.getPage(t)}},{key:"getPageIndex",value:function(t){return this._transport.getPageIndex(t)}},{key:"getDestinations",value:function(){return this._transport.getDestinations()}},{key:"getDestination",value:function(t){return this._transport.getDestination(t)}},{key:"getPageLabels",value:function(){return this._transport.getPageLabels()}},{key:"getPageLayout",value:function(){return this._transport.getPageLayout()}},{key:"getPageMode",value:function(){return this._transport.getPageMode()}},{key:"getViewerPreferences",value:function(){return this._transport.getViewerPreferences()}},{key:"getOpenAction",value:function(){return this._transport.getOpenAction()}},{key:"getAttachments",value:function(){return this._transport.getAttachments()}},{key:"getJavaScript",value:function(){return this._transport.getJavaScript()}},{key:"getJSActions",value:function(){return this._transport.getDocJSActions()}},{key:"getOutline",value:function(){return this._transport.getOutline()}},{key:"getOptionalContentConfig",value:function(){return this._transport.getOptionalContentConfig()}},{key:"getPermissions",value:function(){return this._transport.getPermissions()}},{key:"getMetadata",value:function(){return this._transport.getMetadata()}},{key:"getMarkInfo",value:function(){return this._transport.getMarkInfo()}},{key:"getData",value:function(){return this._transport.getData()}},{key:"saveDocument",value:function(){return this._transport.saveDocument()}},{key:"getDownloadInfo",value:function(){return this._transport.downloadInfoCapability.promise}},{key:"cleanup",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._transport.startCleanup(t||this.isPureXfa)}},{key:"destroy",value:function(){return this.loadingTask.destroy()}},{key:"loadingParams",get:function(){return this._transport.loadingParams}},{key:"loadingTask",get:function(){return this._transport.loadingTask}},{key:"getFieldObjects",value:function(){return this._transport.getFieldObjects()}},{key:"hasJSActions",value:function(){return this._transport.hasJSActions()}},{key:"getCalculationOrderIds",value:function(){return this._transport.getCalculationOrderIds()}}]),t}();exports.PDFDocumentProxy=PDFDocumentProxy;var PDFPageProxy=function(){function t(e,r,n,i){var a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];_classCallCheck(this,t),this._pageIndex=e,this._pageInfo=r,this._ownerDocument=i,this._transport=n,this._stats=a?new _display_utils.StatTimer:null,this._pdfBug=a,this.commonObjs=n.commonObjs,this.objs=new PDFObjects,this._bitmaps=new Set,this.cleanupAfterRender=!1,this.pendingCleanup=!1,this._intentStates=new Map,this.destroyed=!1}var e;return _createClass(t,[{key:"pageNumber",get:function(){return this._pageIndex+1}},{key:"rotate",get:function(){return this._pageInfo.rotate}},{key:"ref",get:function(){return this._pageInfo.ref}},{key:"userUnit",get:function(){return this._pageInfo.userUnit}},{key:"view",get:function(){return this._pageInfo.view}},{key:"getViewport",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.scale,r=t.rotation,n=void 0===r?this.rotate:r,i=t.offsetX,a=void 0===i?0:i,o=t.offsetY,s=void 0===o?0:o,l=t.dontFlip,u=void 0!==l&&l;return new _display_utils.PageViewport({viewBox:this.view,scale:e,rotation:n,offsetX:a,offsetY:s,dontFlip:u})}},{key:"getAnnotations",value:function(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).intent,e=void 0===t?"display":t,r=this._transport.getRenderingIntent(e);return this._transport.getAnnotations(this._pageIndex,r.renderingIntent)}},{key:"getJSActions",value:function(){return this._transport.getPageJSActions(this._pageIndex)}},{key:"isPureXfa",get:function(){return(0,_util.shadow)(this,"isPureXfa",!!this._transport._htmlForXfa)}},{key:"getXfa",value:(e=_asyncToGenerator(_regeneratorRuntime().mark((function t(){var e;return _regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",(null===(e=this._transport._htmlForXfa)||void 0===e?void 0:e.children[this._pageIndex])||null);case 1:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"render",value:function(t){var e,r,n=this,i=t.canvasContext,a=t.viewport,o=t.intent,s=void 0===o?"display":o,l=t.annotationMode,u=void 0===l?_util.AnnotationMode.ENABLE:l,c=t.transform,h=void 0===c?null:c,f=t.canvasFactory,d=void 0===f?null:f,p=t.background,v=void 0===p?null:p,y=t.optionalContentConfigPromise,m=void 0===y?null:y,g=t.annotationCanvasMap,b=void 0===g?null:g,_=t.pageColors,w=void 0===_?null:_,A=t.printAnnotationStorage,k=void 0===A?null:A;null===(e=this._stats)||void 0===e||e.time("Overall");var S=this._transport.getRenderingIntent(s,u,k);this.pendingCleanup=!1,m||(m=this._transport.getOptionalContentConfig());var x=this._intentStates.get(S.cacheKey);x||(x=Object.create(null),this._intentStates.set(S.cacheKey,x)),x.streamReaderCancelTimeout&&(clearTimeout(x.streamReaderCancelTimeout),x.streamReaderCancelTimeout=null);var E,P=d||new DefaultCanvasFactory({ownerDocument:this._ownerDocument}),T=!!(S.renderingIntent&_util.RenderingIntentFlag.PRINT);x.displayReadyCapability||(x.displayReadyCapability=(0,_util.createPromiseCapability)(),x.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},null===(E=this._stats)||void 0===E||E.time("Page Request"),this._pumpOperatorList(S));var C=function(t){var e,r;x.renderTasks.delete(O),(n.cleanupAfterRender||T)&&(n.pendingCleanup=!0),n._tryCleanup(),t?(O.capability.reject(t),n._abortOperatorList({intentState:x,reason:t instanceof Error?t:new Error(t)})):O.capability.resolve(),null===(e=n._stats)||void 0===e||e.timeEnd("Rendering"),null===(r=n._stats)||void 0===r||r.timeEnd("Overall")},O=new InternalRenderTask({callback:C,params:{canvasContext:i,viewport:a,transform:h,background:v},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:b,operatorList:x.operatorList,pageIndex:this._pageIndex,canvasFactory:P,useRequestAnimationFrame:!T,pdfBug:this._pdfBug,pageColors:w});((r=x).renderTasks||(r.renderTasks=new Set)).add(O);var F=O.task;return Promise.all([x.displayReadyCapability.promise,m]).then((function(t){var e,r=_slicedToArray(t,2),i=r[0],a=r[1];n.pendingCleanup?C():(null===(e=n._stats)||void 0===e||e.time("Rendering"),O.initializeGraphics({transparency:i,optionalContentConfig:a}),O.operatorListChanged())})).catch(C),F}},{key:"getOperatorList",value:function(){var t,e,r,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=n.intent,a=void 0===i?"display":i,o=n.annotationMode,s=void 0===o?_util.AnnotationMode.ENABLE:o,l=n.printAnnotationStorage,u=void 0===l?null:l,c=this._transport.getRenderingIntent(a,s,u,!0),h=this._intentStates.get(c.cacheKey);return h||(h=Object.create(null),this._intentStates.set(c.cacheKey,h)),h.opListReadCapability||((t=Object.create(null)).operatorListChanged=function(){h.operatorList.lastChunk&&(h.opListReadCapability.resolve(h.operatorList),h.renderTasks.delete(t))},h.opListReadCapability=(0,_util.createPromiseCapability)(),((e=h).renderTasks||(e.renderTasks=new Set)).add(t),h.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},null===(r=this._stats)||void 0===r||r.time("Page Request"),this._pumpOperatorList(c)),h.opListReadCapability.promise}},{key:"streamTextContent",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.disableCombineTextItems,r=void 0!==e&&e,n=t.includeMarkedContent,i=void 0!==n&&n;return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,combineTextItems:!0!==r,includeMarkedContent:!0===i},{highWaterMark:100,size:function(t){return t.items.length}})}},{key:"getTextContent",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._transport._htmlForXfa)return this.getXfa().then((function(t){return _xfa_text.XfaText.textContent(t)}));var e=this.streamTextContent(t);return new Promise((function(t,r){var n=e.getReader(),i={items:[],styles:Object.create(null)};!function e(){n.read().then((function(r){var n,a=r.value;r.done?t(i):(Object.assign(i.styles,a.styles),(n=i.items).push.apply(n,_toConsumableArray(a.items)),e())}),r)}()}))}},{key:"getStructTree",value:function(){return this._transport.getStructTree(this._pageIndex)}},{key:"_destroy",value:function(){this.destroyed=!0;var t,e=[],r=_createForOfIteratorHelper(this._intentStates.values());try{for(r.s();!(t=r.n()).done;){var n=t.value;if(this._abortOperatorList({intentState:n,reason:new Error("Page was destroyed."),force:!0}),!n.opListReadCapability){var i,a=_createForOfIteratorHelper(n.renderTasks);try{for(a.s();!(i=a.n()).done;){var o=i.value;e.push(o.completed),o.cancel()}}catch(t){a.e(t)}finally{a.f()}}}}catch(t){r.e(t)}finally{r.f()}this.objs.clear();var s,l=_createForOfIteratorHelper(this._bitmaps);try{for(l.s();!(s=l.n()).done;)s.value.close()}catch(t){l.e(t)}finally{l.f()}return this._bitmaps.clear(),this.pendingCleanup=!1,Promise.all(e)}},{key:"cleanup",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.pendingCleanup=!0,this._tryCleanup(t)}},{key:"_tryCleanup",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.pendingCleanup)return!1;var e,r=_createForOfIteratorHelper(this._intentStates.values());try{for(r.s();!(e=r.n()).done;){var n=e.value,i=n.renderTasks,a=n.operatorList;if(i.size>0||!a.lastChunk)return!1}}catch(t){r.e(t)}finally{r.f()}this._intentStates.clear(),this.objs.clear(),t&&this._stats&&(this._stats=new _display_utils.StatTimer);var o,s=_createForOfIteratorHelper(this._bitmaps);try{for(s.s();!(o=s.n()).done;)o.value.close()}catch(t){s.e(t)}finally{s.f()}return this._bitmaps.clear(),this.pendingCleanup=!1,!0}},{key:"_startRenderPage",value:function(t,e){var r,n,i=this._intentStates.get(e);i&&(null===(r=this._stats)||void 0===r||r.timeEnd("Page Request"),null===(n=i.displayReadyCapability)||void 0===n||n.resolve(t))}},{key:"_renderPageChunk",value:function(t,e){for(var r=0,n=t.length;r<n;r++)e.operatorList.fnArray.push(t.fnArray[r]),e.operatorList.argsArray.push(t.argsArray[r]);e.operatorList.lastChunk=t.lastChunk,e.operatorList.separateAnnots=t.separateAnnots;var i,a=_createForOfIteratorHelper(e.renderTasks);try{for(a.s();!(i=a.n()).done;)i.value.operatorListChanged()}catch(t){a.e(t)}finally{a.f()}t.lastChunk&&this._tryCleanup()}},{key:"_pumpOperatorList",value:function(t){var e=this,r=t.renderingIntent,n=t.cacheKey,i=t.annotationStorageMap,a=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:r,cacheKey:n,annotationStorage:i}).getReader(),o=this._intentStates.get(n);o.streamReader=a,function t(){a.read().then((function(r){var n=r.value;r.done?o.streamReader=null:e._transport.destroyed||(e._renderPageChunk(n,o),t())}),(function(t){if(o.streamReader=null,!e._transport.destroyed){if(o.operatorList){o.operatorList.lastChunk=!0;var r,n=_createForOfIteratorHelper(o.renderTasks);try{for(n.s();!(r=n.n()).done;)r.value.operatorListChanged()}catch(t){n.e(t)}finally{n.f()}e._tryCleanup()}if(o.displayReadyCapability)o.displayReadyCapability.reject(t);else{if(!o.opListReadCapability)throw t;o.opListReadCapability.reject(t)}}}))}()}},{key:"_abortOperatorList",value:function(t){var e=this,r=t.intentState,n=t.reason,i=t.force,a=void 0!==i&&i;if(r.streamReader){if(r.streamReaderCancelTimeout&&(clearTimeout(r.streamReaderCancelTimeout),r.streamReaderCancelTimeout=null),!a){if(r.renderTasks.size>0)return;if(n instanceof _display_utils.RenderingCancelledException){var o=RENDERING_CANCELLED_TIMEOUT;return n.extraDelay>0&&n.extraDelay<1e3&&(o+=n.extraDelay),void(r.streamReaderCancelTimeout=setTimeout((function(){r.streamReaderCancelTimeout=null,e._abortOperatorList({intentState:r,reason:n,force:!0})}),o))}}if(r.streamReader.cancel(new _util.AbortException(n.message)).catch((function(){})),r.streamReader=null,!this._transport.destroyed){var s,l=_createForOfIteratorHelper(this._intentStates);try{for(l.s();!(s=l.n()).done;){var u=_slicedToArray(s.value,2),c=u[0];if(u[1]===r){this._intentStates.delete(c);break}}}catch(t){l.e(t)}finally{l.f()}this.cleanup()}}}},{key:"stats",get:function(){return this._stats}}]),t}();exports.PDFPageProxy=PDFPageProxy;var _listeners=new WeakMap,_deferred=new WeakMap,LoopbackPort=function(){function t(){_classCallCheck(this,t),_classPrivateFieldInitSpec(this,_listeners,{writable:!0,value:[]}),_classPrivateFieldInitSpec(this,_deferred,{writable:!0,value:Promise.resolve()})}return _createClass(t,[{key:"postMessage",value:function(t,e){var r=this,n={data:structuredClone(t,e)};_classPrivateFieldGet(this,_deferred).then((function(){var t,e=_createForOfIteratorHelper(_classPrivateFieldGet(r,_listeners));try{for(e.s();!(t=e.n()).done;)t.value.call(r,n)}catch(t){e.e(t)}finally{e.f()}}))}},{key:"addEventListener",value:function(t,e){_classPrivateFieldGet(this,_listeners).push(e)}},{key:"removeEventListener",value:function(t,e){var r=_classPrivateFieldGet(this,_listeners).indexOf(e);_classPrivateFieldGet(this,_listeners).splice(r,1)}},{key:"terminate",value:function(){_classPrivateFieldGet(this,_listeners).length=0}}]),t}();exports.LoopbackPort=LoopbackPort;var PDFWorkerUtil={isWorkerDisabled:!1,fallbackWorkerSrc:null,fakeWorkerId:0};if(exports.PDFWorkerUtil=PDFWorkerUtil,_is_node.isNodeJS&&"function"==typeof require)PDFWorkerUtil.isWorkerDisabled=!0,PDFWorkerUtil.fallbackWorkerSrc="./pdf.worker.js";else if("object"===("undefined"==typeof document?"undefined":_typeof(document))){var _document,_document$currentScri,pdfjsFilePath=null===(_document=document)||void 0===_document||null===(_document$currentScri=_document.currentScript)||void 0===_document$currentScri?void 0:_document$currentScri.src;pdfjsFilePath&&(PDFWorkerUtil.fallbackWorkerSrc=pdfjsFilePath.replace(/(\.(?:min\.)?js)(\?.*)?$/i,".worker$1$2"))}PDFWorkerUtil.isSameOrigin=function(t,e){var r;try{if(!(r=new URL(t)).origin||"null"===r.origin)return!1}catch(t){return!1}var n=new URL(e,r);return r.origin===n.origin},PDFWorkerUtil.createCDNWrapper=function(t){var e='importScripts("'.concat(t,'");');return URL.createObjectURL(new Blob([e]))};var PDFWorker=function(){function PDFWorker(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.name,r=void 0===e?null:e,n=t.port,i=void 0===n?null:n,a=t.verbosity,o=void 0===a?(0,_util.getVerbosityLevel)():a;if(_classCallCheck(this,PDFWorker),i&&_classStaticPrivateFieldSpecGet(PDFWorker,PDFWorker,_workerPorts).has(i))throw new Error("Cannot use more than one PDFWorker per port.");if(this.name=r,this.destroyed=!1,this.verbosity=o,this._readyCapability=(0,_util.createPromiseCapability)(),this._port=null,this._webWorker=null,this._messageHandler=null,i)return _classStaticPrivateFieldSpecGet(PDFWorker,PDFWorker,_workerPorts).set(i,this),void this._initializeFromPort(i);this._initialize()}return _createClass(PDFWorker,[{key:"promise",get:function(){return this._readyCapability.promise}},{key:"port",get:function(){return this._port}},{key:"messageHandler",get:function(){return this._messageHandler}},{key:"_initializeFromPort",value:function(t){this._port=t,this._messageHandler=new _message_handler.MessageHandler("main","worker",t),this._messageHandler.on("ready",(function(){})),this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}},{key:"_initialize",value:function(){var t=this;if(!PDFWorkerUtil.isWorkerDisabled&&!PDFWorker._mainThreadWorkerMessageHandler){var e=PDFWorker.workerSrc;try{PDFWorkerUtil.isSameOrigin(window.location.href,e)||(e=PDFWorkerUtil.createCDNWrapper(new URL(e,window.location).href));var r=new Worker(e),n=new _message_handler.MessageHandler("main","worker",r),i=function(){r.removeEventListener("error",a),n.destroy(),r.terminate(),t.destroyed?t._readyCapability.reject(new Error("Worker was destroyed")):t._setupFakeWorker()},a=function(){t._webWorker||i()};r.addEventListener("error",a),n.on("test",(function(e){r.removeEventListener("error",a),t.destroyed?i():e?(t._messageHandler=n,t._port=r,t._webWorker=r,t._readyCapability.resolve(),n.send("configure",{verbosity:t.verbosity})):(t._setupFakeWorker(),n.destroy(),r.terminate())})),n.on("ready",(function(e){if(r.removeEventListener("error",a),t.destroyed)i();else try{o()}catch(e){t._setupFakeWorker()}}));var o=function(){var t=new Uint8Array;n.send("test",t,[t.buffer])};return void o()}catch(t){(0,_util.info)("The worker has been disabled.")}}this._setupFakeWorker()}},{key:"_setupFakeWorker",value:function(){var t=this;PDFWorkerUtil.isWorkerDisabled||((0,_util.warn)("Setting up fake worker."),PDFWorkerUtil.isWorkerDisabled=!0),PDFWorker._setupFakeWorkerGlobal.then((function(e){if(t.destroyed)t._readyCapability.reject(new Error("Worker was destroyed"));else{var r=new LoopbackPort;t._port=r;var n="fake".concat(PDFWorkerUtil.fakeWorkerId++),i=new _message_handler.MessageHandler(n+"_worker",n,r);e.setup(i,r);var a=new _message_handler.MessageHandler(n,n+"_worker",r);t._messageHandler=a,t._readyCapability.resolve(),a.send("configure",{verbosity:t.verbosity})}})).catch((function(e){t._readyCapability.reject(new Error('Setting up fake worker failed: "'.concat(e.message,'".')))}))}},{key:"destroy",value:function(){this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),_classStaticPrivateFieldSpecGet(PDFWorker,PDFWorker,_workerPorts).delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}}],[{key:"fromPort",value:function(t){if(null==t||!t.port)throw new Error("PDFWorker.fromPort - invalid method signature.");return _classStaticPrivateFieldSpecGet(this,PDFWorker,_workerPorts).has(t.port)?_classStaticPrivateFieldSpecGet(this,PDFWorker,_workerPorts).get(t.port):new PDFWorker(t)}},{key:"workerSrc",get:function(){if(_worker_options.GlobalWorkerOptions.workerSrc)return _worker_options.GlobalWorkerOptions.workerSrc;if(null!==PDFWorkerUtil.fallbackWorkerSrc)return _is_node.isNodeJS||(0,_display_utils.deprecated)('No "GlobalWorkerOptions.workerSrc" specified.'),PDFWorkerUtil.fallbackWorkerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}},{key:"_mainThreadWorkerMessageHandler",get:function(){try{var t;return(null===(t=globalThis.pdfjsWorker)||void 0===t?void 0:t.WorkerMessageHandler)||null}catch(t){return null}}},{key:"_setupFakeWorkerGlobal",get:function get(){var _this10=this,loader=function(){var _ref15=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(){var mainWorkerMessageHandler,worker;return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:if(mainWorkerMessageHandler=_this10._mainThreadWorkerMessageHandler,!mainWorkerMessageHandler){_context3.next=3;break}return _context3.abrupt("return",mainWorkerMessageHandler);case 3:if(!_is_node.isNodeJS||"function"!=typeof require){_context3.next=6;break}return worker=eval("require")(_this10.workerSrc),_context3.abrupt("return",worker.WorkerMessageHandler);case 6:return _context3.next=8,(0,_display_utils.loadScript)(_this10.workerSrc);case 8:return _context3.abrupt("return",window.pdfjsWorker.WorkerMessageHandler);case 9:case"end":return _context3.stop()}}),_callee3)})));return function(){return _ref15.apply(this,arguments)}}();return(0,_util.shadow)(this,"_setupFakeWorkerGlobal",loader())}}]),PDFWorker}();exports.PDFWorker=PDFWorker;var _workerPorts={writable:!0,value:new WeakMap},_docStats=new WeakMap,_pageCache=new WeakMap,_pagePromises=new WeakMap,_metadataPromise=new WeakMap,WorkerTransport=function(){function t(e,r,n,i){_classCallCheck(this,t),_classPrivateFieldInitSpec(this,_docStats,{writable:!0,value:null}),_classPrivateFieldInitSpec(this,_pageCache,{writable:!0,value:new Map}),_classPrivateFieldInitSpec(this,_pagePromises,{writable:!0,value:new Map}),_classPrivateFieldInitSpec(this,_metadataPromise,{writable:!0,value:null}),this.messageHandler=e,this.loadingTask=r,this.commonObjs=new PDFObjects,this.fontLoader=new _font_loader.FontLoader({onUnsupportedFeature:this._onUnsupportedFeature.bind(this),ownerDocument:i.ownerDocument,styleElement:i.styleElement}),this._params=i,i.useWorkerFetch||(this.CMapReaderFactory=new i.CMapReaderFactory({baseUrl:i.cMapUrl,isCompressed:i.cMapPacked}),this.StandardFontDataFactory=new i.StandardFontDataFactory({baseUrl:i.standardFontDataUrl})),this.destroyed=!1,this.destroyCapability=null,this._passwordCapability=null,this._networkStream=n,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=(0,_util.createPromiseCapability)(),this.setupMessageHandler()}var e;return _createClass(t,[{key:"annotationStorage",get:function(){return(0,_util.shadow)(this,"annotationStorage",new _annotation_storage.AnnotationStorage)}},{key:"stats",get:function(){return _classPrivateFieldGet(this,_docStats)}},{key:"getRenderingIntent",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_util.AnnotationMode.ENABLE,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=_util.RenderingIntentFlag.DISPLAY,a=null;switch(t){case"any":i=_util.RenderingIntentFlag.ANY;break;case"display":break;case"print":i=_util.RenderingIntentFlag.PRINT;break;default:(0,_util.warn)("getRenderingIntent - invalid intent: ".concat(t))}switch(e){case _util.AnnotationMode.DISABLE:i+=_util.RenderingIntentFlag.ANNOTATIONS_DISABLE;break;case _util.AnnotationMode.ENABLE:break;case _util.AnnotationMode.ENABLE_FORMS:i+=_util.RenderingIntentFlag.ANNOTATIONS_FORMS;break;case _util.AnnotationMode.ENABLE_STORAGE:a=((i+=_util.RenderingIntentFlag.ANNOTATIONS_STORAGE)&_util.RenderingIntentFlag.PRINT&&r instanceof _annotation_storage.PrintAnnotationStorage?r:this.annotationStorage).serializable;break;default:(0,_util.warn)("getRenderingIntent - invalid annotationMode: ".concat(e))}return n&&(i+=_util.RenderingIntentFlag.OPLIST),{renderingIntent:i,cacheKey:"".concat(i,"_").concat(_annotation_storage.AnnotationStorage.getHash(a)),annotationStorageMap:a}}},{key:"destroy",value:function(){var t=this;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=(0,_util.createPromiseCapability)(),this._passwordCapability&&this._passwordCapability.reject(new Error("Worker was destroyed during onPassword callback"));var e,r=[],n=_createForOfIteratorHelper(_classPrivateFieldGet(this,_pageCache).values());try{for(n.s();!(e=n.n()).done;){var i=e.value;r.push(i._destroy())}}catch(t){n.e(t)}finally{n.f()}_classPrivateFieldGet(this,_pageCache).clear(),_classPrivateFieldGet(this,_pagePromises).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();var a=this.messageHandler.sendWithPromise("Terminate",null);return r.push(a),Promise.all(r).then((function(){t.commonObjs.clear(),t.fontLoader.clear(),_classPrivateFieldSet(t,_metadataPromise,null),t._getFieldObjectsPromise=null,t._hasJSActionsPromise=null,t._networkStream&&t._networkStream.cancelAllRequests(new _util.AbortException("Worker was terminated.")),t.messageHandler&&(t.messageHandler.destroy(),t.messageHandler=null),t.destroyCapability.resolve()}),this.destroyCapability.reject),this.destroyCapability.promise}},{key:"setupMessageHandler",value:function(){var t=this,e=this.messageHandler,r=this.loadingTask;e.on("GetReader",(function(e,r){(0,_util.assert)(t._networkStream,"GetReader - no `IPDFStream` instance available."),t._fullReader=t._networkStream.getFullReader(),t._fullReader.onProgress=function(e){t._lastProgress={loaded:e.loaded,total:e.total}},r.onPull=function(){t._fullReader.read().then((function(t){var e=t.value;t.done?r.close():((0,_util.assert)((0,_util.isArrayBuffer)(e),"GetReader - expected an ArrayBuffer."),r.enqueue(new Uint8Array(e),1,[e]))})).catch((function(t){r.error(t)}))},r.onCancel=function(e){t._fullReader.cancel(e),r.ready.catch((function(e){if(!t.destroyed)throw e}))}})),e.on("ReaderHeadersReady",(function(e){var n=(0,_util.createPromiseCapability)(),i=t._fullReader;return i.headersReady.then((function(){var e;i.isStreamingSupported&&i.isRangeSupported||(t._lastProgress&&(null===(e=r.onProgress)||void 0===e||e.call(r,t._lastProgress)),i.onProgress=function(t){var e;null===(e=r.onProgress)||void 0===e||e.call(r,{loaded:t.loaded,total:t.total})}),n.resolve({isStreamingSupported:i.isStreamingSupported,isRangeSupported:i.isRangeSupported,contentLength:i.contentLength})}),n.reject),n.promise})),e.on("GetRangeReader",(function(e,r){(0,_util.assert)(t._networkStream,"GetRangeReader - no `IPDFStream` instance available.");var n=t._networkStream.getRangeReader(e.begin,e.end);n?(r.onPull=function(){n.read().then((function(t){var e=t.value;t.done?r.close():((0,_util.assert)((0,_util.isArrayBuffer)(e),"GetRangeReader - expected an ArrayBuffer."),r.enqueue(new Uint8Array(e),1,[e]))})).catch((function(t){r.error(t)}))},r.onCancel=function(e){n.cancel(e),r.ready.catch((function(e){if(!t.destroyed)throw e}))}):r.close()})),e.on("GetDoc",(function(e){var n=e.pdfInfo;t._numPages=n.numPages,t._htmlForXfa=n.htmlForXfa,delete n.htmlForXfa,r._capability.resolve(new PDFDocumentProxy(n,t))})),e.on("DocException",(function(t){var e;switch(t.name){case"PasswordException":e=new _util.PasswordException(t.message,t.code);break;case"InvalidPDFException":e=new _util.InvalidPDFException(t.message);break;case"MissingPDFException":e=new _util.MissingPDFException(t.message);break;case"UnexpectedResponseException":e=new _util.UnexpectedResponseException(t.message,t.status);break;case"UnknownErrorException":e=new _util.UnknownErrorException(t.message,t.details);break;default:(0,_util.unreachable)("DocException - expected a valid Error.")}r._capability.reject(e)})),e.on("PasswordRequest",(function(e){if(t._passwordCapability=(0,_util.createPromiseCapability)(),r.onPassword)try{r.onPassword((function(e){e instanceof Error?t._passwordCapability.reject(e):t._passwordCapability.resolve({password:e})}),e.code)}catch(e){t._passwordCapability.reject(e)}else t._passwordCapability.reject(new _util.PasswordException(e.message,e.code));return t._passwordCapability.promise})),e.on("DataLoaded",(function(e){var n;null===(n=r.onProgress)||void 0===n||n.call(r,{loaded:e.length,total:e.length}),t.downloadInfoCapability.resolve(e)})),e.on("StartRenderPage",(function(e){t.destroyed||_classPrivateFieldGet(t,_pageCache).get(e.pageIndex)._startRenderPage(e.transparency,e.cacheKey)})),e.on("commonobj",(function(r){var n,i=_slicedToArray(r,3),a=i[0],o=i[1],s=i[2];if(!t.destroyed&&!t.commonObjs.has(a))switch(o){case"Font":var l=t._params;if("error"in s){var u=s.error;(0,_util.warn)("Error during font loading: ".concat(u)),t.commonObjs.resolve(a,u);break}var c=null;l.pdfBug&&null!==(n=globalThis.FontInspector)&&void 0!==n&&n.enabled&&(c={registerFont:function(t,e){globalThis.FontInspector.fontAdded(t,e)}});var h=new _font_loader.FontFaceObject(s,{isEvalSupported:l.isEvalSupported,disableFontFace:l.disableFontFace,ignoreErrors:l.ignoreErrors,onUnsupportedFeature:t._onUnsupportedFeature.bind(t),fontRegistry:c});t.fontLoader.bind(h).catch((function(t){return e.sendWithPromise("FontFallback",{id:a})})).finally((function(){!l.fontExtraProperties&&h.data&&(h.data=null),t.commonObjs.resolve(a,h)}));break;case"FontPath":case"Image":t.commonObjs.resolve(a,s);break;default:throw new Error("Got unknown common object type ".concat(o))}})),e.on("obj",(function(e){var r=_slicedToArray(e,4),n=r[0],i=r[1],a=r[2],o=r[3];if(!t.destroyed){var s=_classPrivateFieldGet(t,_pageCache).get(i);if(!s.objs.has(n))switch(a){case"Image":if(s.objs.resolve(n,o),o){var l;if(o.bitmap){var u=o.bitmap;l=o.width*o.height*4,s._bitmaps.add(u)}else{var c;l=(null===(c=o.data)||void 0===c?void 0:c.length)||0}l>8e6&&(s.cleanupAfterRender=!0)}break;case"Pattern":s.objs.resolve(n,o);break;default:throw new Error("Got unknown object type ".concat(a))}}})),e.on("DocProgress",(function(e){var n;t.destroyed||null===(n=r.onProgress)||void 0===n||n.call(r,{loaded:e.loaded,total:e.total})})),e.on("DocStats",(function(e){t.destroyed||_classPrivateFieldSet(t,_docStats,Object.freeze({streamTypes:Object.freeze(e.streamTypes),fontTypes:Object.freeze(e.fontTypes)}))})),e.on("UnsupportedFeature",this._onUnsupportedFeature.bind(this)),e.on("FetchBuiltInCMap",(function(e){return t.destroyed?Promise.reject(new Error("Worker was destroyed.")):t.CMapReaderFactory?t.CMapReaderFactory.fetch(e):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."))})),e.on("FetchStandardFontData",(function(e){return t.destroyed?Promise.reject(new Error("Worker was destroyed.")):t.StandardFontDataFactory?t.StandardFontDataFactory.fetch(e):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."))}))}},{key:"_onUnsupportedFeature",value:function(t){var e,r,n=t.featureId;this.destroyed||null===(e=(r=this.loadingTask).onUnsupportedFeature)||void 0===e||e.call(r,n)}},{key:"getData",value:function(){return this.messageHandler.sendWithPromise("GetData",null)}},{key:"saveDocument",value:function(){var t,e,r=this;return this.annotationStorage.size<=0&&(0,_util.warn)("saveDocument called while `annotationStorage` is empty, please use the getData-method instead."),this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:this.annotationStorage.serializable,filename:null!==(t=null===(e=this._fullReader)||void 0===e?void 0:e.filename)&&void 0!==t?t:null}).finally((function(){r.annotationStorage.resetModified()}))}},{key:"getPage",value:function(t){var e=this;if(!Number.isInteger(t)||t<=0||t>this._numPages)return Promise.reject(new Error("Invalid page request."));var r=t-1,n=_classPrivateFieldGet(this,_pagePromises).get(r);if(n)return n;var i=this.messageHandler.sendWithPromise("GetPage",{pageIndex:r}).then((function(t){if(e.destroyed)throw new Error("Transport destroyed");var n=new PDFPageProxy(r,t,e,e._params.ownerDocument,e._params.pdfBug);return _classPrivateFieldGet(e,_pageCache).set(r,n),n}));return _classPrivateFieldGet(this,_pagePromises).set(r,i),i}},{key:"getPageIndex",value:function(t){return"object"!==_typeof(t)||null===t||!Number.isInteger(t.num)||t.num<0||!Number.isInteger(t.gen)||t.gen<0?Promise.reject(new Error("Invalid pageIndex request.")):this.messageHandler.sendWithPromise("GetPageIndex",{num:t.num,gen:t.gen})}},{key:"getAnnotations",value:function(t,e){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:t,intent:e})}},{key:"getFieldObjects",value:function(){return this._getFieldObjectsPromise||(this._getFieldObjectsPromise=this.messageHandler.sendWithPromise("GetFieldObjects",null))}},{key:"hasJSActions",value:function(){return this._hasJSActionsPromise||(this._hasJSActionsPromise=this.messageHandler.sendWithPromise("HasJSActions",null))}},{key:"getCalculationOrderIds",value:function(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}},{key:"getDestinations",value:function(){return this.messageHandler.sendWithPromise("GetDestinations",null)}},{key:"getDestination",value:function(t){return"string"!=typeof t?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:t})}},{key:"getPageLabels",value:function(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}},{key:"getPageLayout",value:function(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}},{key:"getPageMode",value:function(){return this.messageHandler.sendWithPromise("GetPageMode",null)}},{key:"getViewerPreferences",value:function(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}},{key:"getOpenAction",value:function(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}},{key:"getAttachments",value:function(){return this.messageHandler.sendWithPromise("GetAttachments",null)}},{key:"getJavaScript",value:function(){return this.messageHandler.sendWithPromise("GetJavaScript",null)}},{key:"getDocJSActions",value:function(){return this.messageHandler.sendWithPromise("GetDocJSActions",null)}},{key:"getPageJSActions",value:function(t){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:t})}},{key:"getStructTree",value:function(t){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:t})}},{key:"getOutline",value:function(){return this.messageHandler.sendWithPromise("GetOutline",null)}},{key:"getOptionalContentConfig",value:function(){return this.messageHandler.sendWithPromise("GetOptionalContentConfig",null).then((function(t){return new _optional_content_config.OptionalContentConfig(t)}))}},{key:"getPermissions",value:function(){return this.messageHandler.sendWithPromise("GetPermissions",null)}},{key:"getMetadata",value:function(){var t=this;return _classPrivateFieldGet(this,_metadataPromise)||_classPrivateFieldSet(this,_metadataPromise,this.messageHandler.sendWithPromise("GetMetadata",null).then((function(e){var r,n,i,a;return{info:e[0],metadata:e[1]?new _metadata.Metadata(e[1]):null,contentDispositionFilename:null!==(r=null===(n=t._fullReader)||void 0===n?void 0:n.filename)&&void 0!==r?r:null,contentLength:null!==(i=null===(a=t._fullReader)||void 0===a?void 0:a.contentLength)&&void 0!==i?i:null}})))}},{key:"getMarkInfo",value:function(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}},{key:"startCleanup",value:(e=_asyncToGenerator(_regeneratorRuntime().mark((function t(){var e,r,n,i,a=arguments;return _regeneratorRuntime().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=a.length>0&&void 0!==a[0]&&a[0],!this.destroyed){t.next=3;break}return t.abrupt("return");case 3:return t.next=5,this.messageHandler.sendWithPromise("Cleanup",null);case 5:r=_createForOfIteratorHelper(_classPrivateFieldGet(this,_pageCache).values()),t.prev=6,r.s();case 8:if((n=r.n()).done){t.next=15;break}if((i=n.value).cleanup()){t.next=13;break}throw new Error("startCleanup: Page ".concat(i.pageNumber," is currently rendering."));case 13:t.next=8;break;case 15:t.next=20;break;case 17:t.prev=17,t.t0=t.catch(6),r.e(t.t0);case 20:return t.prev=20,r.f(),t.finish(20);case 23:this.commonObjs.clear(),e||this.fontLoader.clear(),_classPrivateFieldSet(this,_metadataPromise,null),this._getFieldObjectsPromise=null,this._hasJSActionsPromise=null;case 28:case"end":return t.stop()}}),t,this,[[6,17,20,23]])}))),function(){return e.apply(this,arguments)})},{key:"loadingParams",get:function(){var t=this._params;return(0,_util.shadow)(this,"loadingParams",{disableAutoFetch:t.disableAutoFetch,enableXfa:t.enableXfa})}}]),t}(),_objs=new WeakMap,_ensureObj=new WeakSet,PDFObjects=function(){function t(){_classCallCheck(this,t),_classPrivateMethodInitSpec(this,_ensureObj),_classPrivateFieldInitSpec(this,_objs,{writable:!0,value:Object.create(null)})}return _createClass(t,[{key:"get",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(e){var r=_classPrivateMethodGet(this,_ensureObj,_ensureObj2).call(this,t);return r.capability.promise.then((function(){return e(r.data)})),null}var n=_classPrivateFieldGet(this,_objs)[t];if(null==n||!n.capability.settled)throw new Error("Requesting object that isn't resolved yet ".concat(t,"."));return n.data}},{key:"has",value:function(t){var e=_classPrivateFieldGet(this,_objs)[t];return(null==e?void 0:e.capability.settled)||!1}},{key:"resolve",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=_classPrivateMethodGet(this,_ensureObj,_ensureObj2).call(this,t);r.data=e,r.capability.resolve()}},{key:"clear",value:function(){_classPrivateFieldSet(this,_objs,Object.create(null))}}]),t}();function _ensureObj2(t){return _classPrivateFieldGet(this,_objs)[t]||(_classPrivateFieldGet(this,_objs)[t]={capability:(0,_util.createPromiseCapability)(),data:null})}var _internalRenderTask=new WeakMap,RenderTask=function(){function t(e){_classCallCheck(this,t),_classPrivateFieldInitSpec(this,_internalRenderTask,{writable:!0,value:null}),_classPrivateFieldSet(this,_internalRenderTask,e),this.onContinue=null}return _createClass(t,[{key:"promise",get:function(){return _classPrivateFieldGet(this,_internalRenderTask).capability.promise}},{key:"cancel",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;_classPrivateFieldGet(this,_internalRenderTask).cancel(null,t)}},{key:"separateAnnots",get:function(){var t=_classPrivateFieldGet(this,_internalRenderTask).operatorList.separateAnnots;if(!t)return!1;var e=_classPrivateFieldGet(this,_internalRenderTask).annotationCanvasMap;return t.form||t.canvas&&(null==e?void 0:e.size)>0}}]),t}();exports.RenderTask=RenderTask;var InternalRenderTask=function(){function t(e){var r=e.callback,n=e.params,i=e.objs,a=e.commonObjs,o=e.annotationCanvasMap,s=e.operatorList,l=e.pageIndex,u=e.canvasFactory,c=e.useRequestAnimationFrame,h=void 0!==c&&c,f=e.pdfBug,d=void 0!==f&&f,p=e.pageColors,v=void 0===p?null:p;_classCallCheck(this,t),this.callback=r,this.params=n,this.objs=i,this.commonObjs=a,this.annotationCanvasMap=o,this.operatorListIdx=null,this.operatorList=s,this._pageIndex=l,this.canvasFactory=u,this._pdfBug=d,this.pageColors=v,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=!0===h&&"undefined"!=typeof window,this.cancelled=!1,this.capability=(0,_util.createPromiseCapability)(),this.task=new RenderTask(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=n.canvasContext.canvas}var e;return _createClass(t,[{key:"completed",get:function(){return this.capability.promise.catch((function(){}))}},{key:"initializeGraphics",value:function(e){var r,n,i=e.transparency,a=void 0!==i&&i,o=e.optionalContentConfig;if(!this.cancelled){if(this._canvas){if(_classStaticPrivateFieldSpecGet(t,t,_canvasInUse).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");_classStaticPrivateFieldSpecGet(t,t,_canvasInUse).add(this._canvas)}this._pdfBug&&null!==(r=globalThis.StepperManager)&&void 0!==r&&r.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());var s=this.params,l=s.canvasContext,u=s.viewport,c=s.transform,h=s.background;this.gfx=new _canvas.CanvasGraphics(l,this.commonObjs,this.objs,this.canvasFactory,{optionalContentConfig:o},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:c,viewport:u,transparency:a,background:h}),this.operatorListIdx=0,this.graphicsReady=!0,null===(n=this.graphicsReadyCallback)||void 0===n||n.call(this)}}},{key:"cancel",value:function(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.running=!1,this.cancelled=!0,null===(e=this.gfx)||void 0===e||e.endDrawing(),this._canvas&&_classStaticPrivateFieldSpecGet(t,t,_canvasInUse).delete(this._canvas),this.callback(r||new _display_utils.RenderingCancelledException("Rendering cancelled, page ".concat(this._pageIndex+1),"canvas",n))}},{key:"operatorListChanged",value:function(){var t;this.graphicsReady?(null===(t=this.stepper)||void 0===t||t.updateOperatorList(this.operatorList),this.running||this._continue()):this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound)}},{key:"_continue",value:function(){this.running=!0,this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}},{key:"_scheduleNext",value:function(){var t=this;this._useRequestAnimationFrame?window.requestAnimationFrame((function(){t._nextBound().catch(t._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}},{key:"_next",value:(e=_asyncToGenerator(_regeneratorRuntime().mark((function e(){return _regeneratorRuntime().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.cancelled){e.next=2;break}return e.abrupt("return");case 2:this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),this._canvas&&_classStaticPrivateFieldSpecGet(t,t,_canvasInUse).delete(this._canvas),this.callback()));case 4:case"end":return e.stop()}}),e,this)}))),function(){return e.apply(this,arguments)})}]),t}(),_canvasInUse={writable:!0,value:new WeakSet},version="3.2.0";exports.version=version;var build="";exports.build=build},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.PrintAnnotationStorage=e.AnnotationStorage=void 0;var i=r(1),a=r(135),o=r(139);function s(t,e){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},s(t,e)}function l(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function u(t){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},u(t)}function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||f(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=f(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function f(t,e){if(t){if("string"==typeof t)return d(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(t,e):void 0}}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function v(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function y(t,e,r){return e&&v(t.prototype,e),r&&v(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function m(t,e,r){g(t,e),e.set(t,r)}function g(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function b(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,w(t,e,"set"),r),r}function _(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,w(t,e,"get"))}function w(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var A=new WeakMap,k=new WeakMap,S=new WeakSet,x=function(){function t(){var e;p(this,t),g(this,e=S),e.add(this),m(this,A,{writable:!0,value:!1}),m(this,k,{writable:!0,value:new Map}),this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}return y(t,[{key:"getValue",value:function(t,e){var r=_(this,k).get(t);return void 0===r?e:Object.assign(e,r)}},{key:"getRawValue",value:function(t){return _(this,k).get(t)}},{key:"remove",value:function(t){if(_(this,k).delete(t),0===_(this,k).size&&this.resetModified(),"function"==typeof this.onAnnotationEditor){var e,r=h(_(this,k).values());try{for(r.s();!(e=r.n()).done;)if(e.value instanceof a.AnnotationEditor)return}catch(t){r.e(t)}finally{r.f()}this.onAnnotationEditor(null)}}},{key:"setValue",value:function(t,e){var r=_(this,k).get(t),n=!1;if(void 0!==r)for(var i=0,o=Object.entries(e);i<o.length;i++){var s=c(o[i],2),l=s[0],u=s[1];r[l]!==u&&(n=!0,r[l]=u)}else n=!0,_(this,k).set(t,e);n&&function(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}(this,S,E).call(this),e instanceof a.AnnotationEditor&&"function"==typeof this.onAnnotationEditor&&this.onAnnotationEditor(e.constructor._type)}},{key:"has",value:function(t){return _(this,k).has(t)}},{key:"getAll",value:function(){return _(this,k).size>0?(0,i.objectFromMap)(_(this,k)):null}},{key:"size",get:function(){return _(this,k).size}},{key:"resetModified",value:function(){_(this,A)&&(b(this,A,!1),"function"==typeof this.onResetModified&&this.onResetModified())}},{key:"print",get:function(){return new T(this)}},{key:"serializable",get:function(){if(0===_(this,k).size)return null;var t,e=new Map,r=h(_(this,k));try{for(r.s();!(t=r.n()).done;){var n=c(t.value,2),i=n[0],o=n[1],s=o instanceof a.AnnotationEditor?o.serialize():o;s&&e.set(i,s)}}catch(t){r.e(t)}finally{r.f()}return e}}],[{key:"getHash",value:function(t){if(!t)return"";var e,r=new o.MurmurHash3_64,n=h(t);try{for(n.s();!(e=n.n()).done;){var i=c(e.value,2),a=i[0],s=i[1];r.update("".concat(a,":").concat(JSON.stringify(s)))}}catch(t){n.e(t)}finally{n.f()}return r.hexdigest()}}]),t}();function E(){_(this,A)||(b(this,A,!0),"function"==typeof this.onSetModified&&this.onSetModified())}e.AnnotationStorage=x;var P=new WeakMap,T=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&s(t,e)}(o,t);var e,r,a=(e=o,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,i=u(e);if(r){var a=u(this).constructor;t=Reflect.construct(i,arguments,a)}else t=i.apply(this,arguments);return function(t,e){if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return l(t)}(this,t)});function o(t){var e;return p(this,o),m(l(e=a.call(this)),P,{writable:!0,value:null}),b(l(e),P,structuredClone(t.serializable)),e}return y(o,[{key:"print",get:function(){(0,i.unreachable)("Should not call PrintAnnotationStorage.print")}},{key:"serializable",get:function(){return _(this,P)}}]),o}(x);e.PrintAnnotationStorage=T},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.AnnotationEditor=void 0;var i=r(136),a=r(1);function o(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,c(n.key),n)}}function u(t,e,r){return(e=c(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}function h(t,e,r){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.set(t,r)}function f(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,p(t,e,"set"),r),r}function d(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,p(t,e,"get"))}function p(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var v=new WeakMap,y=new WeakMap,m=new WeakMap,g=new WeakMap,b=new WeakMap,_=new WeakMap,w=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),h(this,v,{writable:!0,value:this.focusin.bind(this)}),h(this,y,{writable:!0,value:this.focusout.bind(this)}),h(this,m,{writable:!0,value:!1}),h(this,g,{writable:!0,value:!1}),h(this,b,{writable:!0,value:!1}),u(this,"_uiManager",null),h(this,_,{writable:!0,value:t._zIndex++}),this.constructor===t&&(0,a.unreachable)("Cannot initialize AnnotationEditor."),this.parent=e.parent,this.id=e.id,this.width=this.height=null,this.pageIndex=e.parent.pageIndex,this.name=e.name,this.div=null,this._uiManager=e.uiManager;var r=this.parent.viewport,n=r.rotation,i=r.rawDims,s=i.pageWidth,l=i.pageHeight,c=i.pageX,f=i.pageY;this.rotation=n,this.pageDimensions=[s,l],this.pageTranslation=[c,f];var d=o(this.parentDimensions,2),p=d[0],w=d[1];this.x=e.x/p,this.y=e.y/w,this.isAttachedToDOM=!1}var e,r,n;return e=t,n=[{key:"_defaultLineColor",get:function(){return(0,a.shadow)(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}},{key:"deserialize",value:function(t,e,r){var n=new this.prototype.constructor({parent:e,id:e.getNextId(),uiManager:r});n.rotation=t.rotation;var i=o(n.pageDimensions,2),a=i[0],s=i[1],l=o(n.getRectInCurrentCoords(t.rect,s),4),u=l[0],c=l[1],h=l[2],f=l[3];return n.x=u/a,n.y=c/s,n.width=h/a,n.height=f/s,n}}],(r=[{key:"addCommands",value:function(t){this._uiManager.addCommands(t)}},{key:"currentLayer",get:function(){return this._uiManager.currentLayer}},{key:"setInBackground",value:function(){this.div.style.zIndex=0}},{key:"setInForeground",value:function(){this.div.style.zIndex=d(this,_)}},{key:"setParent",value:function(t){null!==t&&(this.pageIndex=t.pageIndex,this.pageDimensions=t.pageDimensions),this.parent=t}},{key:"focusin",value:function(t){d(this,m)?f(this,m,!1):this.parent.setSelected(this)}},{key:"focusout",value:function(t){var e;if(this.isAttachedToDOM){var r=t.relatedTarget;null!=r&&r.closest("#".concat(this.id))||(t.preventDefault(),null!==(e=this.parent)&&void 0!==e&&e.isMultipleSelection||this.commitOrRemove())}}},{key:"commitOrRemove",value:function(){this.isEmpty()?this.remove():this.commit()}},{key:"commit",value:function(){this.addToAnnotationStorage()}},{key:"addToAnnotationStorage",value:function(){this._uiManager.addToAnnotationStorage(this)}},{key:"dragstart",value:function(t){var e=this.parent.div.getBoundingClientRect();this.startX=t.clientX-e.x,this.startY=t.clientY-e.y,t.dataTransfer.setData("text/plain",this.id),t.dataTransfer.effectAllowed="move"}},{key:"setAt",value:function(t,e,r,n){var i=o(this.parentDimensions,2),a=i[0],s=i[1],l=o(this.screenToPageTranslation(r,n),2);r=l[0],n=l[1],this.x=(t+r)/a,this.y=(e+n)/s,this.div.style.left="".concat(100*this.x,"%"),this.div.style.top="".concat(100*this.y,"%")}},{key:"translate",value:function(t,e){var r=o(this.parentDimensions,2),n=r[0],i=r[1],a=o(this.screenToPageTranslation(t,e),2);t=a[0],e=a[1],this.x+=t/n,this.y+=e/i,this.div.style.left="".concat(100*this.x,"%"),this.div.style.top="".concat(100*this.y,"%")}},{key:"screenToPageTranslation",value:function(t,e){switch(this.parentRotation){case 90:return[e,-t];case 180:return[-t,-e];case 270:return[-e,t];default:return[t,e]}}},{key:"parentScale",get:function(){return this._uiManager.viewParameters.realScale}},{key:"parentRotation",get:function(){return this._uiManager.viewParameters.rotation}},{key:"parentDimensions",get:function(){var t=this._uiManager.viewParameters.realScale,e=o(this.pageDimensions,2);return[e[0]*t,e[1]*t]}},{key:"setDims",value:function(t,e){var r=o(this.parentDimensions,2),n=r[0],i=r[1];this.div.style.width="".concat(100*t/n,"%"),this.div.style.height="".concat(100*e/i,"%")}},{key:"fixDims",value:function(){var t=this.div.style,e=t.height,r=t.width,n=r.endsWith("%"),i=e.endsWith("%");if(!n||!i){var a=o(this.parentDimensions,2),s=a[0],l=a[1];n||(t.width="".concat(100*parseFloat(r)/s,"%")),i||(t.height="".concat(100*parseFloat(e)/l,"%"))}}},{key:"getInitialTranslation",value:function(){return[0,0]}},{key:"render",value:function(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.setAttribute("tabIndex",0),this.setInForeground(),this.div.addEventListener("focusin",d(this,v)),this.div.addEventListener("focusout",d(this,y));var t=o(this.getInitialTranslation(),2),e=t[0],r=t[1];return this.translate(e,r),(0,i.bindEvents)(this,this.div,["dragstart","pointerdown"]),this.div}},{key:"pointerdown",value:function(t){var e=a.FeatureTest.platform.isMac;0!==t.button||t.ctrlKey&&e?t.preventDefault():(t.ctrlKey&&!e||t.shiftKey||t.metaKey&&e?this.parent.toggleSelected(this):this.parent.setSelected(this),f(this,m,!0))}},{key:"getRect",value:function(t,e){var r=this.parentScale,n=o(this.pageDimensions,2),i=n[0],a=n[1],s=o(this.pageTranslation,2),l=s[0],u=s[1],c=t/r,h=e/r,f=this.x*i,d=this.y*a,p=this.width*i,v=this.height*a;switch(this.rotation){case 0:return[f+c+l,a-d-h-v+u,f+c+p+l,a-d-h+u];case 90:return[f+h+l,a-d+c+u,f+h+v+l,a-d+c+p+u];case 180:return[f-c-p+l,a-d+h+u,f-c+l,a-d+h+v+u];case 270:return[f-h-v+l,a-d-c-p+u,f-h+l,a-d-c+u];default:throw new Error("Invalid rotation")}}},{key:"getRectInCurrentCoords",value:function(t,e){var r=o(t,4),n=r[0],i=r[1],a=r[2],s=r[3],l=a-n,u=s-i;switch(this.rotation){case 0:return[n,e-s,l,u];case 90:return[n,e-i,u,l];case 180:return[a,e-i,l,u];case 270:return[a,e-s,u,l];default:throw new Error("Invalid rotation")}}},{key:"onceAdded",value:function(){}},{key:"isEmpty",value:function(){return!1}},{key:"enableEditMode",value:function(){f(this,b,!0)}},{key:"disableEditMode",value:function(){f(this,b,!1)}},{key:"isInEditMode",value:function(){return d(this,b)}},{key:"shouldGetKeyboardEvents",value:function(){return!1}},{key:"needsToBeRebuilt",value:function(){return this.div&&!this.isAttachedToDOM}},{key:"rebuild",value:function(){var t;null===(t=this.div)||void 0===t||t.addEventListener("focusin",d(this,v))}},{key:"serialize",value:function(){(0,a.unreachable)("An editor must be serializable")}},{key:"remove",value:function(){this.div.removeEventListener("focusin",d(this,v)),this.div.removeEventListener("focusout",d(this,y)),this.isEmpty()||this.commit(),this.parent.remove(this)}},{key:"select",value:function(){var t;null===(t=this.div)||void 0===t||t.classList.add("selectedEditor")}},{key:"unselect",value:function(){var t;null===(t=this.div)||void 0===t||t.classList.remove("selectedEditor")}},{key:"updateParams",value:function(t,e){}},{key:"disableEditing",value:function(){}},{key:"enableEditing",value:function(){}},{key:"propertiesToUpdate",get:function(){return{}}},{key:"contentDiv",get:function(){return this.div}},{key:"isEditing",get:function(){return d(this,g)},set:function(t){f(this,g,t),t?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null)}}])&&l(e.prototype,r),n&&l(e,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.AnnotationEditor=w,u(w,"_colorManager",new i.ColorManager),u(w,"_zIndex",1)},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.KeyboardManager=e.CommandManager=e.ColorManager=e.AnnotationEditorUIManager=void 0,e.bindEvents=function(t,e,r){var n,i=_(r);try{for(i.s();!(n=i.n()).done;){var a=n.value;e.addEventListener(a,t[a].bind(t))}}catch(t){i.e(t)}finally{i.f()}},e.opacityToHex=function(t){return Math.round(Math.min(255,Math.max(1,255*t))).toString(16).padStart(2,"0")};var i=r(1),a=r(137);function o(t){return function(t){if(Array.isArray(t))return A(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||w(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e,r){return(e=p(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||w(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){y(t,e),e.add(t)}function c(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function f(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,p(n.key),n)}}function d(t,e,r){return e&&f(t.prototype,e),r&&f(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function p(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}function v(t,e,r){y(t,e),e.set(t,r)}function y(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function m(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,b(t,e,"set"),r),r}function g(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,b(t,e,"get"))}function b(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}function _(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=w(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function w(t,e){if(t){if("string"==typeof t)return A(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?A(t,e):void 0}}function A(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var k=new WeakMap,S=function(){function t(){h(this,t),v(this,k,{writable:!0,value:0})}return d(t,[{key:"getId",value:function(){var t,e;return"".concat(i.AnnotationEditorPrefix).concat((m(this,k,(t=g(this,k),e=t++,t)),e))}}]),t}(),x=new WeakMap,E=new WeakMap,P=new WeakMap,T=new WeakMap,C=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:128;h(this,t),v(this,x,{writable:!0,value:[]}),v(this,E,{writable:!0,value:!1}),v(this,P,{writable:!0,value:void 0}),v(this,T,{writable:!0,value:-1}),m(this,P,e)}return d(t,[{key:"add",value:function(t){var e=t.cmd,r=t.undo,n=t.mustExec,i=t.type,a=void 0===i?NaN:i,o=t.overwriteIfSameType,s=void 0!==o&&o,l=t.keepUndo,u=void 0!==l&&l;if(n&&e(),!g(this,E)){var c={cmd:e,undo:r,type:a};if(-1===g(this,T))return g(this,x).length>0&&(g(this,x).length=0),m(this,T,0),void g(this,x).push(c);if(s&&g(this,x)[g(this,T)].type===a)return u&&(c.undo=g(this,x)[g(this,T)].undo),void(g(this,x)[g(this,T)]=c);var h=g(this,T)+1;h===g(this,P)?g(this,x).splice(0,1):(m(this,T,h),h<g(this,x).length&&g(this,x).splice(h)),g(this,x).push(c)}}},{key:"undo",value:function(){-1!==g(this,T)&&(m(this,E,!0),g(this,x)[g(this,T)].undo(),m(this,E,!1),m(this,T,g(this,T)-1))}},{key:"redo",value:function(){g(this,T)<g(this,x).length-1&&(m(this,T,g(this,T)+1),m(this,E,!0),g(this,x)[g(this,T)].cmd(),m(this,E,!1))}},{key:"hasSomethingToUndo",value:function(){return-1!==g(this,T)}},{key:"hasSomethingToRedo",value:function(){return g(this,T)<g(this,x).length-1}},{key:"destroy",value:function(){m(this,x,null)}}]),t}();e.CommandManager=C;var O=new WeakSet,F=function(){function t(e){h(this,t),u(this,O),this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;var r,n=i.FeatureTest.platform.isMac,a=_(e);try{for(a.s();!(r=a.n()).done;){var o,s=l(r.value,2),c=s[0],f=s[1],d=_(c);try{for(d.s();!(o=d.n()).done;){var p=o.value,v=p.startsWith("mac+");n&&v?(this.callbacks.set(p.slice(4),f),this.allKeys.add(p.split("+").at(-1))):n||v||(this.callbacks.set(p,f),this.allKeys.add(p.split("+").at(-1)))}}catch(t){d.e(t)}finally{d.f()}}}catch(t){a.e(t)}finally{a.f()}}return d(t,[{key:"exec",value:function(t,e){if(this.allKeys.has(e.key)){var r=this.callbacks.get(c(this,O,M).call(this,e));r&&(r.bind(t)(),e.stopPropagation(),e.preventDefault())}}}]),t}();function M(t){t.altKey&&this.buffer.push("alt"),t.ctrlKey&&this.buffer.push("ctrl"),t.metaKey&&this.buffer.push("meta"),t.shiftKey&&this.buffer.push("shift"),this.buffer.push(t.key);var e=this.buffer.join("+");return this.buffer.length=0,e}e.KeyboardManager=F;var R=function(){function t(){h(this,t)}return d(t,[{key:"_colors",get:function(){var t=new Map([["CanvasText",null],["Canvas",null]]);return(0,a.getColorValues)(t),(0,i.shadow)(this,"_colors",t)}},{key:"convert",value:function(e){var r=(0,a.getRGB)(e);if(!window.matchMedia("(forced-colors: active)").matches)return r;var n,i=_(this._colors);try{for(i.s();!(n=i.n()).done;){var o=l(n.value,2),s=o[0];if(o[1].every((function(t,e){return t===r[e]})))return t._colorsMapping.get(s)}}catch(t){i.e(t)}finally{i.f()}return r}},{key:"getHexCode",value:function(t){var e=this._colors.get(t);return e?i.Util.makeHexColor.apply(i.Util,o(e)):t}}]),t}();e.ColorManager=R,s(R,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]));var I=new WeakMap,j=new WeakMap,L=new WeakMap,D=new WeakMap,N=new WeakMap,U=new WeakMap,W=new WeakMap,G=new WeakMap,B=new WeakMap,q=new WeakMap,H=new WeakMap,z=new WeakMap,V=new WeakMap,X=new WeakMap,Y=new WeakMap,K=new WeakMap,J=new WeakMap,Q=new WeakMap,$=new WeakMap,Z=new WeakMap,tt=new WeakMap,et=new WeakMap,rt=new WeakMap,nt=new WeakSet,it=new WeakSet,at=new WeakSet,ot=new WeakSet,st=new WeakSet,lt=new WeakSet,ut=new WeakSet,ct=new WeakSet,ht=new WeakSet,ft=new WeakSet,dt=new WeakSet,pt=function(){function t(e,r,n){h(this,t),u(this,dt),u(this,ft),u(this,ht),u(this,ct),u(this,ut),u(this,lt),u(this,st),u(this,ot),u(this,at),u(this,it),u(this,nt),v(this,I,{writable:!0,value:null}),v(this,j,{writable:!0,value:new Map}),v(this,L,{writable:!0,value:new Map}),v(this,D,{writable:!0,value:null}),v(this,N,{writable:!0,value:new C}),v(this,U,{writable:!0,value:0}),v(this,W,{writable:!0,value:null}),v(this,G,{writable:!0,value:new Set}),v(this,B,{writable:!0,value:null}),v(this,q,{writable:!0,value:new S}),v(this,H,{writable:!0,value:!1}),v(this,z,{writable:!0,value:i.AnnotationEditorType.NONE}),v(this,V,{writable:!0,value:new Set}),v(this,X,{writable:!0,value:this.copy.bind(this)}),v(this,Y,{writable:!0,value:this.cut.bind(this)}),v(this,K,{writable:!0,value:this.paste.bind(this)}),v(this,J,{writable:!0,value:this.keydown.bind(this)}),v(this,Q,{writable:!0,value:this.onEditingAction.bind(this)}),v(this,$,{writable:!0,value:this.onPageChanging.bind(this)}),v(this,Z,{writable:!0,value:this.onScaleChanging.bind(this)}),v(this,tt,{writable:!0,value:this.onRotationChanging.bind(this)}),v(this,et,{writable:!0,value:{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1}}),v(this,rt,{writable:!0,value:null}),m(this,rt,e),m(this,B,r),g(this,B)._on("editingaction",g(this,Q)),g(this,B)._on("pagechanging",g(this,$)),g(this,B)._on("scalechanging",g(this,Z)),g(this,B)._on("rotationchanging",g(this,tt)),m(this,D,n),this.viewParameters={realScale:a.PixelsPerInch.PDF_TO_CSS_UNITS,rotation:0}}return d(t,[{key:"destroy",value:function(){c(this,it,yt).call(this),g(this,B)._off("editingaction",g(this,Q)),g(this,B)._off("pagechanging",g(this,$)),g(this,B)._off("scalechanging",g(this,Z)),g(this,B)._off("rotationchanging",g(this,tt));var t,e=_(g(this,L).values());try{for(e.s();!(t=e.n()).done;)t.value.destroy()}catch(t){e.e(t)}finally{e.f()}g(this,L).clear(),g(this,j).clear(),g(this,G).clear(),m(this,I,null),g(this,V).clear(),g(this,N).destroy()}},{key:"onPageChanging",value:function(t){var e=t.pageNumber;m(this,U,e-1)}},{key:"focusMainContainer",value:function(){g(this,rt).focus()}},{key:"addShouldRescale",value:function(t){g(this,G).add(t)}},{key:"removeShouldRescale",value:function(t){g(this,G).delete(t)}},{key:"onScaleChanging",value:function(t){var e=t.scale;this.commitOrRemove(),this.viewParameters.realScale=e*a.PixelsPerInch.PDF_TO_CSS_UNITS;var r,n=_(g(this,G));try{for(n.s();!(r=n.n()).done;)r.value.onScaleChanging()}catch(t){n.e(t)}finally{n.f()}}},{key:"onRotationChanging",value:function(t){var e=t.pagesRotation;this.commitOrRemove(),this.viewParameters.rotation=e}},{key:"addToAnnotationStorage",value:function(t){t.isEmpty()||!g(this,D)||g(this,D).has(t.id)||g(this,D).setValue(t.id,t)}},{key:"copy",value:function(t){if(t.preventDefault(),g(this,I)&&g(this,I).commitOrRemove(),this.hasSelection){var e,r=[],n=_(g(this,V));try{for(n.s();!(e=n.n()).done;){var i=e.value;i.isEmpty()||r.push(i.serialize())}}catch(t){n.e(t)}finally{n.f()}0!==r.length&&t.clipboardData.setData("application/pdfjs",JSON.stringify(r))}}},{key:"cut",value:function(t){this.copy(t),this.delete()}},{key:"paste",value:function(t){var e=this;t.preventDefault();var r=t.clipboardData.getData("application/pdfjs");if(r){try{r=JSON.parse(r)}catch(t){return void(0,i.warn)('paste: "'.concat(t.message,'".'))}if(Array.isArray(r)){this.unselectAll();var n=g(this,L).get(g(this,U));try{var a,o=[],s=_(r);try{for(s.s();!(a=s.n()).done;){var l=a.value,u=n.deserialize(l);if(!u)return;o.push(u)}}catch(t){s.e(t)}finally{s.f()}this.addCommands({cmd:function(){for(var t=0,r=o;t<r.length;t++){var n=r[t];c(e,ht,kt).call(e,n)}c(e,dt,xt).call(e,o)},undo:function(){for(var t=0,e=o;t<e.length;t++)e[t].remove()},mustExec:!0})}catch(t){(0,i.warn)('paste: "'.concat(t.message,'".'))}}}}},{key:"keydown",value:function(e){var r;null!==(r=this.getActive())&&void 0!==r&&r.shouldGetKeyboardEvents()||t._keyboardManager.exec(this,e)}},{key:"onEditingAction",value:function(t){["undo","redo","delete","selectAll"].includes(t.name)&&this[t.name]()}},{key:"setEditingState",value:function(t){t?(c(this,nt,vt).call(this),c(this,at,mt).call(this),c(this,st,bt).call(this,{isEditing:g(this,z)!==i.AnnotationEditorType.NONE,isEmpty:c(this,ft,St).call(this),hasSomethingToUndo:g(this,N).hasSomethingToUndo(),hasSomethingToRedo:g(this,N).hasSomethingToRedo(),hasSelectedEditor:!1})):(c(this,it,yt).call(this),c(this,ot,gt).call(this),c(this,st,bt).call(this,{isEditing:!1}))}},{key:"registerEditorTypes",value:function(t){if(!g(this,W)){m(this,W,t);var e,r=_(g(this,W));try{for(r.s();!(e=r.n()).done;){var n=e.value;c(this,lt,_t).call(this,n.defaultPropertiesToUpdate)}}catch(t){r.e(t)}finally{r.f()}}}},{key:"getId",value:function(){return g(this,q).getId()}},{key:"currentLayer",get:function(){return g(this,L).get(g(this,U))}},{key:"currentPageIndex",get:function(){return g(this,U)}},{key:"addLayer",value:function(t){g(this,L).set(t.pageIndex,t),g(this,H)?t.enable():t.disable()}},{key:"removeLayer",value:function(t){g(this,L).delete(t.pageIndex)}},{key:"updateMode",value:function(t){if(m(this,z,t),t===i.AnnotationEditorType.NONE)this.setEditingState(!1),c(this,ct,At).call(this);else{this.setEditingState(!0),c(this,ut,wt).call(this);var e,r=_(g(this,L).values());try{for(r.s();!(e=r.n()).done;)e.value.updateMode(t)}catch(t){r.e(t)}finally{r.f()}}}},{key:"updateToolbar",value:function(t){t!==g(this,z)&&g(this,B).dispatch("switchannotationeditormode",{source:this,mode:t})}},{key:"updateParams",value:function(t,e){if(g(this,W)){var r,n=_(g(this,V));try{for(n.s();!(r=n.n()).done;)r.value.updateParams(t,e)}catch(t){n.e(t)}finally{n.f()}var i,a=_(g(this,W));try{for(a.s();!(i=a.n()).done;)i.value.updateDefaultParams(t,e)}catch(t){a.e(t)}finally{a.f()}}}},{key:"getEditors",value:function(t){var e,r=[],n=_(g(this,j).values());try{for(n.s();!(e=n.n()).done;){var i=e.value;i.pageIndex===t&&r.push(i)}}catch(t){n.e(t)}finally{n.f()}return r}},{key:"getEditor",value:function(t){return g(this,j).get(t)}},{key:"addEditor",value:function(t){g(this,j).set(t.id,t)}},{key:"removeEditor",value:function(t){var e;g(this,j).delete(t.id),this.unselect(t),null===(e=g(this,D))||void 0===e||e.remove(t.id)}},{key:"setActiveEditor",value:function(t){g(this,I)!==t&&(m(this,I,t),t&&c(this,lt,_t).call(this,t.propertiesToUpdate))}},{key:"toggleSelected",value:function(t){if(g(this,V).has(t))return g(this,V).delete(t),t.unselect(),void c(this,st,bt).call(this,{hasSelectedEditor:this.hasSelection});g(this,V).add(t),t.select(),c(this,lt,_t).call(this,t.propertiesToUpdate),c(this,st,bt).call(this,{hasSelectedEditor:!0})}},{key:"setSelected",value:function(t){var e,r=_(g(this,V));try{for(r.s();!(e=r.n()).done;){var n=e.value;n!==t&&n.unselect()}}catch(t){r.e(t)}finally{r.f()}g(this,V).clear(),g(this,V).add(t),t.select(),c(this,lt,_t).call(this,t.propertiesToUpdate),c(this,st,bt).call(this,{hasSelectedEditor:!0})}},{key:"isSelected",value:function(t){return g(this,V).has(t)}},{key:"unselect",value:function(t){t.unselect(),g(this,V).delete(t),c(this,st,bt).call(this,{hasSelectedEditor:this.hasSelection})}},{key:"hasSelection",get:function(){return 0!==g(this,V).size}},{key:"undo",value:function(){g(this,N).undo(),c(this,st,bt).call(this,{hasSomethingToUndo:g(this,N).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:c(this,ft,St).call(this)})}},{key:"redo",value:function(){g(this,N).redo(),c(this,st,bt).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:g(this,N).hasSomethingToRedo(),isEmpty:c(this,ft,St).call(this)})}},{key:"addCommands",value:function(t){g(this,N).add(t),c(this,st,bt).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:c(this,ft,St).call(this)})}},{key:"delete",value:function(){var t=this;if(this.commitOrRemove(),this.hasSelection){var e=o(g(this,V));this.addCommands({cmd:function(){var t,r=_(e);try{for(r.s();!(t=r.n()).done;)t.value.remove()}catch(t){r.e(t)}finally{r.f()}},undo:function(){var r,n=_(e);try{for(n.s();!(r=n.n()).done;){var i=r.value;c(t,ht,kt).call(t,i)}}catch(t){n.e(t)}finally{n.f()}},mustExec:!0})}}},{key:"commitOrRemove",value:function(){var t;null===(t=g(this,I))||void 0===t||t.commitOrRemove()}},{key:"selectAll",value:function(){var t,e=_(g(this,V));try{for(e.s();!(t=e.n()).done;)t.value.commit()}catch(t){e.e(t)}finally{e.f()}c(this,dt,xt).call(this,g(this,j).values())}},{key:"unselectAll",value:function(){if(g(this,I))g(this,I).commitOrRemove();else if(0!==g(this,V).size){var t,e=_(g(this,V));try{for(e.s();!(t=e.n()).done;)t.value.unselect()}catch(t){e.e(t)}finally{e.f()}g(this,V).clear(),c(this,st,bt).call(this,{hasSelectedEditor:!1})}}},{key:"isActive",value:function(t){return g(this,I)===t}},{key:"getActive",value:function(){return g(this,I)}},{key:"getMode",value:function(){return g(this,z)}}]),t}();function vt(){g(this,rt).addEventListener("keydown",g(this,J))}function yt(){g(this,rt).removeEventListener("keydown",g(this,J))}function mt(){document.addEventListener("copy",g(this,X)),document.addEventListener("cut",g(this,Y)),document.addEventListener("paste",g(this,K))}function gt(){document.removeEventListener("copy",g(this,X)),document.removeEventListener("cut",g(this,Y)),document.removeEventListener("paste",g(this,K))}function bt(t){var e=this;Object.entries(t).some((function(t){var r=l(t,2),n=r[0],i=r[1];return g(e,et)[n]!==i}))&&g(this,B).dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(g(this,et),t)})}function _t(t){g(this,B).dispatch("annotationeditorparamschanged",{source:this,details:t})}function wt(){if(!g(this,H)){m(this,H,!0);var t,e=_(g(this,L).values());try{for(e.s();!(t=e.n()).done;)t.value.enable()}catch(t){e.e(t)}finally{e.f()}}}function At(){if(this.unselectAll(),g(this,H)){m(this,H,!1);var t,e=_(g(this,L).values());try{for(e.s();!(t=e.n()).done;)t.value.disable()}catch(t){e.e(t)}finally{e.f()}}}function kt(t){var e=g(this,L).get(t.pageIndex);e?e.addOrRebuild(t):this.addEditor(t)}function St(){if(0===g(this,j).size)return!0;if(1===g(this,j).size){var t,e=_(g(this,j).values());try{for(e.s();!(t=e.n()).done;)return t.value.isEmpty()}catch(t){e.e(t)}finally{e.f()}}return!1}function xt(t){g(this,V).clear();var e,r=_(t);try{for(r.s();!(e=r.n()).done;){var n=e.value;n.isEmpty()||(g(this,V).add(n),n.select())}}catch(t){r.e(t)}finally{r.f()}c(this,st,bt).call(this,{hasSelectedEditor:!0})}e.AnnotationEditorUIManager=pt,s(pt,"_keyboardManager",new F([[["ctrl+a","mac+meta+a"],pt.prototype.selectAll],[["ctrl+z","mac+meta+z"],pt.prototype.undo],[["ctrl+y","ctrl+shift+Z","mac+meta+shift+Z"],pt.prototype.redo],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete"],pt.prototype.delete],[["Escape","mac+Escape"],pt.prototype.unselectAll]]))},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StatTimer=e.RenderingCancelledException=e.PixelsPerInch=e.PageViewport=e.PDFDateString=e.DOMStandardFontDataFactory=e.DOMSVGFactory=e.DOMCanvasFactory=e.DOMCMapReaderFactory=e.AnnotationPrefix=void 0,e.deprecated=function(t){console.log("Deprecated API usage: "+t)},e.getColorValues=function(t){var e=document.createElement("span");e.style.visibility="hidden",document.body.append(e);var r,n=s(t.keys());try{for(n.s();!(r=n.n()).done;){var i=r.value;e.style.color=i;var a=window.getComputedStyle(e).color;t.set(i,I(a))}}catch(t){n.e(t)}finally{n.f()}e.remove()},e.getCurrentTransform=function(t){var e=t.getTransform();return[e.a,e.b,e.c,e.d,e.e,e.f]},e.getCurrentTransformInverse=function(t){var e=t.getTransform().invertSelf();return[e.a,e.b,e.c,e.d,e.e,e.f]},e.getFilenameFromUrl=function(t){if(!(arguments.length>1&&void 0!==arguments[1]&&arguments[1])){var e=t.split(/[#?]/,1);t=(1,function(t){if(Array.isArray(t))return t}(r=e)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{for(a=(r=r.call(t)).next,0;!(l=(n=a.call(r)).done)&&(s.push(n.value),1!==s.length);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(r)||l(r,1)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0]}var r;return t.substring(t.lastIndexOf("/")+1)},e.getPdfFilenameFromUrl=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"document.pdf";if("string"!=typeof t)return e;if(C(t))return(0,i.warn)('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),e;var r=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,n=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(t),a=r.exec(n[1])||r.exec(n[2])||r.exec(n[3]);if(a&&(a=a[0]).includes("%"))try{a=r.exec(decodeURIComponent(a))[0]}catch(t){}return a||e},e.getRGB=I,e.getXfaPageViewport=function(t,e){var r=e.scale,n=void 0===r?1:r,i=e.rotation,a=void 0===i?0:i,o=t.attributes.style,s=o.width,l=o.height,u=[0,0,parseInt(s),parseInt(l)];return new P({viewBox:u,scale:n,rotation:a})},e.isDataScheme=C,e.isPdfFile=function(t){return"string"==typeof t&&/\.pdf$/i.test(t)},e.isValidFetchUrl=M,e.loadScript=function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new Promise((function(r,n){var i=document.createElement("script");i.src=t,i.onload=function(t){e&&i.remove(),r(t)},i.onerror=function(){n(new Error("Cannot load script at: ".concat(i.src)))},(document.head||document.documentElement).append(i)}))},e.setLayerDimensions=function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];if(e instanceof P){var i=e.rawDims,a=i.pageWidth,o=i.pageHeight,s=t.style,l="calc(var(--scale-factor) * ".concat(a,"px)"),u="calc(var(--scale-factor) * ".concat(o,"px)");r&&e.rotation%180!=0?(s.width=u,s.height=l):(s.width=l,s.height=u)}n&&t.setAttribute("data-main-rotation",e.rotation)};var n=r(138),i=r(1);function a(){a=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},s=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,s,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,s)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,s,l){var u=f(t[n],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==o(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,s,l)}),(function(t){i("throw",t,s,l)})):e.resolve(h).then((function(t){c.value=t,s(c)}),(function(t){return i("throw",t,s,l)}))}l(u.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[s];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,l,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,s,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function s(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=l(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function l(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function c(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function h(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&f(t,e)}function f(t,e){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},f(t,e)}function d(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=p(t);if(e){var i=p(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return function(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,r)}}function p(t){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},p(t)}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,b(n.key),n)}}function y(t,e,r){return e&&v(t.prototype,e),r&&v(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function m(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function g(t,e,r){return(e=b(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function b(t){var e=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===o(e)?e:String(e)}e.AnnotationPrefix="pdfjs_internal_id_";var _=y((function t(){m(this,t)}));e.PixelsPerInch=_,g(_,"CSS",96),g(_,"PDF",72),g(_,"PDF_TO_CSS_UNITS",_.CSS/_.PDF);var w=function(t){h(r,t);var e=d(r);function r(){var t,n=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).ownerDocument,i=void 0===n?globalThis.document:n;return m(this,r),(t=e.call(this))._document=i,t}return y(r,[{key:"_createCanvas",value:function(t,e){var r=this._document.createElement("canvas");return r.width=t,r.height=e,r}}]),r}(n.BaseCanvasFactory);function A(t){return k.apply(this,arguments)}function k(){var t;return t=a().mark((function t(e){var r,n,o=arguments;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=o.length>1&&void 0!==o[1]&&o[1],!M(e,document.baseURI)){t.next=21;break}return t.next=4,fetch(e);case 4:if((n=t.sent).ok){t.next=7;break}throw new Error(n.statusText);case 7:if(!r){t.next=15;break}return t.t1=Uint8Array,t.next=11,n.arrayBuffer();case 11:t.t2=t.sent,t.t0=new t.t1(t.t2),t.next=20;break;case 15:return t.t3=i.stringToBytes,t.next=18,n.text();case 18:t.t4=t.sent,t.t0=(0,t.t3)(t.t4);case 20:return t.abrupt("return",t.t0);case 21:return t.abrupt("return",new Promise((function(t,n){var a=new XMLHttpRequest;a.open("GET",e,!0),r&&(a.responseType="arraybuffer"),a.onreadystatechange=function(){if(a.readyState===XMLHttpRequest.DONE){var e;if((200===a.status||0===a.status)&&(r&&a.response?e=new Uint8Array(a.response):!r&&a.responseText&&(e=(0,i.stringToBytes)(a.responseText)),e))return void t(e);n(new Error(a.statusText))}},a.send(null)})));case 22:case"end":return t.stop()}}),t)})),k=function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function o(t){c(a,n,i,o,s,"next",t)}function s(t){c(a,n,i,o,s,"throw",t)}o(void 0)}))},k.apply(this,arguments)}e.DOMCanvasFactory=w;var S=function(t){h(r,t);var e=d(r);function r(){return m(this,r),e.apply(this,arguments)}return y(r,[{key:"_fetchData",value:function(t,e){return A(t,this.isCompressed).then((function(t){return{cMapData:t,compressionType:e}}))}}]),r}(n.BaseCMapReaderFactory);e.DOMCMapReaderFactory=S;var x=function(t){h(r,t);var e=d(r);function r(){return m(this,r),e.apply(this,arguments)}return y(r,[{key:"_fetchData",value:function(t){return A(t,!0)}}]),r}(n.BaseStandardFontDataFactory);e.DOMStandardFontDataFactory=x;var E=function(t){h(r,t);var e=d(r);function r(){return m(this,r),e.apply(this,arguments)}return y(r,[{key:"_createSVG",value:function(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}}]),r}(n.BaseSVGFactory);e.DOMSVGFactory=E;var P=function(){function t(e){var r=e.viewBox,n=e.scale,i=e.rotation,a=e.offsetX,o=void 0===a?0:a,s=e.offsetY,l=void 0===s?0:s,u=e.dontFlip,c=void 0!==u&&u;m(this,t),this.viewBox=r,this.scale=n,this.rotation=i,this.offsetX=o,this.offsetY=l;var h,f,d,p,v,y,g,b,_=(r[2]+r[0])/2,w=(r[3]+r[1])/2;switch((i%=360)<0&&(i+=360),i){case 180:h=-1,f=0,d=0,p=1;break;case 90:h=0,f=1,d=1,p=0;break;case 270:h=0,f=-1,d=-1,p=0;break;case 0:h=1,f=0,d=0,p=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}c&&(d=-d,p=-p),0===h?(v=Math.abs(w-r[1])*n+o,y=Math.abs(_-r[0])*n+l,g=(r[3]-r[1])*n,b=(r[2]-r[0])*n):(v=Math.abs(_-r[0])*n+o,y=Math.abs(w-r[1])*n+l,g=(r[2]-r[0])*n,b=(r[3]-r[1])*n),this.transform=[h*n,f*n,d*n,p*n,v-h*n*_-d*n*w,y-f*n*_-p*n*w],this.width=g,this.height=b}return y(t,[{key:"rawDims",get:function(){var t=this.viewBox;return(0,i.shadow)(this,"rawDims",{pageWidth:t[2]-t[0],pageHeight:t[3]-t[1],pageX:t[0],pageY:t[1]})}},{key:"clone",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.scale,n=void 0===r?this.scale:r,i=e.rotation,a=void 0===i?this.rotation:i,o=e.offsetX,s=void 0===o?this.offsetX:o,l=e.offsetY,u=void 0===l?this.offsetY:l,c=e.dontFlip,h=void 0!==c&&c;return new t({viewBox:this.viewBox.slice(),scale:n,rotation:a,offsetX:s,offsetY:u,dontFlip:h})}},{key:"convertToViewportPoint",value:function(t,e){return i.Util.applyTransform([t,e],this.transform)}},{key:"convertToViewportRectangle",value:function(t){var e=i.Util.applyTransform([t[0],t[1]],this.transform),r=i.Util.applyTransform([t[2],t[3]],this.transform);return[e[0],e[1],r[0],r[1]]}},{key:"convertToPdfPoint",value:function(t,e){return i.Util.applyInverseTransform([t,e],this.transform)}}]),t}();e.PageViewport=P;var T=function(t){h(r,t);var e=d(r);function r(t,n){var i,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return m(this,r),(i=e.call(this,t,"RenderingCancelledException")).type=n,i.extraDelay=a,i}return y(r)}(i.BaseException);function C(t){for(var e=t.length,r=0;r<e&&""===t[r].trim();)r++;return"data:"===t.substring(r,r+5).toLowerCase()}e.RenderingCancelledException=T;var O,F=function(){function t(){m(this,t),g(this,"started",Object.create(null)),g(this,"times",[])}return y(t,[{key:"time",value:function(t){t in this.started&&(0,i.warn)("Timer is already running for ".concat(t)),this.started[t]=Date.now()}},{key:"timeEnd",value:function(t){t in this.started||(0,i.warn)("Timer has not been started for ".concat(t)),this.times.push({name:t,start:this.started[t],end:Date.now()}),delete this.started[t]}},{key:"toString",value:function(){var t,e=[],r=0,n=s(this.times);try{for(n.s();!(t=n.n()).done;){var i=t.value.name;r=Math.max(i.length,r)}}catch(t){n.e(t)}finally{n.f()}var a,o=s(this.times);try{for(o.s();!(a=o.n()).done;){var l=a.value,u=l.name,c=l.start,h=l.end;e.push("".concat(u.padEnd(r)," ").concat(h-c,"ms\n"))}}catch(t){o.e(t)}finally{o.f()}return e.join("")}}]),t}();function M(t,e){try{var r=(e?new URL(t,e):new URL(t)).protocol;return"http:"===r||"https:"===r}catch(t){return!1}}e.StatTimer=F;var R=function(){function t(){m(this,t)}return y(t,null,[{key:"toDateObject",value:function(t){if(!t||"string"!=typeof t)return null;O||(O=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));var e=O.exec(t);if(!e)return null;var r=parseInt(e[1],10),n=parseInt(e[2],10);n=n>=1&&n<=12?n-1:0;var i=parseInt(e[3],10);i=i>=1&&i<=31?i:1;var a=parseInt(e[4],10);a=a>=0&&a<=23?a:0;var o=parseInt(e[5],10);o=o>=0&&o<=59?o:0;var s=parseInt(e[6],10);s=s>=0&&s<=59?s:0;var l=e[7]||"Z",u=parseInt(e[8],10);u=u>=0&&u<=23?u:0;var c=parseInt(e[9],10)||0;return c=c>=0&&c<=59?c:0,"-"===l?(a+=u,o+=c):"+"===l&&(a-=u,o-=c),new Date(Date.UTC(r,n,i,a,o,s))}}]),t}();function I(t){if(t.startsWith("#")){var e=parseInt(t.slice(1),16);return[(16711680&e)>>16,(65280&e)>>8,255&e]}return t.startsWith("rgb(")?t.slice(4,-1).split(",").map((function(t){return parseInt(t)})):t.startsWith("rgba(")?t.slice(5,-1).split(",").map((function(t){return parseInt(t)})).slice(0,3):((0,i.warn)('Not a valid color format: "'.concat(t,'"')),[0,0,0])}e.PDFDateString=R},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BaseStandardFontDataFactory=e.BaseSVGFactory=e.BaseCanvasFactory=e.BaseCMapReaderFactory=void 0;var n=r(1);function i(){i=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",l=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,o,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,o)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,l){var u=f(t[n],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==s(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,l)}),(function(t){i("throw",t,o,l)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return i("throw",t,o,l)}))}l(u.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,l,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,o,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function a(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function o(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var o=t.apply(e,r);function s(t){a(o,n,i,s,l,"next",t)}function l(t){a(o,n,i,s,l,"throw",t)}s(void 0)}))}}function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==s(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===s(i)?i:String(i)),n)}var i}function c(t,e,r){return e&&u(t.prototype,e),r&&u(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var h=function(){function t(){l(this,t),this.constructor===t&&(0,n.unreachable)("Cannot initialize BaseCanvasFactory.")}return c(t,[{key:"create",value:function(t,e){if(t<=0||e<=0)throw new Error("Invalid canvas size");var r=this._createCanvas(t,e);return{canvas:r,context:r.getContext("2d")}}},{key:"reset",value:function(t,e,r){if(!t.canvas)throw new Error("Canvas is not specified");if(e<=0||r<=0)throw new Error("Invalid canvas size");t.canvas.width=e,t.canvas.height=r}},{key:"destroy",value:function(t){if(!t.canvas)throw new Error("Canvas is not specified");t.canvas.width=0,t.canvas.height=0,t.canvas=null,t.context=null}},{key:"_createCanvas",value:function(t,e){(0,n.unreachable)("Abstract method `_createCanvas` called.")}}]),t}();e.BaseCanvasFactory=h;var f=function(){function t(e){var r=e.baseUrl,i=void 0===r?null:r,a=e.isCompressed,o=void 0!==a&&a;l(this,t),this.constructor===t&&(0,n.unreachable)("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=i,this.isCompressed=o}var e;return c(t,[{key:"fetch",value:(e=o(i().mark((function t(e){var r,a,o,s=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.name,this.baseUrl){t.next=3;break}throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');case 3:if(r){t.next=5;break}throw new Error("CMap name must be specified.");case 5:return a=this.baseUrl+r+(this.isCompressed?".bcmap":""),o=this.isCompressed?n.CMapCompressionType.BINARY:n.CMapCompressionType.NONE,t.abrupt("return",this._fetchData(a,o).catch((function(t){throw new Error("Unable to load ".concat(s.isCompressed?"binary ":"","CMap at: ").concat(a))})));case 8:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"_fetchData",value:function(t,e){(0,n.unreachable)("Abstract method `_fetchData` called.")}}]),t}();e.BaseCMapReaderFactory=f;var d=function(){function t(e){var r=e.baseUrl,i=void 0===r?null:r;l(this,t),this.constructor===t&&(0,n.unreachable)("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=i}var e;return c(t,[{key:"fetch",value:(e=o(i().mark((function t(e){var r,n;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.filename,this.baseUrl){t.next=3;break}throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');case 3:if(r){t.next=5;break}throw new Error("Font filename must be specified.");case 5:return n="".concat(this.baseUrl).concat(r),t.abrupt("return",this._fetchData(n).catch((function(t){throw new Error("Unable to load font data at: ".concat(n))})));case 7:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"_fetchData",value:function(t){(0,n.unreachable)("Abstract method `_fetchData` called.")}}]),t}();e.BaseStandardFontDataFactory=d;var p=function(){function t(){l(this,t),this.constructor===t&&(0,n.unreachable)("Cannot initialize BaseSVGFactory.")}return c(t,[{key:"create",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(t<=0||e<=0)throw new Error("Invalid SVG dimensions");var n=this._createSVG("svg:svg");return n.setAttribute("version","1.1"),r||(n.setAttribute("width","".concat(t,"px")),n.setAttribute("height","".concat(e,"px"))),n.setAttribute("preserveAspectRatio","none"),n.setAttribute("viewBox","0 0 ".concat(t," ").concat(e)),n}},{key:"createElement",value:function(t){if("string"!=typeof t)throw new Error("Invalid SVG element type");return this._createSVG(t)}},{key:"_createSVG",value:function(t){(0,n.unreachable)("Abstract method `_createSVG` called.")}}]),t}();e.BaseSVGFactory=p},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MurmurHash3_64=void 0;var n=r(1);function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==i(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===i(a)?a:String(a)),n)}var a}var o=3285377520,s=4294901760,l=65535,u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.h1=e?4294967295&e:o,this.h2=e?4294967295&e:o}var e,r;return e=t,(r=[{key:"update",value:function(t){var e,r;if("string"==typeof t){e=new Uint8Array(2*t.length),r=0;for(var i=0,a=t.length;i<a;i++){var o=t.charCodeAt(i);o<=255?e[r++]=o:(e[r++]=o>>>8,e[r++]=255&o)}}else{if(!(0,n.isArrayBuffer)(t))throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");r=(e=t.slice()).byteLength}for(var u=r>>2,c=r-4*u,h=new Uint32Array(e.buffer,0,u),f=0,d=0,p=this.h1,v=this.h2,y=3432918353,m=461845907,g=11601,b=13715,_=0;_<u;_++)1&_?p=5*(p=(p^=f=(f=(f=(f=h[_])*y&s|f*g&l)<<15|f>>>17)*m&s|f*b&l)<<13|p>>>19)+3864292196:v=5*(v=(v^=d=(d=(d=(d=h[_])*y&s|d*g&l)<<15|d>>>17)*m&s|d*b&l)<<13|v>>>19)+3864292196;switch(f=0,c){case 3:f^=e[4*u+2]<<16;case 2:f^=e[4*u+1]<<8;case 1:f=(f=(f=(f^=e[4*u])*y&s|f*g&l)<<15|f>>>17)*m&s|f*b&l,1&u?p^=f:v^=f}this.h1=p,this.h2=v}},{key:"hexdigest",value:function(){var t=this.h1,e=this.h2;return t=3981806797*(t^=e>>>1)&s|36045*t&l,t=444984403*(t^=(e=4283543511*e&s|(2950163797*(e<<16|t>>>16)&s)>>>16)>>>1)&s|60499*t&l,((t^=(e=3301882366*e&s|(3120437893*(e<<16|t>>>16)&s)>>>16)>>>1)>>>0).toString(16).padStart(8,"0")+(e>>>0).toString(16).padStart(8,"0")}}])&&a(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.MurmurHash3_64=u},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FontLoader=e.FontFaceObject=void 0;var n=r(1),i=r(3);function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function o(){o=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},s=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,s,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,s)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,o,s,l){var u=f(t[n],t,o);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==a(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,s,l)}),(function(t){i("throw",t,s,l)})):e.resolve(h).then((function(t){c.value=t,s(c)}),(function(t){return i("throw",t,s,l)}))}l(u.arg)}var o;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return o=o?o.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[s];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,l,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,s,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function s(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function l(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==a(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===a(i)?i:String(i)),n)}var i}function f(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var d=function(){function t(e){var r=e.onUnsupportedFeature,n=e.ownerDocument,i=void 0===n?globalThis.document:n;e.styleElement,c(this,t),this._onUnsupportedFeature=r,this._document=i,this.nativeFontFaces=[],this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}var e,r;return f(t,[{key:"addNativeFontFace",value:function(t){this.nativeFontFaces.push(t),this._document.fonts.add(t)}},{key:"insertRule",value:function(t){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));var e=this.styleElement.sheet;e.insertRule(t,e.cssRules.length)}},{key:"clear",value:function(){var t,e=l(this.nativeFontFaces);try{for(e.s();!(t=e.n()).done;){var r=t.value;this._document.fonts.delete(r)}}catch(t){e.e(t)}finally{e.f()}this.nativeFontFaces.length=0,this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}},{key:"bind",value:(e=o().mark((function t(e){var r,i,a=this;return o().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.attached&&!e.missingFile){t.next=2;break}return t.abrupt("return");case 2:if(e.attached=!0,!this.isFontLoadingAPISupported){t.next=19;break}if(!(r=e.createNativeFontFace())){t.next=18;break}return this.addNativeFontFace(r),t.prev=7,t.next=10,r.loaded;case 10:t.next=18;break;case 12:throw t.prev=12,t.t0=t.catch(7),this._onUnsupportedFeature({featureId:n.UNSUPPORTED_FEATURES.errorFontLoadNative}),(0,n.warn)("Failed to load font '".concat(r.family,"': '").concat(t.t0,"'.")),e.disableFontFace=!0,t.t0;case 18:return t.abrupt("return");case 19:if(!(i=e.createFontFaceRule())){t.next=26;break}if(this.insertRule(i),!this.isSyncFontLoadingSupported){t.next=24;break}return t.abrupt("return");case 24:return t.next=26,new Promise((function(t){var r=a._queueLoadingCallback(t);a._prepareFontLoadEvent(e,r)}));case 26:case"end":return t.stop()}}),t,this,[[7,12]])})),r=function(){var t=this,r=arguments;return new Promise((function(n,i){var a=e.apply(t,r);function o(t){s(a,n,i,o,l,"next",t)}function l(t){s(a,n,i,o,l,"throw",t)}o(void 0)}))},function(t){return r.apply(this,arguments)})},{key:"isFontLoadingAPISupported",get:function(){var t,e=!(null===(t=this._document)||void 0===t||!t.fonts);return(0,n.shadow)(this,"isFontLoadingAPISupported",e)}},{key:"isSyncFontLoadingSupported",get:function(){var t=!1;return(i.isNodeJS||"undefined"!=typeof navigator&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(t=!0),(0,n.shadow)(this,"isSyncFontLoadingSupported",t)}},{key:"_queueLoadingCallback",value:function(t){var e=this.loadingRequests,r={done:!1,complete:function(){for((0,n.assert)(!r.done,"completeRequest() cannot be called twice."),r.done=!0;e.length>0&&e[0].done;){var t=e.shift();setTimeout(t.callback,0)}},callback:t};return e.push(r),r}},{key:"_loadTestFont",get:function(){var t=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return(0,n.shadow)(this,"_loadTestFont",t)}},{key:"_prepareFontLoadEvent",value:function(t,e){function r(t,e){return t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|255&t.charCodeAt(e+3)}function i(t,e,r,n){return t.substring(0,e)+n+t.substring(e+r)}var a,o,s=this._document.createElement("canvas");s.width=1,s.height=1;var l=s.getContext("2d"),u=0,c="lt".concat(Date.now()).concat(this.loadTestFontId++),h=this._loadTestFont,f=1482184792,d=r(h=i(h,976,c.length,c),16);for(a=0,o=c.length-3;a<o;a+=4)d=d-f+r(c,a)|0;a<c.length&&(d=d-f+r(c+"XXX",a)|0),h=i(h,16,4,(0,n.string32)(d));var p="url(data:font/opentype;base64,".concat(btoa(h),");"),v='@font-face {font-family:"'.concat(c,'";src:').concat(p,"}");this.insertRule(v);var y=this._document.createElement("div");y.style.visibility="hidden",y.style.width=y.style.height="10px",y.style.position="absolute",y.style.top=y.style.left="0px";for(var m=0,g=[t.loadedName,c];m<g.length;m++){var b=g[m],_=this._document.createElement("span");_.textContent="Hi",_.style.fontFamily=b,y.append(_)}this._document.body.append(y),function t(e,r){if(++u>30)return(0,n.warn)("Load test font never loaded."),void r();l.font="30px "+e,l.fillText(".",0,20),l.getImageData(0,0,1,1).data[3]>0?r():setTimeout(t.bind(null,e,r))}(c,(function(){y.remove(),e.complete()}))}}]),t}();e.FontLoader=d;var p=function(){function t(e,r){var n=r.isEvalSupported,i=void 0===n||n,a=r.disableFontFace,o=void 0!==a&&a,s=r.ignoreErrors,l=void 0!==s&&s,u=r.onUnsupportedFeature,h=r.fontRegistry,f=void 0===h?null:h;for(var d in c(this,t),this.compiledGlyphs=Object.create(null),e)this[d]=e[d];this.isEvalSupported=!1!==i,this.disableFontFace=!0===o,this.ignoreErrors=!0===l,this._onUnsupportedFeature=u,this.fontRegistry=f}return f(t,[{key:"createNativeFontFace",value:function(){var t,e;if(!this.data||this.disableFontFace)return null;if(this.cssFontInfo){var r={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(r.style="oblique ".concat(this.cssFontInfo.italicAngle,"deg")),e=new FontFace(this.cssFontInfo.fontFamily,this.data,r)}else e=new FontFace(this.loadedName,this.data,{});return null===(t=this.fontRegistry)||void 0===t||t.registerFont(this),e}},{key:"createFontFaceRule",value:function(){var t;if(!this.data||this.disableFontFace)return null;var e,r=(0,n.bytesToString)(this.data),i="url(data:".concat(this.mimetype,";base64,").concat(btoa(r),");");if(this.cssFontInfo){var a="font-weight: ".concat(this.cssFontInfo.fontWeight,";");this.cssFontInfo.italicAngle&&(a+="font-style: oblique ".concat(this.cssFontInfo.italicAngle,"deg;")),e='@font-face {font-family:"'.concat(this.cssFontInfo.fontFamily,'";').concat(a,"src:").concat(i,"}")}else e='@font-face {font-family:"'.concat(this.loadedName,'";src:').concat(i,"}");return null===(t=this.fontRegistry)||void 0===t||t.registerFont(this,i),e}},{key:"getPathGenerator",value:function(t,e){if(void 0!==this.compiledGlyphs[e])return this.compiledGlyphs[e];var r;try{r=t.get(this.loadedName+"_path_"+e)}catch(t){if(!this.ignoreErrors)throw t;return this._onUnsupportedFeature({featureId:n.UNSUPPORTED_FEATURES.errorFontGetPath}),(0,n.warn)('getPathGenerator - ignoring character: "'.concat(t,'".')),this.compiledGlyphs[e]=function(t,e){}}if(this.isEvalSupported&&n.FeatureTest.isEvalSupported){var i,a=[],o=l(r);try{for(o.s();!(i=o.n()).done;){var s=i.value,u=void 0!==s.args?s.args.join(","):"";a.push("c.",s.cmd,"(",u,");\n")}}catch(t){o.e(t)}finally{o.f()}return this.compiledGlyphs[e]=new Function("c","size",a.join(""))}return this.compiledGlyphs[e]=function(t,e){var n,i=l(r);try{for(i.s();!(n=i.n()).done;){var a=n.value;"scale"===a.cmd&&(a.args=[e,-e]),t[a.cmd].apply(t,a.args)}}catch(t){i.e(t)}finally{i.f()}}}}]),t}();e.FontFaceObject=p},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CanvasGraphics=void 0;var n=r(1),i=r(137),a=r(142),o=r(143),s=r(3);function l(t){return function(t){if(Array.isArray(t))return d(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||f(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function c(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=f(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function h(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||f(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(t,e){if(t){if("string"==typeof t)return d(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(t,e):void 0}}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function v(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===p(i)?i:String(i)),n)}var i}function m(t,e,r){return e&&y(t.prototype,e),r&&y(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var g=4096,b=s.isNodeJS&&"undefined"==typeof Path2D?-1:1e3,_=16,w=function(){function t(e){v(this,t),this.canvasFactory=e,this.cache=Object.create(null)}return m(t,[{key:"getCanvas",value:function(t,e,r){var n;return void 0!==this.cache[t]?(n=this.cache[t],this.canvasFactory.reset(n,e,r)):(n=this.canvasFactory.create(e,r),this.cache[t]=n),n}},{key:"delete",value:function(t){delete this.cache[t]}},{key:"clear",value:function(){for(var t in this.cache){var e=this.cache[t];this.canvasFactory.destroy(e),delete this.cache[t]}}}]),t}();function A(t,e,r,n,a,o,s,l,u,c){var f=h((0,i.getCurrentTransform)(t),6),d=f[0],p=f[1],v=f[2],y=f[3],m=f[4],g=f[5];if(0===p&&0===v){var b=s*d+m,_=Math.round(b),w=l*y+g,A=Math.round(w),k=(s+u)*d+m,S=Math.abs(Math.round(k)-_)||1,x=(l+c)*y+g,E=Math.abs(Math.round(x)-A)||1;return t.setTransform(Math.sign(d),0,0,Math.sign(y),_,A),t.drawImage(e,r,n,a,o,0,0,S,E),t.setTransform(d,p,v,y,m,g),[S,E]}if(0===d&&0===y){var P=l*v+m,T=Math.round(P),C=s*p+g,O=Math.round(C),F=(l+c)*v+m,M=Math.abs(Math.round(F)-T)||1,R=(s+u)*p+g,I=Math.abs(Math.round(R)-O)||1;return t.setTransform(0,Math.sign(p),Math.sign(v),0,T,O),t.drawImage(e,r,n,a,o,0,0,I,M),t.setTransform(d,p,v,y,m,g),[I,M]}return t.drawImage(e,r,n,a,o,s,l,u,c),[Math.hypot(d,p)*u,Math.hypot(v,y)*c]}var k=function(){function t(e,r){v(this,t),this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=n.IDENTITY_MATRIX,this.textMatrixScale=1,this.fontMatrix=n.FONT_IDENTITY_MATRIX,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=n.TextRenderingMode.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps=null,this.startNewPathAndClipBox([0,0,e,r])}return m(t,[{key:"clone",value:function(){var t=Object.create(this);return t.clipBox=this.clipBox.slice(),t}},{key:"setCurrentPoint",value:function(t,e){this.x=t,this.y=e}},{key:"updatePathMinMax",value:function(t,e,r){var i=h(n.Util.applyTransform([e,r],t),2);e=i[0],r=i[1],this.minX=Math.min(this.minX,e),this.minY=Math.min(this.minY,r),this.maxX=Math.max(this.maxX,e),this.maxY=Math.max(this.maxY,r)}},{key:"updateRectMinMax",value:function(t,e){var r=n.Util.applyTransform(e,t),i=n.Util.applyTransform(e.slice(2),t);this.minX=Math.min(this.minX,r[0],i[0]),this.minY=Math.min(this.minY,r[1],i[1]),this.maxX=Math.max(this.maxX,r[0],i[0]),this.maxY=Math.max(this.maxY,r[1],i[1])}},{key:"updateScalingPathMinMax",value:function(t,e){n.Util.scaleMinMax(t,e),this.minX=Math.min(this.minX,e[0]),this.maxX=Math.max(this.maxX,e[1]),this.minY=Math.min(this.minY,e[2]),this.maxY=Math.max(this.maxY,e[3])}},{key:"updateCurvePathMinMax",value:function(t,e,r,i,a,o,s,l,u,c){var h=n.Util.bezierBoundingBox(e,r,i,a,o,s,l,u);if(c)return c[0]=Math.min(c[0],h[0],h[2]),c[1]=Math.max(c[1],h[0],h[2]),c[2]=Math.min(c[2],h[1],h[3]),void(c[3]=Math.max(c[3],h[1],h[3]));this.updateRectMinMax(t,h)}},{key:"getPathBoundingBox",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.PathType.FILL,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=[this.minX,this.minY,this.maxX,this.maxY];if(t===a.PathType.STROKE){e||(0,n.unreachable)("Stroke bounding box must include transform.");var i=n.Util.singularValueDecompose2dScale(e),o=i[0]*this.lineWidth/2,s=i[1]*this.lineWidth/2;r[0]-=o,r[1]-=s,r[2]+=o,r[3]+=s}return r}},{key:"updateClipFromPath",value:function(){var t=n.Util.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(t||[0,0,0,0])}},{key:"isEmptyClip",value:function(){return this.minX===1/0}},{key:"startNewPathAndClipBox",value:function(t){this.clipBox=t,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}},{key:"getClippedPathBoundingBox",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a.PathType.FILL,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return n.Util.intersect(this.clipBox,this.getPathBoundingBox(t,e))}}]),t}();function S(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if("undefined"!=typeof ImageData&&e instanceof ImageData)t.putImageData(e,0,0);else{var i,a,o,s,l,u,c,h,f,d=e.height,p=e.width,v=d%_,y=(d-v)/_,m=0===v?y:y+1,g=t.createImageData(p,_),b=0,w=e.data,A=g.data;if(r)switch(r.length){case 1:u=r[0],c=r[0],h=r[0],f=r[0];break;case 4:u=r[0],c=r[1],h=r[2],f=r[3]}if(e.kind===n.ImageKind.GRAYSCALE_1BPP){var k=w.byteLength,S=new Uint32Array(A.buffer,0,A.byteLength>>2),x=S.length,E=p+7>>3,P=4294967295,T=n.FeatureTest.isLittleEndian?4278190080:255;if(f&&255===f[0]&&0===f[255]){var C=[T,P];P=C[0],T=C[1]}for(a=0;a<m;a++){for(s=a<y?_:v,i=0,o=0;o<s;o++){for(var O=k-b,F=0,M=O>E?p:8*O-7,R=-8&M,I=0,j=0;F<R;F+=8)j=w[b++],S[i++]=128&j?P:T,S[i++]=64&j?P:T,S[i++]=32&j?P:T,S[i++]=16&j?P:T,S[i++]=8&j?P:T,S[i++]=4&j?P:T,S[i++]=2&j?P:T,S[i++]=1&j?P:T;for(;F<M;F++)0===I&&(j=w[b++],I=128),S[i++]=j&I?P:T,I>>=1}for(;i<x;)S[i++]=0;t.putImageData(g,0,a*_)}}else if(e.kind===n.ImageKind.RGBA_32BPP){var L=!!(u||c||h);for(o=0,l=p*_*4,a=0;a<y;a++){if(A.set(w.subarray(b,b+l)),b+=l,L)for(var D=0;D<l;D+=4)u&&(A[D+0]=u[A[D+0]]),c&&(A[D+1]=c[A[D+1]]),h&&(A[D+2]=h[A[D+2]]);t.putImageData(g,0,o),o+=_}if(a<m){if(l=p*v*4,A.set(w.subarray(b,b+l)),L)for(var N=0;N<l;N+=4)u&&(A[N+0]=u[A[N+0]]),c&&(A[N+1]=c[A[N+1]]),h&&(A[N+2]=h[A[N+2]]);t.putImageData(g,0,o)}}else{if(e.kind!==n.ImageKind.RGB_24BPP)throw new Error("bad image kind: ".concat(e.kind));var U=!!(u||c||h);for(l=p*(s=_),a=0;a<m;a++){for(a>=y&&(l=p*(s=v)),i=0,o=l;o--;)A[i++]=w[b++],A[i++]=w[b++],A[i++]=w[b++],A[i++]=255;if(U)for(var W=0;W<i;W+=4)u&&(A[W+0]=u[A[W+0]]),c&&(A[W+1]=c[A[W+1]]),h&&(A[W+2]=h[A[W+2]]);t.putImageData(g,0,a*_)}}}}function x(t,e){if(e.bitmap)t.drawImage(e.bitmap,0,0);else for(var r=e.height,n=e.width,i=r%_,a=(r-i)/_,s=0===i?a:a+1,l=t.createImageData(n,_),u=0,c=e.data,h=l.data,f=0;f<s;f++){var d=f<a?_:i;u=(0,o.applyMaskImageData)({src:c,srcPos:u,dest:h,width:n,height:d}).srcPos,t.putImageData(l,0,f*_)}}function E(t,e){for(var r=0,n=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font"];r<n.length;r++){var i=n[r];void 0!==t[i]&&(e[i]=t[i])}void 0!==t.setLineDash&&(e.setLineDash(t.getLineDash()),e.lineDashOffset=t.lineDashOffset)}function P(t,e){t.strokeStyle=t.fillStyle=e||"#000000",t.fillRule="nonzero",t.globalAlpha=1,t.lineWidth=1,t.lineCap="butt",t.lineJoin="miter",t.miterLimit=10,t.globalCompositeOperation="source-over",t.font="10px sans-serif",void 0!==t.setLineDash&&(t.setLineDash([]),t.lineDashOffset=0)}function T(t,e,r,n){for(var i=t.length,a=3;a<i;a+=4){var o=t[a];if(0===o)t[a-3]=e,t[a-2]=r,t[a-1]=n;else if(o<255){var s=255-o;t[a-3]=t[a-3]*o+e*s>>8,t[a-2]=t[a-2]*o+r*s>>8,t[a-1]=t[a-1]*o+n*s>>8}}}function C(t,e,r){for(var n=t.length,i=3;i<n;i+=4){var a=r?r[t[i]]:t[i];e[i]=e[i]*a*.00392156862745098|0}}function O(t,e,r){for(var n=t.length,i=3;i<n;i+=4){var a=77*t[i-3]+152*t[i-2]+28*t[i-1];e[i]=r?e[i]*r[a>>8]>>8:e[i]*a>>16}}function F(t,e){var r=n.Util.singularValueDecompose2dScale(t);r[0]=Math.fround(r[0]),r[1]=Math.fround(r[1]);var a=Math.fround((globalThis.devicePixelRatio||1)*i.PixelsPerInch.PDF_TO_CSS_UNITS);return void 0!==e?e:r[0]<=a||r[1]<=a}var M=["butt","round","square"],R=["miter","round","bevel"],I={},j={},L=new WeakSet,D=function(){function t(e,r,n,i,a,o,s){var l,u,c=a.optionalContentConfig,h=a.markedContentStack,f=void 0===h?null:h;v(this,t),function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(l=this,u=L),u.add(l),this.ctx=e,this.current=new k(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=r,this.objs=n,this.canvasFactory=i,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=f||[],this.optionalContentConfig=c,this.cachedCanvases=new w(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=o,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.backgroundColor=(null==s?void 0:s.background)||null,this.foregroundColor=(null==s?void 0:s.foreground)||null,this._cachedScaleForStroking=null,this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}return m(t,[{key:"getObject",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return"string"==typeof t?t.startsWith("g_")?this.commonObjs.get(t):this.objs.get(t):e}},{key:"beginDrawing",value:function(t){var e,r,n=t.transform,a=t.viewport,o=t.transparency,s=void 0!==o&&o,u=t.background,c=void 0===u?null:u,f=this.ctx.canvas.width,d=this.ctx.canvas.height,p=c||"#ffffff";if(this.ctx.save(),this.foregroundColor&&this.backgroundColor){this.ctx.fillStyle=this.foregroundColor;var v=this.foregroundColor=this.ctx.fillStyle;this.ctx.fillStyle=this.backgroundColor;var y,m,g=this.backgroundColor=this.ctx.fillStyle;if(this.ctx.fillStyle=p,y="string"==typeof(m=this.ctx.fillStyle)&&/^#[0-9A-Fa-f]{6}$/.test(m),"#000000"===v&&"#ffffff"===g||v===g||!y)this.foregroundColor=this.backgroundColor=null;else{var b=h((0,i.getRGB)(m),3),_=b[0],w=b[1],A=b[2],k=function(t){return(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)},S=Math.round(.2126*k(_)+.7152*k(w)+.0722*k(A));this.selectColor=function(t,e,r){var n=.2126*k(t)+.7152*k(e)+.0722*k(r);return Math.round(n)===S?g:v}}}if(this.ctx.fillStyle=this.backgroundColor||p,this.ctx.fillRect(0,0,f,d),this.ctx.restore(),s){var x,E=this.cachedCanvases.getCanvas("transparent",f,d);this.compositeCtx=this.ctx,this.transparentCanvas=E.canvas,this.ctx=E.context,this.ctx.save(),(x=this.ctx).transform.apply(x,l((0,i.getCurrentTransform)(this.compositeCtx)))}this.ctx.save(),P(this.ctx,this.foregroundColor),n&&((r=this.ctx).transform.apply(r,l(n)),this.outputScaleX=n[0],this.outputScaleY=n[0]),(e=this.ctx).transform.apply(e,l(a.transform)),this.viewportScale=a.scale,this.baseTransform=(0,i.getCurrentTransform)(this.ctx)}},{key:"executeOperatorList",value:function(t,e,r,i){var a=t.argsArray,o=t.fnArray,s=e||0,l=a.length;if(l===s)return s;for(var u,h=l-s>10&&"function"==typeof r,f=h?Date.now()+15:0,d=0,p=this.commonObjs,v=this.objs;;){if(void 0!==i&&s===i.nextBreakPoint)return i.breakIt(s,r),s;if((u=o[s])!==n.OPS.dependency)this[u].apply(this,a[s]);else{var y,m=c(a[s]);try{for(m.s();!(y=m.n()).done;){var g=y.value,b=g.startsWith("g_")?p:v;if(!b.has(g))return b.get(g,r),s}}catch(t){m.e(t)}finally{m.f()}}if(++s===l)return s;if(h&&++d>10){if(Date.now()>f)return r(),s;d=0}}}},{key:"endDrawing",value:function(){u(this,L,N).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();var t,e=c(this._cachedBitmapsMap.values());try{for(e.s();!(t=e.n()).done;){var r,n=t.value,i=c(n.values());try{for(i.s();!(r=i.n()).done;){var a=r.value;"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement&&(a.width=a.height=0)}}catch(t){i.e(t)}finally{i.f()}n.clear()}}catch(t){e.e(t)}finally{e.f()}this._cachedBitmapsMap.clear()}},{key:"_scaleImage",value:function(t,e){for(var r,n,i=t.width,a=t.height,o=Math.max(Math.hypot(e[0],e[1]),1),s=Math.max(Math.hypot(e[2],e[3]),1),l=i,u=a,c="prescale1";o>2&&l>1||s>2&&u>1;){var h=l,f=u;o>2&&l>1&&(o/=l/(h=Math.ceil(l/2))),s>2&&u>1&&(s/=u/(f=Math.ceil(u/2))),(n=(r=this.cachedCanvases.getCanvas(c,h,f)).context).clearRect(0,0,h,f),n.drawImage(t,0,0,l,u,0,0,h,f),t=r.canvas,l=h,u=f,c="prescale1"===c?"prescale2":"prescale1"}return{img:t,paintWidth:l,paintHeight:u}}},{key:"_createMaskCanvas",value:function(t){var e,r,o,s,u=this.ctx,c=t.width,h=t.height,f=this.current.fillColor,d=this.current.patternFill,p=(0,i.getCurrentTransform)(u);if((t.bitmap||t.data)&&t.count>1){var v=t.bitmap||t.data.buffer;r=JSON.stringify(d?p:[p.slice(0,4),f]),(e=this._cachedBitmapsMap.get(v))||(e=new Map,this._cachedBitmapsMap.set(v,e));var y=e.get(r);if(y&&!d)return{canvas:y,offsetX:Math.round(Math.min(p[0],p[2])+p[4]),offsetY:Math.round(Math.min(p[1],p[3])+p[5])};o=y}o||x((s=this.cachedCanvases.getCanvas("maskCanvas",c,h)).context,t);var m=n.Util.transform(p,[1/c,0,0,-1/h,0,0]);m=n.Util.transform(m,[1,0,0,1,0,-h]);var g=n.Util.applyTransform([0,0],m),b=n.Util.applyTransform([c,h],m),_=n.Util.normalizeRect([g[0],g[1],b[0],b[1]]),w=Math.round(_[2]-_[0])||1,k=Math.round(_[3]-_[1])||1,S=this.cachedCanvases.getCanvas("fillCanvas",w,k),E=S.context,P=Math.min(g[0],b[0]),T=Math.min(g[1],b[1]);E.translate(-P,-T),E.transform.apply(E,l(m)),o||(o=(o=this._scaleImage(s.canvas,(0,i.getCurrentTransformInverse)(E))).img,e&&d&&e.set(r,o)),E.imageSmoothingEnabled=F((0,i.getCurrentTransform)(E),t.interpolate),A(E,o,0,0,o.width,o.height,0,0,c,h),E.globalCompositeOperation="source-in";var C=n.Util.transform((0,i.getCurrentTransformInverse)(E),[1,0,0,1,-P,-T]);return E.fillStyle=d?f.getPattern(u,this,C,a.PathType.FILL):f,E.fillRect(0,0,c,h),e&&!d&&(this.cachedCanvases.delete("fillCanvas"),e.set(r,S.canvas)),{canvas:S.canvas,offsetX:Math.round(P),offsetY:Math.round(T)}}},{key:"setLineWidth",value:function(t){t!==this.current.lineWidth&&(this._cachedScaleForStroking=null),this.current.lineWidth=t,this.ctx.lineWidth=t}},{key:"setLineCap",value:function(t){this.ctx.lineCap=M[t]}},{key:"setLineJoin",value:function(t){this.ctx.lineJoin=R[t]}},{key:"setMiterLimit",value:function(t){this.ctx.miterLimit=t}},{key:"setDash",value:function(t,e){var r=this.ctx;void 0!==r.setLineDash&&(r.setLineDash(t),r.lineDashOffset=e)}},{key:"setRenderingIntent",value:function(t){}},{key:"setFlatness",value:function(t){}},{key:"setGState",value:function(t){var e,r=c(t);try{for(r.s();!(e=r.n()).done;){var n=h(e.value,2),i=n[0],a=n[1];switch(i){case"LW":this.setLineWidth(a);break;case"LC":this.setLineCap(a);break;case"LJ":this.setLineJoin(a);break;case"ML":this.setMiterLimit(a);break;case"D":this.setDash(a[0],a[1]);break;case"RI":this.setRenderingIntent(a);break;case"FL":this.setFlatness(a);break;case"Font":this.setFont(a[0],a[1]);break;case"CA":this.current.strokeAlpha=a;break;case"ca":this.current.fillAlpha=a,this.ctx.globalAlpha=a;break;case"BM":this.ctx.globalCompositeOperation=a;break;case"SMask":this.current.activeSMask=a?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.current.transferMaps=a}}}catch(t){r.e(t)}finally{r.f()}}},{key:"inSMaskMode",get:function(){return!!this.suspendedCtx}},{key:"checkSMaskState",value:function(){var t=this.inSMaskMode;this.current.activeSMask&&!t?this.beginSMaskMode():!this.current.activeSMask&&t&&this.endSMaskMode()}},{key:"beginSMaskMode",value:function(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");var t=this.ctx.canvas.width,e=this.ctx.canvas.height,r="smaskGroupAt"+this.groupLevel,n=this.cachedCanvases.getCanvas(r,t,e);this.suspendedCtx=this.ctx,this.ctx=n.context;var a=this.ctx;a.setTransform.apply(a,l((0,i.getCurrentTransform)(this.suspendedCtx))),E(this.suspendedCtx,a),function(t,e){if(t._removeMirroring)throw new Error("Context is already forwarding operations.");t.__originalSave=t.save,t.__originalRestore=t.restore,t.__originalRotate=t.rotate,t.__originalScale=t.scale,t.__originalTranslate=t.translate,t.__originalTransform=t.transform,t.__originalSetTransform=t.setTransform,t.__originalResetTransform=t.resetTransform,t.__originalClip=t.clip,t.__originalMoveTo=t.moveTo,t.__originalLineTo=t.lineTo,t.__originalBezierCurveTo=t.bezierCurveTo,t.__originalRect=t.rect,t.__originalClosePath=t.closePath,t.__originalBeginPath=t.beginPath,t._removeMirroring=function(){t.save=t.__originalSave,t.restore=t.__originalRestore,t.rotate=t.__originalRotate,t.scale=t.__originalScale,t.translate=t.__originalTranslate,t.transform=t.__originalTransform,t.setTransform=t.__originalSetTransform,t.resetTransform=t.__originalResetTransform,t.clip=t.__originalClip,t.moveTo=t.__originalMoveTo,t.lineTo=t.__originalLineTo,t.bezierCurveTo=t.__originalBezierCurveTo,t.rect=t.__originalRect,t.closePath=t.__originalClosePath,t.beginPath=t.__originalBeginPath,delete t._removeMirroring},t.save=function(){e.save(),this.__originalSave()},t.restore=function(){e.restore(),this.__originalRestore()},t.translate=function(t,r){e.translate(t,r),this.__originalTranslate(t,r)},t.scale=function(t,r){e.scale(t,r),this.__originalScale(t,r)},t.transform=function(t,r,n,i,a,o){e.transform(t,r,n,i,a,o),this.__originalTransform(t,r,n,i,a,o)},t.setTransform=function(t,r,n,i,a,o){e.setTransform(t,r,n,i,a,o),this.__originalSetTransform(t,r,n,i,a,o)},t.resetTransform=function(){e.resetTransform(),this.__originalResetTransform()},t.rotate=function(t){e.rotate(t),this.__originalRotate(t)},t.clip=function(t){e.clip(t),this.__originalClip(t)},t.moveTo=function(t,r){e.moveTo(t,r),this.__originalMoveTo(t,r)},t.lineTo=function(t,r){e.lineTo(t,r),this.__originalLineTo(t,r)},t.bezierCurveTo=function(t,r,n,i,a,o){e.bezierCurveTo(t,r,n,i,a,o),this.__originalBezierCurveTo(t,r,n,i,a,o)},t.rect=function(t,r,n,i){e.rect(t,r,n,i),this.__originalRect(t,r,n,i)},t.closePath=function(){e.closePath(),this.__originalClosePath()},t.beginPath=function(){e.beginPath(),this.__originalBeginPath()}}(a,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}},{key:"endSMaskMode",value:function(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),E(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}},{key:"compose",value:function(t){if(this.current.activeSMask){t?(t[0]=Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.ceil(t[2]),t[3]=Math.ceil(t[3])):t=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];var e=this.current.activeSMask;(function(t,e,r,n){var i=n[0],a=n[1],o=n[2]-i,s=n[3]-a;0!==o&&0!==s&&(function(t,e,r,n,i,a,o,s,l,u,c){var h,f=!!a,d=f?a[0]:0,p=f?a[1]:0,v=f?a[2]:0;h="Luminosity"===i?O:C;for(var y=Math.min(n,Math.ceil(1048576/r)),m=0;m<n;m+=y){var g=Math.min(y,n-m),b=t.getImageData(s-u,m+(l-c),r,g),_=e.getImageData(s,m+l,r,g);f&&T(b.data,d,p,v),h(b.data,_.data,o),e.putImageData(_,s,m+l)}}(e.context,r,o,s,e.subtype,e.backdrop,e.transferMap,i,a,e.offsetX,e.offsetY),t.save(),t.globalAlpha=1,t.globalCompositeOperation="source-over",t.setTransform(1,0,0,1,0,0),t.drawImage(r.canvas,0,0),t.restore())})(this.suspendedCtx,e,this.ctx,t),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}}},{key:"save",value:function(){this.inSMaskMode?(E(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();var t=this.current;this.stateStack.push(t),this.current=t.clone()}},{key:"restore",value:function(){0===this.stateStack.length&&this.inSMaskMode&&this.endSMaskMode(),0!==this.stateStack.length&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),E(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking=null,this._cachedGetSinglePixelWidth=null)}},{key:"transform",value:function(t,e,r,n,i,a){this.ctx.transform(t,e,r,n,i,a),this._cachedScaleForStroking=null,this._cachedGetSinglePixelWidth=null}},{key:"constructPath",value:function(t,e,r){for(var a,o,s=this.ctx,l=this.current,u=l.x,c=l.y,h=(0,i.getCurrentTransform)(s),f=0===h[0]&&0===h[3]||0===h[1]&&0===h[2],d=f?r.slice(0):null,p=0,v=0,y=t.length;p<y;p++)switch(0|t[p]){case n.OPS.rectangle:u=e[v++],c=e[v++];var m=e[v++],g=e[v++],b=u+m,_=c+g;s.moveTo(u,c),0===m||0===g?s.lineTo(b,_):(s.lineTo(b,c),s.lineTo(b,_),s.lineTo(u,_)),f||l.updateRectMinMax(h,[u,c,b,_]),s.closePath();break;case n.OPS.moveTo:u=e[v++],c=e[v++],s.moveTo(u,c),f||l.updatePathMinMax(h,u,c);break;case n.OPS.lineTo:u=e[v++],c=e[v++],s.lineTo(u,c),f||l.updatePathMinMax(h,u,c);break;case n.OPS.curveTo:a=u,o=c,u=e[v+4],c=e[v+5],s.bezierCurveTo(e[v],e[v+1],e[v+2],e[v+3],u,c),l.updateCurvePathMinMax(h,a,o,e[v],e[v+1],e[v+2],e[v+3],u,c,d),v+=6;break;case n.OPS.curveTo2:a=u,o=c,s.bezierCurveTo(u,c,e[v],e[v+1],e[v+2],e[v+3]),l.updateCurvePathMinMax(h,a,o,u,c,e[v],e[v+1],e[v+2],e[v+3],d),u=e[v+2],c=e[v+3],v+=4;break;case n.OPS.curveTo3:a=u,o=c,u=e[v+2],c=e[v+3],s.bezierCurveTo(e[v],e[v+1],u,c,u,c),l.updateCurvePathMinMax(h,a,o,e[v],e[v+1],u,c,u,c,d),v+=4;break;case n.OPS.closePath:s.closePath()}f&&l.updateScalingPathMinMax(h,d),l.setCurrentPoint(u,c)}},{key:"closePath",value:function(){this.ctx.closePath()}},{key:"stroke",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.ctx,r=this.current.strokeColor;e.globalAlpha=this.current.strokeAlpha,this.contentVisible&&("object"===p(r)&&null!=r&&r.getPattern?(e.save(),e.strokeStyle=r.getPattern(e,this,(0,i.getCurrentTransformInverse)(e),a.PathType.STROKE),this.rescaleAndStroke(!1),e.restore()):this.rescaleAndStroke(!0)),t&&this.consumePath(this.current.getClippedPathBoundingBox()),e.globalAlpha=this.current.fillAlpha}},{key:"closeStroke",value:function(){this.closePath(),this.stroke()}},{key:"fill",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.ctx,r=this.current.fillColor,n=!1;this.current.patternFill&&(e.save(),e.fillStyle=r.getPattern(e,this,(0,i.getCurrentTransformInverse)(e),a.PathType.FILL),n=!0);var o=this.current.getClippedPathBoundingBox();this.contentVisible&&null!==o&&(this.pendingEOFill?(e.fill("evenodd"),this.pendingEOFill=!1):e.fill()),n&&e.restore(),t&&this.consumePath(o)}},{key:"eoFill",value:function(){this.pendingEOFill=!0,this.fill()}},{key:"fillStroke",value:function(){this.fill(!1),this.stroke(!1),this.consumePath()}},{key:"eoFillStroke",value:function(){this.pendingEOFill=!0,this.fillStroke()}},{key:"closeFillStroke",value:function(){this.closePath(),this.fillStroke()}},{key:"closeEOFillStroke",value:function(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}},{key:"endPath",value:function(){this.consumePath()}},{key:"clip",value:function(){this.pendingClip=I}},{key:"eoClip",value:function(){this.pendingClip=j}},{key:"beginText",value:function(){this.current.textMatrix=n.IDENTITY_MATRIX,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}},{key:"endText",value:function(){var t=this.pendingTextPaths,e=this.ctx;if(void 0!==t){e.save(),e.beginPath();var r,n=c(t);try{for(n.s();!(r=n.n()).done;){var i=r.value;e.setTransform.apply(e,l(i.transform)),e.translate(i.x,i.y),i.addToPath(e,i.fontSize)}}catch(t){n.e(t)}finally{n.f()}e.restore(),e.clip(),e.beginPath(),delete this.pendingTextPaths}else e.beginPath()}},{key:"setCharSpacing",value:function(t){this.current.charSpacing=t}},{key:"setWordSpacing",value:function(t){this.current.wordSpacing=t}},{key:"setHScale",value:function(t){this.current.textHScale=t/100}},{key:"setLeading",value:function(t){this.current.leading=-t}},{key:"setFont",value:function(t,e){var r=this.commonObjs.get(t),i=this.current;if(!r)throw new Error("Can't find font for ".concat(t));if(i.fontMatrix=r.fontMatrix||n.FONT_IDENTITY_MATRIX,0!==i.fontMatrix[0]&&0!==i.fontMatrix[3]||(0,n.warn)("Invalid font matrix for font "+t),e<0?(e=-e,i.fontDirection=-1):i.fontDirection=1,this.current.font=r,this.current.fontSize=e,!r.isType3Font){var a=r.loadedName||"sans-serif",o="normal";r.black?o="900":r.bold&&(o="bold");var s=r.italic?"italic":"normal",l='"'.concat(a,'", ').concat(r.fallbackName),u=e;e<16?u=16:e>100&&(u=100),this.current.fontSizeScale=e/u,this.ctx.font="".concat(s," ").concat(o," ").concat(u,"px ").concat(l)}}},{key:"setTextRenderingMode",value:function(t){this.current.textRenderingMode=t}},{key:"setTextRise",value:function(t){this.current.textRise=t}},{key:"moveText",value:function(t,e){this.current.x=this.current.lineX+=t,this.current.y=this.current.lineY+=e}},{key:"setLeadingMoveText",value:function(t,e){this.setLeading(-e),this.moveText(t,e)}},{key:"setTextMatrix",value:function(t,e,r,n,i,a){this.current.textMatrix=[t,e,r,n,i,a],this.current.textMatrixScale=Math.hypot(t,e),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}},{key:"nextLine",value:function(){this.moveText(0,this.current.leading)}},{key:"paintChar",value:function(t,e,r,a){var o,s=this.ctx,u=this.current,c=u.font,h=u.textRenderingMode,f=u.fontSize/u.fontSizeScale,d=h&n.TextRenderingMode.FILL_STROKE_MASK,p=!!(h&n.TextRenderingMode.ADD_TO_PATH_FLAG),v=u.patternFill&&!c.missingFile;(c.disableFontFace||p||v)&&(o=c.getPathGenerator(this.commonObjs,t)),c.disableFontFace||v?(s.save(),s.translate(e,r),s.beginPath(),o(s,f),a&&s.setTransform.apply(s,l(a)),d!==n.TextRenderingMode.FILL&&d!==n.TextRenderingMode.FILL_STROKE||s.fill(),d!==n.TextRenderingMode.STROKE&&d!==n.TextRenderingMode.FILL_STROKE||s.stroke(),s.restore()):(d!==n.TextRenderingMode.FILL&&d!==n.TextRenderingMode.FILL_STROKE||s.fillText(t,e,r),d!==n.TextRenderingMode.STROKE&&d!==n.TextRenderingMode.FILL_STROKE||s.strokeText(t,e,r)),p&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:(0,i.getCurrentTransform)(s),x:e,y:r,fontSize:f,addToPath:o})}},{key:"isFontSubpixelAAEnabled",get:function(){var t=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10).context;t.scale(1.5,1),t.fillText("I",0,10);for(var e=t.getImageData(0,0,10,10).data,r=!1,i=3;i<e.length;i+=4)if(e[i]>0&&e[i]<255){r=!0;break}return(0,n.shadow)(this,"isFontSubpixelAAEnabled",r)}},{key:"showText",value:function(t){var e=this.current,r=e.font;if(r.isType3Font)return this.showType3Text(t);var o=e.fontSize;if(0!==o){var s,u=this.ctx,h=e.fontSizeScale,f=e.charSpacing,d=e.wordSpacing,p=e.fontDirection,v=e.textHScale*p,y=t.length,m=r.vertical,g=m?1:-1,b=r.defaultVMetrics,_=o*e.fontMatrix[0],w=e.textRenderingMode===n.TextRenderingMode.FILL&&!r.disableFontFace&&!e.patternFill;if(u.save(),u.transform.apply(u,l(e.textMatrix)),u.translate(e.x,e.y+e.textRise),p>0?u.scale(v,-1):u.scale(v,1),e.patternFill){u.save();var A=e.fillColor.getPattern(u,this,(0,i.getCurrentTransformInverse)(u),a.PathType.FILL);s=(0,i.getCurrentTransform)(u),u.restore(),u.fillStyle=A}var k=e.lineWidth,S=e.textMatrixScale;if(0===S||0===k){var x=e.textRenderingMode&n.TextRenderingMode.FILL_STROKE_MASK;x!==n.TextRenderingMode.STROKE&&x!==n.TextRenderingMode.FILL_STROKE||(k=this.getSinglePixelWidth())}else k/=S;if(1!==h&&(u.scale(h,h),k/=h),u.lineWidth=k,r.isInvalidPDFjsFont){var E,P=[],T=0,C=c(t);try{for(C.s();!(E=C.n()).done;){var O=E.value;P.push(O.unicode),T+=O.width}}catch(t){C.e(t)}finally{C.f()}return u.fillText(P.join(""),0,0),e.x+=T*_*v,u.restore(),void this.compose()}var F,M=0;for(F=0;F<y;++F){var R=t[F];if("number"!=typeof R){var I=!1,j=(R.isSpace?d:0)+f,L=R.fontChar,D=R.accent,N=void 0,U=void 0,W=R.width;if(m){var G=R.vmetric||b,B=-(R.vmetric?G[1]:.5*W)*_,q=G[2]*_;W=G?-G[0]:W,N=B/h,U=(M+q)/h}else N=M/h,U=0;if(r.remeasure&&W>0){var H=1e3*u.measureText(L).width/o*h;if(W<H&&this.isFontSubpixelAAEnabled){var z=W/H;I=!0,u.save(),u.scale(z,1),N/=z}else W!==H&&(N+=(W-H)/2e3*o/h)}if(this.contentVisible&&(R.isInFont||r.missingFile))if(w&&!D)u.fillText(L,N,U);else if(this.paintChar(L,N,U,s),D){var V=N+o*D.offset.x/h,X=U-o*D.offset.y/h;this.paintChar(D.fontChar,V,X,s)}M+=m?W*_-j*p:W*_+j*p,I&&u.restore()}else M+=g*R*o/1e3}m?e.y-=M:e.x+=M*v,u.restore(),this.compose()}}},{key:"showType3Text",value:function(t){var e,r,i,a,o=this.ctx,s=this.current,u=s.font,c=s.fontSize,h=s.fontDirection,f=u.vertical?1:-1,d=s.charSpacing,p=s.wordSpacing,v=s.textHScale*h,y=s.fontMatrix||n.FONT_IDENTITY_MATRIX,m=t.length;if(s.textRenderingMode!==n.TextRenderingMode.INVISIBLE&&0!==c){for(this._cachedScaleForStroking=null,this._cachedGetSinglePixelWidth=null,o.save(),o.transform.apply(o,l(s.textMatrix)),o.translate(s.x,s.y),o.scale(v,h),e=0;e<m;++e)if("number"!=typeof(r=t[e])){var g=(r.isSpace?p:0)+d,b=u.charProcOperatorList[r.operatorListId];b?(this.contentVisible&&(this.processingType3=r,this.save(),o.scale(c,c),o.transform.apply(o,l(y)),this.executeOperatorList(b),this.restore()),i=n.Util.applyTransform([r.width,0],y)[0]*c+g,o.translate(i,0),s.x+=i*v):(0,n.warn)('Type3 character "'.concat(r.operatorListId,'" is not available.'))}else a=f*r*c/1e3,this.ctx.translate(a,0),s.x+=a*v;o.restore(),this.processingType3=null}}},{key:"setCharWidth",value:function(t,e){}},{key:"setCharWidthAndBounds",value:function(t,e,r,n,i,a){this.ctx.rect(r,n,i-r,a-n),this.ctx.clip(),this.endPath()}},{key:"getColorN_Pattern",value:function(e){var r,n=this;if("TilingPattern"===e[0]){var o=e[1],s=this.baseTransform||(0,i.getCurrentTransform)(this.ctx),l={createCanvasGraphics:function(e){return new t(e,n.commonObjs,n.objs,n.canvasFactory,{optionalContentConfig:n.optionalContentConfig,markedContentStack:n.markedContentStack})}};r=new a.TilingPattern(e,o,this.ctx,l,s)}else r=this._getPattern(e[1],e[2]);return r}},{key:"setStrokeColorN",value:function(){this.current.strokeColor=this.getColorN_Pattern(arguments)}},{key:"setFillColorN",value:function(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}},{key:"setStrokeRGBColor",value:function(t,e,r){var i,a=(null===(i=this.selectColor)||void 0===i?void 0:i.call(this,t,e,r))||n.Util.makeHexColor(t,e,r);this.ctx.strokeStyle=a,this.current.strokeColor=a}},{key:"setFillRGBColor",value:function(t,e,r){var i,a=(null===(i=this.selectColor)||void 0===i?void 0:i.call(this,t,e,r))||n.Util.makeHexColor(t,e,r);this.ctx.fillStyle=a,this.current.fillColor=a,this.current.patternFill=!1}},{key:"_getPattern",value:function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.cachedPatterns.has(t)?e=this.cachedPatterns.get(t):(e=(0,a.getShadingPattern)(this.objs.get(t)),this.cachedPatterns.set(t,e)),r&&(e.matrix=r),e}},{key:"shadingFill",value:function(t){if(this.contentVisible){var e=this.ctx;this.save();var r=this._getPattern(t);e.fillStyle=r.getPattern(e,this,(0,i.getCurrentTransformInverse)(e),a.PathType.SHADING);var o=(0,i.getCurrentTransformInverse)(e);if(o){var s=e.canvas,l=s.width,u=s.height,c=n.Util.applyTransform([0,0],o),h=n.Util.applyTransform([0,u],o),f=n.Util.applyTransform([l,0],o),d=n.Util.applyTransform([l,u],o),p=Math.min(c[0],h[0],f[0],d[0]),v=Math.min(c[1],h[1],f[1],d[1]),y=Math.max(c[0],h[0],f[0],d[0]),m=Math.max(c[1],h[1],f[1],d[1]);this.ctx.fillRect(p,v,y-p,m-v)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}}},{key:"beginInlineImage",value:function(){(0,n.unreachable)("Should not call beginInlineImage")}},{key:"beginImageData",value:function(){(0,n.unreachable)("Should not call beginImageData")}},{key:"paintFormXObjectBegin",value:function(t,e){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),Array.isArray(t)&&6===t.length&&this.transform.apply(this,l(t)),this.baseTransform=(0,i.getCurrentTransform)(this.ctx),e)){var r=e[2]-e[0],n=e[3]-e[1];this.ctx.rect(e[0],e[1],r,n),this.current.updateRectMinMax((0,i.getCurrentTransform)(this.ctx),e),this.clip(),this.endPath()}}},{key:"paintFormXObjectEnd",value:function(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}},{key:"beginGroup",value:function(t){if(this.contentVisible){this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);var e=this.ctx;t.isolated||(0,n.info)("TODO: Support non-isolated groups."),t.knockout&&(0,n.warn)("Knockout groups not supported.");var r=(0,i.getCurrentTransform)(e);if(t.matrix&&e.transform.apply(e,l(t.matrix)),!t.bbox)throw new Error("Bounding box is required.");var a=n.Util.getAxialAlignedBoundingBox(t.bbox,(0,i.getCurrentTransform)(e)),o=[0,0,e.canvas.width,e.canvas.height];a=n.Util.intersect(a,o)||[0,0,0,0];var s=Math.floor(a[0]),u=Math.floor(a[1]),c=Math.max(Math.ceil(a[2])-s,1),h=Math.max(Math.ceil(a[3])-u,1),f=1,d=1;c>g&&(f=c/g,c=g),h>g&&(d=h/g,h=g),this.current.startNewPathAndClipBox([0,0,c,h]);var p="groupAt"+this.groupLevel;t.smask&&(p+="_smask_"+this.smaskCounter++%2);var v=this.cachedCanvases.getCanvas(p,c,h),y=v.context;y.scale(1/f,1/d),y.translate(-s,-u),y.transform.apply(y,l(r)),t.smask?this.smaskStack.push({canvas:v.canvas,context:y,offsetX:s,offsetY:u,scaleX:f,scaleY:d,subtype:t.smask.subtype,backdrop:t.smask.backdrop,transferMap:t.smask.transferMap||null,startTransformInverse:null}):(e.setTransform(1,0,0,1,0,0),e.translate(s,u),e.scale(f,d),e.save()),E(e,y),this.ctx=y,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(e),this.groupLevel++}}},{key:"endGroup",value:function(t){if(this.contentVisible){this.groupLevel--;var e=this.ctx,r=this.groupStack.pop();if(this.ctx=r,this.ctx.imageSmoothingEnabled=!1,t.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{var a;this.ctx.restore();var o=(0,i.getCurrentTransform)(this.ctx);this.restore(),this.ctx.save(),(a=this.ctx).setTransform.apply(a,l(o));var s=n.Util.getAxialAlignedBoundingBox([0,0,e.canvas.width,e.canvas.height],o);this.ctx.drawImage(e.canvas,0,0),this.ctx.restore(),this.compose(s)}}}},{key:"beginAnnotation",value:function(t,e,r,a,o){var s;if(u(this,L,N).call(this),P(this.ctx,this.foregroundColor),this.ctx.save(),this.save(),this.baseTransform&&(s=this.ctx).setTransform.apply(s,l(this.baseTransform)),Array.isArray(e)&&4===e.length){var c=e[2]-e[0],f=e[3]-e[1];if(o&&this.annotationCanvasMap){(r=r.slice())[4]-=e[0],r[5]-=e[1],(e=e.slice())[0]=e[1]=0,e[2]=c,e[3]=f;var d=h(n.Util.singularValueDecompose2dScale((0,i.getCurrentTransform)(this.ctx)),2),p=d[0],v=d[1],y=this.viewportScale,m=Math.ceil(c*this.outputScaleX*y),g=Math.ceil(f*this.outputScaleY*y);this.annotationCanvas=this.canvasFactory.create(m,g);var b=this.annotationCanvas,_=b.canvas,w=b.context;this.annotationCanvasMap.set(t,_),this.annotationCanvas.savedCtx=this.ctx,this.ctx=w,this.ctx.setTransform(p,0,0,-v,0,f*v),P(this.ctx,this.foregroundColor)}else P(this.ctx,this.foregroundColor),this.ctx.rect(e[0],e[1],c,f),this.ctx.clip(),this.endPath()}this.current=new k(this.ctx.canvas.width,this.ctx.canvas.height),this.transform.apply(this,l(r)),this.transform.apply(this,l(a))}},{key:"endAnnotation",value:function(){this.annotationCanvas&&(this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}},{key:"paintImageMaskXObject",value:function(t){if(this.contentVisible){var e=t.count;(t=this.getObject(t.data,t)).count=e;var r=this.ctx,n=this.processingType3;if(n&&(void 0===n.compiled&&(n.compiled=function(t){var e=t.width,r=t.height;if(e>b||r>b)return null;var n,i,a,o,s=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),l=e+1,u=new Uint8Array(l*(r+1)),h=e+7&-8,f=new Uint8Array(h*r),d=0,p=c(t.data);try{for(p.s();!(o=p.n()).done;)for(var v=o.value,y=128;y>0;)f[d++]=v&y?0:255,y>>=1}catch(t){p.e(t)}finally{p.f()}var m=0;for(0!==f[d=0]&&(u[0]=1,++m),i=1;i<e;i++)f[d]!==f[d+1]&&(u[i]=f[d]?2:1,++m),d++;for(0!==f[d]&&(u[i]=2,++m),n=1;n<r;n++){a=n*l,f[(d=n*h)-h]!==f[d]&&(u[a]=f[d]?1:8,++m);var g=(f[d]?4:0)+(f[d-h]?8:0);for(i=1;i<e;i++)s[g=(g>>2)+(f[d+1]?4:0)+(f[d-h+1]?8:0)]&&(u[a+i]=s[g],++m),d++;if(f[d-h]!==f[d]&&(u[a+i]=f[d]?2:4,++m),m>1e3)return null}for(a=n*l,0!==f[d=h*(r-1)]&&(u[a]=8,++m),i=1;i<e;i++)f[d]!==f[d+1]&&(u[a+i]=f[d]?4:8,++m),d++;if(0!==f[d]&&(u[a+i]=4,++m),m>1e3)return null;var _=new Int32Array([0,l,-1,0,-l,0,0,0,1]),w=new Path2D;for(n=0;m&&n<=r;n++){for(var A=n*l,k=A+e;A<k&&!u[A];)A++;if(A!==k){w.moveTo(A%l,n);var S=A,x=u[A];do{var E=_[x];do{A+=E}while(!u[A]);var P=u[A];5!==P&&10!==P?(x=P,u[A]=0):(x=P&51*x>>4,u[A]&=x>>2|x<<2),w.lineTo(A%l,A/l|0),u[A]||--m}while(S!==A);--n}}return f=null,u=null,function(t){t.save(),t.scale(1/e,-1/r),t.translate(0,-r),t.fill(w),t.beginPath(),t.restore()}}(t)),n.compiled))n.compiled(r);else{var i=this._createMaskCanvas(t),a=i.canvas;r.save(),r.setTransform(1,0,0,1,0,0),r.drawImage(a,i.offsetX,i.offsetY),r.restore(),this.compose()}}}},{key:"paintImageMaskXObjectRepeat",value:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;if(this.contentVisible){t=this.getObject(t.data,t);var l=this.ctx;l.save();var u=(0,i.getCurrentTransform)(l);l.transform(e,r,a,o,0,0);var c=this._createMaskCanvas(t);l.setTransform(1,0,0,1,c.offsetX-u[4],c.offsetY-u[5]);for(var f=0,d=s.length;f<d;f+=2){var p=n.Util.transform(u,[e,r,a,o,s[f],s[f+1]]),v=h(n.Util.applyTransform([0,0],p),2),y=v[0],m=v[1];l.drawImage(c.canvas,y,m)}l.restore(),this.compose()}}},{key:"paintImageMaskXObjectGroup",value:function(t){if(this.contentVisible){var e,r=this.ctx,n=this.current.fillColor,o=this.current.patternFill,s=c(t);try{for(s.s();!(e=s.n()).done;){var u=e.value,h=u.data,f=u.width,d=u.height,p=u.transform,v=this.cachedCanvases.getCanvas("maskCanvas",f,d),y=v.context;y.save(),x(y,this.getObject(h,u)),y.globalCompositeOperation="source-in",y.fillStyle=o?n.getPattern(y,this,(0,i.getCurrentTransformInverse)(r),a.PathType.FILL):n,y.fillRect(0,0,f,d),y.restore(),r.save(),r.transform.apply(r,l(p)),r.scale(1,-1),A(r,v.canvas,0,0,f,d,0,-1,1,1),r.restore()}}catch(t){s.e(t)}finally{s.f()}this.compose()}}},{key:"paintImageXObject",value:function(t){if(this.contentVisible){var e=this.getObject(t);e?this.paintInlineImageXObject(e):(0,n.warn)("Dependent image isn't ready yet")}}},{key:"paintImageXObjectRepeat",value:function(t,e,r,i){if(this.contentVisible){var a=this.getObject(t);if(a){for(var o=a.width,s=a.height,l=[],u=0,c=i.length;u<c;u+=2)l.push({transform:[e,0,0,r,i[u],i[u+1]],x:0,y:0,w:o,h:s});this.paintInlineImageXObjectGroup(a,l)}else(0,n.warn)("Dependent image isn't ready yet")}}},{key:"paintInlineImageXObject",value:function(t){if(this.contentVisible){var e,r=t.width,n=t.height,a=this.ctx;if(this.save(),a.scale(1/r,-1/n),"function"==typeof HTMLElement&&t instanceof HTMLElement||!t.data)e=t;else{var o=this.cachedCanvases.getCanvas("inlineImage",r,n);S(o.context,t,this.current.transferMaps),e=o.canvas}var s=this._scaleImage(e,(0,i.getCurrentTransformInverse)(a));a.imageSmoothingEnabled=F((0,i.getCurrentTransform)(a),t.interpolate),A(a,s.img,0,0,s.paintWidth,s.paintHeight,0,-n,r,n),this.compose(),this.restore()}}},{key:"paintInlineImageXObjectGroup",value:function(t,e){if(this.contentVisible){var r=this.ctx,n=t.width,i=t.height,a=this.cachedCanvases.getCanvas("inlineImage",n,i);S(a.context,t,this.current.transferMaps);var o,s=c(e);try{for(s.s();!(o=s.n()).done;){var u=o.value;r.save(),r.transform.apply(r,l(u.transform)),r.scale(1,-1),A(r,a.canvas,u.x,u.y,u.w,u.h,0,-1,1,1),r.restore()}}catch(t){s.e(t)}finally{s.f()}this.compose()}}},{key:"paintSolidColorImageMask",value:function(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}},{key:"markPoint",value:function(t){}},{key:"markPointProps",value:function(t,e){}},{key:"beginMarkedContent",value:function(t){this.markedContentStack.push({visible:!0})}},{key:"beginMarkedContentProps",value:function(t,e){"OC"===t?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(e)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}},{key:"endMarkedContent",value:function(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}},{key:"beginCompat",value:function(){}},{key:"endCompat",value:function(){}},{key:"consumePath",value:function(t){var e=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(t);var r=this.ctx;this.pendingClip&&(e||(this.pendingClip===j?r.clip("evenodd"):r.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),r.beginPath()}},{key:"getSinglePixelWidth",value:function(){if(!this._cachedGetSinglePixelWidth){var t=(0,i.getCurrentTransform)(this.ctx);if(0===t[1]&&0===t[2])this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(t[0]),Math.abs(t[3]));else{var e=Math.abs(t[0]*t[3]-t[2]*t[1]),r=Math.hypot(t[0],t[2]),n=Math.hypot(t[1],t[3]);this._cachedGetSinglePixelWidth=Math.max(r,n)/e}}return this._cachedGetSinglePixelWidth}},{key:"getScaleForStroking",value:function(){if(!this._cachedScaleForStroking){var t,e,r=this.current.lineWidth,n=(0,i.getCurrentTransform)(this.ctx);if(0===n[1]&&0===n[2]){var a=Math.abs(n[0]),o=Math.abs(n[3]);if(0===r)t=1/a,e=1/o;else{var s=a*r,l=o*r;t=s<1?1/s:1,e=l<1?1/l:1}}else{var u=Math.abs(n[0]*n[3]-n[2]*n[1]),c=Math.hypot(n[0],n[1]),h=Math.hypot(n[2],n[3]);if(0===r)t=h/u,e=c/u;else{var f=r*u;t=h>f?h/f:1,e=c>f?c/f:1}}this._cachedScaleForStroking=[t,e]}return this._cachedScaleForStroking}},{key:"rescaleAndStroke",value:function(t){var e=this.ctx,r=this.current.lineWidth,n=h(this.getScaleForStroking(),2),a=n[0],o=n[1];if(e.lineWidth=r||1,1!==a||1!==o){var s,u,c;t&&(s=(0,i.getCurrentTransform)(e),u=e.getLineDash().slice(),c=e.lineDashOffset),e.scale(a,o);var f=Math.max(a,o);e.setLineDash(e.getLineDash().map((function(t){return t/f}))),e.lineDashOffset/=f,e.stroke(),t&&(e.setTransform.apply(e,l(s)),e.setLineDash(u),e.lineDashOffset=c)}else e.stroke()}},{key:"isContentVisible",value:function(){for(var t=this.markedContentStack.length-1;t>=0;t--)if(!this.markedContentStack[t].visible)return!1;return!0}}]),t}();function N(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)}for(var U in e.CanvasGraphics=D,n.OPS)void 0!==D.prototype[U]&&(D.prototype[n.OPS[U]]=D.prototype[U])},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TilingPattern=e.PathType=void 0,e.getShadingPattern=function(t){switch(t[0]){case"RadialAxial":return new w(t);case"Mesh":return new S(t);case"Dummy":return new x}throw new Error("Unknown IR type: ".concat(t[0]))};var n=r(1),i=r(137),a=r(3);function o(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||l(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=l(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function l(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function f(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=d(t);if(e){var i=d(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,r)}}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function v(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===p(i)?i:String(i)),n)}var i}function m(t,e,r){return e&&y(t.prototype,e),r&&y(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var g={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function b(t,e){if(e&&!a.isNodeJS){var r=e[2]-e[0],n=e[3]-e[1],i=new Path2D;i.rect(e[0],e[1],r,n),t.clip(i)}}e.PathType=g;var _=function(){function t(){v(this,t),this.constructor===t&&(0,n.unreachable)("Cannot initialize BaseShadingPattern.")}return m(t,[{key:"getPattern",value:function(){(0,n.unreachable)("Abstract method `getPattern` called.")}}]),t}(),w=function(t){c(r,t);var e=f(r);function r(t){var n;return v(this,r),(n=e.call(this))._type=t[1],n._bbox=t[2],n._colorStops=t[3],n._p0=t[4],n._p1=t[5],n._r0=t[6],n._r1=t[7],n.matrix=null,n}return m(r,[{key:"_createGradient",value:function(t){var e;"axial"===this._type?e=t.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):"radial"===this._type&&(e=t.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));var r,n=s(this._colorStops);try{for(n.s();!(r=n.n()).done;){var i=r.value;e.addColorStop(i[0],i[1])}}catch(t){n.e(t)}finally{n.f()}return e}},{key:"getPattern",value:function(t,e,r,a){var s;if(a===g.STROKE||a===g.FILL){var l=e.current.getClippedPathBoundingBox(a,(0,i.getCurrentTransform)(t))||[0,0,0,0],u=Math.ceil(l[2]-l[0])||1,c=Math.ceil(l[3]-l[1])||1,h=e.cachedCanvases.getCanvas("pattern",u,c,!0),f=h.context;f.clearRect(0,0,f.canvas.width,f.canvas.height),f.beginPath(),f.rect(0,0,f.canvas.width,f.canvas.height),f.translate(-l[0],-l[1]),r=n.Util.transform(r,[1,0,0,1,l[0],l[1]]),f.transform.apply(f,o(e.baseTransform)),this.matrix&&f.transform.apply(f,o(this.matrix)),b(f,this._bbox),f.fillStyle=this._createGradient(f),f.fill(),s=t.createPattern(h.canvas,"no-repeat");var d=new DOMMatrix(r);s.setTransform(d)}else b(t,this._bbox),s=this._createGradient(t);return s}}]),r}(_);function A(t,e,r,n,i,a,o,s){var l,u=e.coords,c=e.colors,h=t.data,f=4*t.width;u[r+1]>u[n+1]&&(l=r,r=n,n=l,l=a,a=o,o=l),u[n+1]>u[i+1]&&(l=n,n=i,i=l,l=o,o=s,s=l),u[r+1]>u[n+1]&&(l=r,r=n,n=l,l=a,a=o,o=l);var d=(u[r]+e.offsetX)*e.scaleX,p=(u[r+1]+e.offsetY)*e.scaleY,v=(u[n]+e.offsetX)*e.scaleX,y=(u[n+1]+e.offsetY)*e.scaleY,m=(u[i]+e.offsetX)*e.scaleX,g=(u[i+1]+e.offsetY)*e.scaleY;if(!(p>=g))for(var b,_,w,A,k,S,x,E,P=c[a],T=c[a+1],C=c[a+2],O=c[o],F=c[o+1],M=c[o+2],R=c[s],I=c[s+1],j=c[s+2],L=Math.round(p),D=Math.round(g),N=L;N<=D;N++){if(N<y){var U;b=d-(d-v)*(U=N<p?0:(p-N)/(p-y)),_=P-(P-O)*U,w=T-(T-F)*U,A=C-(C-M)*U}else{var W;b=v-(v-m)*(W=N>g?1:y===g?0:(y-N)/(y-g)),_=O-(O-R)*W,w=F-(F-I)*W,A=M-(M-j)*W}var G=void 0;k=d-(d-m)*(G=N<p?0:N>g?1:(p-N)/(p-g)),S=P-(P-R)*G,x=T-(T-I)*G,E=C-(C-j)*G;for(var B=Math.round(Math.min(b,k)),q=Math.round(Math.max(b,k)),H=f*N+4*B,z=B;z<=q;z++)(G=(b-z)/(b-k))<0?G=0:G>1&&(G=1),h[H++]=_-(_-S)*G|0,h[H++]=w-(w-x)*G|0,h[H++]=A-(A-E)*G|0,h[H++]=255}}function k(t,e,r){var n,i,a=e.coords,o=e.colors;switch(e.type){case"lattice":var s=e.verticesPerRow,l=Math.floor(a.length/s)-1,u=s-1;for(n=0;n<l;n++)for(var c=n*s,h=0;h<u;h++,c++)A(t,r,a[c],a[c+1],a[c+s],o[c],o[c+1],o[c+s]),A(t,r,a[c+s+1],a[c+1],a[c+s],o[c+s+1],o[c+1],o[c+s]);break;case"triangles":for(n=0,i=a.length;n<i;n+=3)A(t,r,a[n],a[n+1],a[n+2],o[n],o[n+1],o[n+2]);break;default:throw new Error("illegal figure")}}var S=function(t){c(r,t);var e=f(r);function r(t){var n;return v(this,r),(n=e.call(this))._coords=t[2],n._colors=t[3],n._figures=t[4],n._bounds=t[5],n._bbox=t[7],n._background=t[8],n.matrix=null,n}return m(r,[{key:"_createMeshCanvas",value:function(t,e,r){var n=Math.floor(this._bounds[0]),i=Math.floor(this._bounds[1]),a=Math.ceil(this._bounds[2])-n,o=Math.ceil(this._bounds[3])-i,l=Math.min(Math.ceil(Math.abs(a*t[0]*1.1)),3e3),u=Math.min(Math.ceil(Math.abs(o*t[1]*1.1)),3e3),c=a/l,h=o/u,f={coords:this._coords,colors:this._colors,offsetX:-n,offsetY:-i,scaleX:1/c,scaleY:1/h},d=l+4,p=u+4,v=r.getCanvas("mesh",d,p,!1),y=v.context,m=y.createImageData(l,u);if(e)for(var g=m.data,b=0,_=g.length;b<_;b+=4)g[b]=e[0],g[b+1]=e[1],g[b+2]=e[2],g[b+3]=255;var w,A=s(this._figures);try{for(A.s();!(w=A.n()).done;)k(m,w.value,f)}catch(t){A.e(t)}finally{A.f()}return y.putImageData(m,2,2),{canvas:v.canvas,offsetX:n-2*c,offsetY:i-2*h,scaleX:c,scaleY:h}}},{key:"getPattern",value:function(t,e,r,a){var s;if(b(t,this._bbox),a===g.SHADING)s=n.Util.singularValueDecompose2dScale((0,i.getCurrentTransform)(t));else if(s=n.Util.singularValueDecompose2dScale(e.baseTransform),this.matrix){var l=n.Util.singularValueDecompose2dScale(this.matrix);s=[s[0]*l[0],s[1]*l[1]]}var u=this._createMeshCanvas(s,a===g.SHADING?null:this._background,e.cachedCanvases);return a!==g.SHADING&&(t.setTransform.apply(t,o(e.baseTransform)),this.matrix&&t.transform.apply(t,o(this.matrix))),t.translate(u.offsetX,u.offsetY),t.scale(u.scaleX,u.scaleY),t.createPattern(u.canvas,"no-repeat")}}]),r}(_),x=function(t){c(r,t);var e=f(r);function r(){return v(this,r),e.apply(this,arguments)}return m(r,[{key:"getPattern",value:function(){return"hotpink"}}]),r}(_),E=function(){function t(e,r,n,i,a){v(this,t),this.operatorList=e[2],this.matrix=e[3]||[1,0,0,1,0,0],this.bbox=e[4],this.xstep=e[5],this.ystep=e[6],this.paintType=e[7],this.tilingType=e[8],this.color=r,this.ctx=n,this.canvasGraphicsFactory=i,this.baseTransform=a}return m(t,[{key:"createPatternCanvas",value:function(t){var e=this.operatorList,r=this.bbox,a=this.xstep,o=this.ystep,s=this.paintType,l=this.tilingType,u=this.color,c=this.canvasGraphicsFactory;(0,n.info)("TilingType: "+l);var h=r[0],f=r[1],d=r[2],p=r[3],v=n.Util.singularValueDecompose2dScale(this.matrix),y=n.Util.singularValueDecompose2dScale(this.baseTransform),m=[v[0]*y[0],v[1]*y[1]],g=this.getSizeAndScale(a,this.ctx.canvas.width,m[0]),b=this.getSizeAndScale(o,this.ctx.canvas.height,m[1]),_=t.cachedCanvases.getCanvas("pattern",g.size,b.size,!0),w=_.context,A=c.createCanvasGraphics(w);A.groupLevel=t.groupLevel,this.setFillAndStrokeStyleToContext(A,s,u);var k=h,S=f,x=d,E=p;return h<0&&(k=0,x+=Math.abs(h)),f<0&&(S=0,E+=Math.abs(f)),w.translate(-g.scale*k,-b.scale*S),A.transform(g.scale,0,0,b.scale,0,0),w.save(),this.clipBbox(A,k,S,x,E),A.baseTransform=(0,i.getCurrentTransform)(A.ctx),A.executeOperatorList(e),A.endDrawing(),{canvas:_.canvas,scaleX:g.scale,scaleY:b.scale,offsetX:k,offsetY:S}}},{key:"getSizeAndScale",value:function(e,r,n){e=Math.abs(e);var i=Math.max(t.MAX_PATTERN_SIZE,r),a=Math.ceil(e*n);return a>=i?a=i:n=a/e,{scale:n,size:a}}},{key:"clipBbox",value:function(t,e,r,n,a){var o=n-e,s=a-r;t.ctx.rect(e,r,o,s),t.current.updateRectMinMax((0,i.getCurrentTransform)(t.ctx),[e,r,n,a]),t.clip(),t.endPath()}},{key:"setFillAndStrokeStyleToContext",value:function(t,e,r){var i=t.ctx,a=t.current;switch(e){case 1:var o=this.ctx;i.fillStyle=o.fillStyle,i.strokeStyle=o.strokeStyle,a.fillColor=o.fillStyle,a.strokeColor=o.strokeStyle;break;case 2:var s=n.Util.makeHexColor(r[0],r[1],r[2]);i.fillStyle=s,i.strokeStyle=s,a.fillColor=s,a.strokeColor=s;break;default:throw new n.FormatError("Unsupported paint type: ".concat(e))}}},{key:"getPattern",value:function(t,e,r,i){var a=r;i!==g.SHADING&&(a=n.Util.transform(a,e.baseTransform),this.matrix&&(a=n.Util.transform(a,this.matrix)));var o=this.createPatternCanvas(e),s=new DOMMatrix(a);s=(s=s.translate(o.offsetX,o.offsetY)).scale(1/o.scaleX,1/o.scaleY);var l=t.createPattern(o.canvas,"repeat");return l.setTransform(s),l}}],[{key:"MAX_PATTERN_SIZE",get:function(){return(0,n.shadow)(this,"MAX_PATTERN_SIZE",3e3)}}]),t}();e.TilingPattern=E},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.applyMaskImageData=function(t){var e,r=t.src,a=t.srcPos,o=void 0===a?0:a,s=t.dest,l=t.destPos,u=void 0===l?0:l,c=t.width,h=t.height,f=t.inverseDecode,d=void 0!==f&&f,p=n.FeatureTest.isLittleEndian?4278190080:255,v=function(t){if(Array.isArray(t))return t}(e=d?[0,p]:[p,0])||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{for(a=(r=r.call(t)).next;!(l=(n=a.call(r)).done)&&(s.push(n.value),2!==s.length);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(e)||function(t,e){if(t){if("string"==typeof t)return i(t,2);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,2):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),y=v[0],m=v[1],g=c>>3,b=7&c,_=r.length;s=new Uint32Array(s.buffer);for(var w=0;w<h;w++){for(var A=o+g;o<A;o++){var k=o<_?r[o]:255;s[u++]=128&k?m:y,s[u++]=64&k?m:y,s[u++]=32&k?m:y,s[u++]=16&k?m:y,s[u++]=8&k?m:y,s[u++]=4&k?m:y,s[u++]=2&k?m:y,s[u++]=1&k?m:y}if(0!==b)for(var S=o<_?r[o++]:255,x=0;x<b;x++)s[u++]=S&1<<7-x?m:y}return{srcPos:o,destPos:u}};var n=r(1);function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}},(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.GlobalWorkerOptions=void 0;var r=Object.create(null);e.GlobalWorkerOptions=r,r.workerPort=void 0===r.workerPort?null:r.workerPort,r.workerSrc=void 0===r.workerSrc?"":r.workerSrc},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MessageHandler=void 0;var n=r(1);function i(){i=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",l=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,o,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,o)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,l){var u=f(t[n],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==s(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,l)}),(function(t){i("throw",t,o,l)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return i("throw",t,o,l)}))}l(u.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,l,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,o,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function a(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function o(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==s(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===s(i)?i:String(i)),n)}var i}function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function l(t){switch(t instanceof Error||"object"===s(t)&&null!==t||(0,n.unreachable)('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),t.name){case"AbortException":return new n.AbortException(t.message);case"MissingPDFException":return new n.MissingPDFException(t.message);case"PasswordException":return new n.PasswordException(t.message,t.code);case"UnexpectedResponseException":return new n.UnexpectedResponseException(t.message,t.status);case"UnknownErrorException":return new n.UnknownErrorException(t.message,t.details);default:return new n.UnknownErrorException(t.message,t.toString())}}var u=function(){function t(e,r,n){var i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.sourceName=e,this.targetName=r,this.comObj=n,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=function(t){var e=t.data;if(e.targetName===i.sourceName)if(e.stream)i._processStreamMessage(e);else if(e.callback){var r=e.callbackId,a=i.callbackCapabilities[r];if(!a)throw new Error("Cannot resolve callback ".concat(r));if(delete i.callbackCapabilities[r],1===e.callback)a.resolve(e.data);else{if(2!==e.callback)throw new Error("Unexpected callback case");a.reject(l(e.reason))}}else{var o=i.actionHandler[e.action];if(!o)throw new Error("Unknown action from worker: ".concat(e.action));if(e.callbackId){var s=i.sourceName,u=e.sourceName;new Promise((function(t){t(o(e.data))})).then((function(t){n.postMessage({sourceName:s,targetName:u,callback:1,callbackId:e.callbackId,data:t})}),(function(t){n.postMessage({sourceName:s,targetName:u,callback:2,callbackId:e.callbackId,reason:l(t)})}))}else e.streamId?i._createStreamSink(e):o(e.data)}},n.addEventListener("message",this._onComObjOnMessage)}var e,r,s,u;return e=t,r=[{key:"on",value:function(t,e){var r=this.actionHandler;if(r[t])throw new Error('There is already an actionName called "'.concat(t,'"'));r[t]=e}},{key:"send",value:function(t,e,r){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,data:e},r)}},{key:"sendWithPromise",value:function(t,e,r){var i=this.callbackId++,a=(0,n.createPromiseCapability)();this.callbackCapabilities[i]=a;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,callbackId:i,data:e},r)}catch(t){a.reject(t)}return a.promise}},{key:"sendWithStream",value:function(t,e,r,i){var a=this,o=this.streamId++,s=this.sourceName,u=this.targetName,c=this.comObj;return new ReadableStream({start:function(r){var l=(0,n.createPromiseCapability)();return a.streamControllers[o]={controller:r,startCall:l,pullCall:null,cancelCall:null,isClosed:!1},c.postMessage({sourceName:s,targetName:u,action:t,streamId:o,data:e,desiredSize:r.desiredSize},i),l.promise},pull:function(t){var e=(0,n.createPromiseCapability)();return a.streamControllers[o].pullCall=e,c.postMessage({sourceName:s,targetName:u,stream:6,streamId:o,desiredSize:t.desiredSize}),e.promise},cancel:function(t){(0,n.assert)(t instanceof Error,"cancel must have a valid reason");var e=(0,n.createPromiseCapability)();return a.streamControllers[o].cancelCall=e,a.streamControllers[o].isClosed=!0,c.postMessage({sourceName:s,targetName:u,stream:1,streamId:o,reason:l(t)}),e.promise}},r)}},{key:"_createStreamSink",value:function(t){var e=t.streamId,r=this.sourceName,i=t.sourceName,a=this.comObj,o=this,s=this.actionHandler[t.action],u={enqueue:function(t){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,s=arguments.length>2?arguments[2]:void 0;if(!this.isCancelled){var l=this.desiredSize;this.desiredSize-=o,l>0&&this.desiredSize<=0&&(this.sinkCapability=(0,n.createPromiseCapability)(),this.ready=this.sinkCapability.promise),a.postMessage({sourceName:r,targetName:i,stream:4,streamId:e,chunk:t},s)}},close:function(){this.isCancelled||(this.isCancelled=!0,a.postMessage({sourceName:r,targetName:i,stream:3,streamId:e}),delete o.streamSinks[e])},error:function(t){(0,n.assert)(t instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,a.postMessage({sourceName:r,targetName:i,stream:5,streamId:e,reason:l(t)}))},sinkCapability:(0,n.createPromiseCapability)(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:t.desiredSize,ready:null};u.sinkCapability.resolve(),u.ready=u.sinkCapability.promise,this.streamSinks[e]=u,new Promise((function(e){e(s(t.data,u))})).then((function(){a.postMessage({sourceName:r,targetName:i,stream:8,streamId:e,success:!0})}),(function(t){a.postMessage({sourceName:r,targetName:i,stream:8,streamId:e,reason:l(t)})}))}},{key:"_processStreamMessage",value:function(t){var e=t.streamId,r=this.sourceName,i=t.sourceName,a=this.comObj,o=this.streamControllers[e],s=this.streamSinks[e];switch(t.stream){case 8:t.success?o.startCall.resolve():o.startCall.reject(l(t.reason));break;case 7:t.success?o.pullCall.resolve():o.pullCall.reject(l(t.reason));break;case 6:if(!s){a.postMessage({sourceName:r,targetName:i,stream:7,streamId:e,success:!0});break}s.desiredSize<=0&&t.desiredSize>0&&s.sinkCapability.resolve(),s.desiredSize=t.desiredSize,new Promise((function(t){t(s.onPull&&s.onPull())})).then((function(){a.postMessage({sourceName:r,targetName:i,stream:7,streamId:e,success:!0})}),(function(t){a.postMessage({sourceName:r,targetName:i,stream:7,streamId:e,reason:l(t)})}));break;case 4:if((0,n.assert)(o,"enqueue should have stream controller"),o.isClosed)break;o.controller.enqueue(t.chunk);break;case 3:if((0,n.assert)(o,"close should have stream controller"),o.isClosed)break;o.isClosed=!0,o.controller.close(),this._deleteStreamController(o,e);break;case 5:(0,n.assert)(o,"error should have stream controller"),o.controller.error(l(t.reason)),this._deleteStreamController(o,e);break;case 2:t.success?o.cancelCall.resolve():o.cancelCall.reject(l(t.reason)),this._deleteStreamController(o,e);break;case 1:if(!s)break;new Promise((function(e){e(s.onCancel&&s.onCancel(l(t.reason)))})).then((function(){a.postMessage({sourceName:r,targetName:i,stream:2,streamId:e,success:!0})}),(function(t){a.postMessage({sourceName:r,targetName:i,stream:2,streamId:e,reason:l(t)})})),s.sinkCapability.reject(l(t.reason)),s.isCancelled=!0,delete this.streamSinks[e];break;default:throw new Error("Unexpected stream case")}}},{key:"_deleteStreamController",value:(s=i().mark((function t(e,r){return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.allSettled([e.startCall&&e.startCall.promise,e.pullCall&&e.pullCall.promise,e.cancelCall&&e.cancelCall.promise]);case 2:delete this.streamControllers[r];case 3:case"end":return t.stop()}}),t,this)})),u=function(){var t=this,e=arguments;return new Promise((function(r,n){var i=s.apply(t,e);function o(t){a(i,r,n,o,l,"next",t)}function l(t){a(i,r,n,o,l,"throw",t)}o(void 0)}))},function(t,e){return u.apply(this,arguments)})},{key:"destroy",value:function(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}],r&&o(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.MessageHandler=u},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.Metadata=void 0;var i=r(1);function a(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function o(t,e,r){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.set(t,r)}function s(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,u(t,e,"get"))}function l(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,u(t,e,"set"),r),r}function u(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var c=new WeakMap,h=new WeakMap,f=function(){function t(e){var r=e.parsedData,n=e.rawData;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o(this,c,{writable:!0,value:void 0}),o(this,h,{writable:!0,value:void 0}),l(this,c,r),l(this,h,n)}var e,r;return e=t,(r=[{key:"getRaw",value:function(){return s(this,h)}},{key:"get",value:function(t){var e;return null!==(e=s(this,c).get(t))&&void 0!==e?e:null}},{key:"getAll",value:function(){return(0,i.objectFromMap)(s(this,c))}},{key:"has",value:function(t){return s(this,c).has(t)}}])&&a(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.Metadata=f},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.OptionalContentConfig=void 0;var i=r(1),a=r(139);function o(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=s(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){l=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(l)throw a}}}}function s(t,e){if(t){if("string"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(t,e):void 0}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function u(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function f(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function d(t,e,r){p(t,e),e.set(t,r)}function p(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function v(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,m(t,e,"set"),r),r}function y(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,m(t,e,"get"))}function m(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var g=Symbol("INTERNAL"),b=new WeakMap,_=function(){function t(e,r){c(this,t),d(this,b,{writable:!0,value:!0}),this.name=e,this.intent=r}return f(t,[{key:"visible",get:function(){return y(this,b)}},{key:"_setVisible",value:function(t,e){t!==g&&(0,i.unreachable)("Internal method `_setVisible` called."),v(this,b,e)}}]),t}(),w=new WeakMap,A=new WeakMap,k=new WeakMap,S=new WeakMap,x=new WeakSet,E=function(){function t(e){var r;if(c(this,t),p(this,r=x),r.add(this),d(this,w,{writable:!0,value:null}),d(this,A,{writable:!0,value:new Map}),d(this,k,{writable:!0,value:null}),d(this,S,{writable:!0,value:null}),this.name=null,this.creator=null,null!==e){this.name=e.name,this.creator=e.creator,v(this,S,e.order);var n,i=o(e.groups);try{for(i.s();!(n=i.n()).done;){var a=n.value;y(this,A).set(a.id,new _(a.name,a.intent))}}catch(t){i.e(t)}finally{i.f()}if("OFF"===e.baseState){var s,l=o(y(this,A).values());try{for(l.s();!(s=l.n()).done;)s.value._setVisible(g,!1)}catch(t){l.e(t)}finally{l.f()}}var u,h=o(e.on);try{for(h.s();!(u=h.n()).done;){var f=u.value;y(this,A).get(f)._setVisible(g,!0)}}catch(t){h.e(t)}finally{h.f()}var m,b=o(e.off);try{for(b.s();!(m=b.n()).done;){var E=m.value;y(this,A).get(E)._setVisible(g,!1)}}catch(t){b.e(t)}finally{b.f()}v(this,k,this.getHash())}}return f(t,[{key:"isVisible",value:function(t){if(0===y(this,A).size)return!0;if(!t)return(0,i.warn)("Optional content group not defined."),!0;if("OCG"===t.type)return y(this,A).has(t.id)?y(this,A).get(t.id).visible:((0,i.warn)("Optional content group not found: ".concat(t.id)),!0);if("OCMD"===t.type){if(t.expression)return u(this,x,P).call(this,t.expression);if(!t.policy||"AnyOn"===t.policy){var e,r=o(t.ids);try{for(r.s();!(e=r.n()).done;){var n=e.value;if(!y(this,A).has(n))return(0,i.warn)("Optional content group not found: ".concat(n)),!0;if(y(this,A).get(n).visible)return!0}}catch(t){r.e(t)}finally{r.f()}return!1}if("AllOn"===t.policy){var a,s=o(t.ids);try{for(s.s();!(a=s.n()).done;){var l=a.value;if(!y(this,A).has(l))return(0,i.warn)("Optional content group not found: ".concat(l)),!0;if(!y(this,A).get(l).visible)return!1}}catch(t){s.e(t)}finally{s.f()}return!0}if("AnyOff"===t.policy){var c,h=o(t.ids);try{for(h.s();!(c=h.n()).done;){var f=c.value;if(!y(this,A).has(f))return(0,i.warn)("Optional content group not found: ".concat(f)),!0;if(!y(this,A).get(f).visible)return!0}}catch(t){h.e(t)}finally{h.f()}return!1}if("AllOff"===t.policy){var d,p=o(t.ids);try{for(p.s();!(d=p.n()).done;){var v=d.value;if(!y(this,A).has(v))return(0,i.warn)("Optional content group not found: ".concat(v)),!0;if(y(this,A).get(v).visible)return!1}}catch(t){p.e(t)}finally{p.f()}return!0}return(0,i.warn)("Unknown optional content policy ".concat(t.policy,".")),!0}return(0,i.warn)("Unknown group type ".concat(t.type,".")),!0}},{key:"setVisibility",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];y(this,A).has(t)?(y(this,A).get(t)._setVisible(g,!!e),v(this,w,null)):(0,i.warn)("Optional content group not found: ".concat(t))}},{key:"hasInitialVisibility",get:function(){return this.getHash()===y(this,k)}},{key:"getOrder",value:function(){return y(this,A).size?y(this,S)?y(this,S).slice():function(t){if(Array.isArray(t))return l(t)}(t=y(this,A).keys())||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||s(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}():null;var t}},{key:"getGroups",value:function(){return y(this,A).size>0?(0,i.objectFromMap)(y(this,A)):null}},{key:"getGroup",value:function(t){return y(this,A).get(t)||null}},{key:"getHash",value:function(){if(null!==y(this,w))return y(this,w);var t,e,r,n=new a.MurmurHash3_64,i=o(y(this,A));try{for(i.s();!(t=i.n()).done;){var l=(e=t.value,r=2,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(e,r)||s(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=l[0],c=l[1];n.update("".concat(u,":").concat(c.visible))}}catch(t){i.e(t)}finally{i.f()}return v(this,w,n.hexdigest())}}]),t}();function P(t){var e=t.length;if(e<2)return!0;for(var r=t[0],n=1;n<e;n++){var a=t[n],o=void 0;if(Array.isArray(a))o=u(this,x,P).call(this,a);else{if(!y(this,A).has(a))return(0,i.warn)("Optional content group not found: ".concat(a)),!0;o=y(this,A).get(a).visible}switch(r){case"And":if(!o)return!1;break;case"Or":if(o)return!0;break;case"Not":return!o;default:return!0}}return"And"===r}e.OptionalContentConfig=E},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PDFDataTransportStream=void 0;var n=r(1),i=r(137);function a(){a=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,o,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,o)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,s){var u=f(t[n],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==l(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return i("throw",t,o,s)}))}s(u.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,s,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,o,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function o(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function s(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function s(t){o(a,n,i,s,l,"next",t)}function l(t){o(a,n,i,s,l,"throw",t)}s(void 0)}))}}function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function u(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function f(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==l(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===l(i)?i:String(i)),n)}var i}function d(t,e,r){return e&&f(t.prototype,e),r&&f(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var p=function(){function t(e,r){var i=this;h(this,t),(0,n.assert)(r,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.'),this._queuedChunks=[],this._progressiveDone=e.progressiveDone||!1,this._contentDispositionFilename=e.contentDispositionFilename||null;var a=e.initialData;if((null==a?void 0:a.length)>0){var o=new Uint8Array(a).buffer;this._queuedChunks.push(o)}this._pdfDataRangeTransport=r,this._isStreamingSupported=!e.disableStream,this._isRangeSupported=!e.disableRange,this._contentLength=e.length,this._fullRequestReader=null,this._rangeReaders=[],this._pdfDataRangeTransport.addRangeListener((function(t,e){i._onReceiveData({begin:t,chunk:e})})),this._pdfDataRangeTransport.addProgressListener((function(t,e){i._onProgress({loaded:t,total:e})})),this._pdfDataRangeTransport.addProgressiveReadListener((function(t){i._onReceiveData({chunk:t})})),this._pdfDataRangeTransport.addProgressiveDoneListener((function(){i._onProgressiveDone()})),this._pdfDataRangeTransport.transportReady()}return d(t,[{key:"_onReceiveData",value:function(t){var e=new Uint8Array(t.chunk).buffer;if(void 0===t.begin)this._fullRequestReader?this._fullRequestReader._enqueue(e):this._queuedChunks.push(e);else{var r=this._rangeReaders.some((function(r){return r._begin===t.begin&&(r._enqueue(e),!0)}));(0,n.assert)(r,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}},{key:"_progressiveDataLength",get:function(){var t,e;return null!==(t=null===(e=this._fullRequestReader)||void 0===e?void 0:e._loaded)&&void 0!==t?t:0}},{key:"_onProgress",value:function(t){var e,r,n,i;void 0===t.total?null===(e=this._rangeReaders[0])||void 0===e||null===(r=e.onProgress)||void 0===r||r.call(e,{loaded:t.loaded}):null===(n=this._fullRequestReader)||void 0===n||null===(i=n.onProgress)||void 0===i||i.call(n,{loaded:t.loaded,total:t.total})}},{key:"_onProgressiveDone",value:function(){var t;null===(t=this._fullRequestReader)||void 0===t||t.progressiveDone(),this._progressiveDone=!0}},{key:"_removeRangeReader",value:function(t){var e=this._rangeReaders.indexOf(t);e>=0&&this._rangeReaders.splice(e,1)}},{key:"getFullReader",value:function(){(0,n.assert)(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");var t=this._queuedChunks;return this._queuedChunks=null,new v(this,t,this._progressiveDone,this._contentDispositionFilename)}},{key:"getRangeReader",value:function(t,e){if(e<=this._progressiveDataLength)return null;var r=new y(this,t,e);return this._pdfDataRangeTransport.requestDataRange(t,e),this._rangeReaders.push(r),r}},{key:"cancelAllRequests",value:function(t){var e;null===(e=this._fullRequestReader)||void 0===e||e.cancel(t);var r,n=u(this._rangeReaders.slice(0));try{for(n.s();!(r=n.n()).done;)r.value.cancel(t)}catch(t){n.e(t)}finally{n.f()}this._pdfDataRangeTransport.abort()}}]),t}();e.PDFDataTransportStream=p;var v=function(){function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;h(this,t),this._stream=e,this._done=n||!1,this._filename=(0,i.isPdfFile)(a)?a:null,this._queuedChunks=r||[],this._loaded=0;var o,s=u(this._queuedChunks);try{for(s.s();!(o=s.n()).done;){var l=o.value;this._loaded+=l.byteLength}}catch(t){s.e(t)}finally{s.f()}this._requests=[],this._headersReady=Promise.resolve(),e._fullRequestReader=this,this.onProgress=null}var e;return d(t,[{key:"_enqueue",value:function(t){this._done||(this._requests.length>0?this._requests.shift().resolve({value:t,done:!1}):this._queuedChunks.push(t),this._loaded+=t.byteLength)}},{key:"headersReady",get:function(){return this._headersReady}},{key:"filename",get:function(){return this._filename}},{key:"isRangeSupported",get:function(){return this._stream._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._stream._isStreamingSupported}},{key:"contentLength",get:function(){return this._stream._contentLength}},{key:"read",value:(e=s(a().mark((function t(){var e,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(this._queuedChunks.length>0)){t.next=3;break}return e=this._queuedChunks.shift(),t.abrupt("return",{value:e,done:!1});case 3:if(!this._done){t.next=5;break}return t.abrupt("return",{value:void 0,done:!0});case 5:return r=(0,n.createPromiseCapability)(),this._requests.push(r),t.abrupt("return",r.promise);case 8:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._done=!0;var e,r=u(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0}},{key:"progressiveDone",value:function(){this._done||(this._done=!0)}}]),t}(),y=function(){function t(e,r,n){h(this,t),this._stream=e,this._begin=r,this._end=n,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}var e;return d(t,[{key:"_enqueue",value:function(t){if(!this._done){if(0===this._requests.length)this._queuedChunk=t;else{this._requests.shift().resolve({value:t,done:!1});var e,r=u(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}},{key:"isStreamingSupported",get:function(){return!1}},{key:"read",value:(e=s(a().mark((function t(){var e,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this._queuedChunk){t.next=4;break}return e=this._queuedChunk,this._queuedChunk=null,t.abrupt("return",{value:e,done:!1});case 4:if(!this._done){t.next=6;break}return t.abrupt("return",{value:void 0,done:!0});case 6:return r=(0,n.createPromiseCapability)(),this._requests.push(r),t.abrupt("return",r.promise);case 9:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._done=!0;var e,r=u(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0,this._stream._removeRangeReader(this)}}]),t}()},(t,e)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,"string");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===r(a)?a:String(a)),i)}var a}Object.defineProperty(e,"__esModule",{value:!0}),e.XfaText=void 0;var a=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,r=[{key:"textContent",value:function(e){var r=[],i={items:r,styles:Object.create(null)};return function e(i){var a;if(i){var o=null,s=i.name;if("#text"===s)o=i.value;else{if(!t.shouldBuildText(s))return;null!=i&&null!==(a=i.attributes)&&void 0!==a&&a.textContent?o=i.attributes.textContent:i.value&&(o=i.value)}if(null!==o&&r.push({str:o}),i.children){var l,u=function(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var i=0,a=function(){};return{s:a,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return s=t.done,t},e:function(t){l=!0,o=t},f:function(){try{s||null==r.return||r.return()}finally{if(l)throw o}}}}(i.children);try{for(u.s();!(l=u.n()).done;)e(l.value)}catch(t){u.e(t)}finally{u.f()}}}}(e),i}},{key:"shouldBuildText",value:function(t){return!("textarea"===t||"input"===t||"option"===t||"select"===t)}}],null&&i(e.prototype,null),r&&i(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.XfaText=a},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.NodeStandardFontDataFactory=e.NodeCanvasFactory=e.NodeCMapReaderFactory=void 0;var i=r(138);function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function s(t,e,r){return e&&o(t.prototype,e),r&&o(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function l(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&u(t,e)}function u(t,e){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},u(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,i=h(t);if(e){var a=h(this).constructor;r=Reflect.construct(i,arguments,a)}else r=i.apply(this,arguments);return function(t,e){if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,r)}}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}var f=function(t){return new Promise((function(e,r){require("fs").readFile(t,(function(t,n){!t&&n?e(new Uint8Array(n)):r(new Error(t))}))}))},d=function(t){l(r,t);var e=c(r);function r(){return a(this,r),e.apply(this,arguments)}return s(r,[{key:"_createCanvas",value:function(t,e){return require("canvas").createCanvas(t,e)}}]),r}(i.BaseCanvasFactory);e.NodeCanvasFactory=d;var p=function(t){l(r,t);var e=c(r);function r(){return a(this,r),e.apply(this,arguments)}return s(r,[{key:"_fetchData",value:function(t,e){return f(t).then((function(t){return{cMapData:t,compressionType:e}}))}}]),r}(i.BaseCMapReaderFactory);e.NodeCMapReaderFactory=p;var v=function(t){l(r,t);var e=c(r);function r(){return a(this,r),e.apply(this,arguments)}return s(r,[{key:"_fetchData",value:function(t){return f(t)}}]),r}(i.BaseStandardFontDataFactory);e.NodeStandardFontDataFactory=v},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.TextLayerRenderTask=void 0,e.renderTextLayer=function(t){t.textContentSource||!t.textContent&&!t.textContentStream||((0,a.deprecated)("The TextLayerRender `textContent`/`textContentStream` parameters will be removed in the future, please use `textContentSource` instead."),t.textContentSource=t.textContent||t.textContentStream);var e=new p(t);return e._render(),e},e.updateTextLayer=function(t){var e=t.container,r=t.viewport,n=t.textDivs,i=t.textDivProperties,o=t.isOffscreenCanvasSupported,l=t.mustRotate,u=void 0===l||l,c=t.mustRescale,f=void 0===c||c;if(u&&(0,a.setLayerDimensions)(e,{rotation:r.rotation}),f){var p,v=h(0,o),y={prevFontSize:null,prevFontFamily:null,div:null,scale:r.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:v},m=s(n);try{for(m.s();!(p=m.n()).done;){var g=p.value;y.properties=i.get(g),y.div=g,d(y)}}catch(t){m.e(t)}finally{m.f()}}};var i=r(1),a=r(137);function o(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function s(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var u=30,c=new Map;function h(t,e){var r;if(e&&i.FeatureTest.isOffscreenCanvasSupported)r=new OffscreenCanvas(t,t).getContext("2d",{alpha:!1});else{var n=document.createElement("canvas");n.width=n.height=t,r=n.getContext("2d",{alpha:!1})}return r}function f(t,e,r){var n=document.createElement("span"),a={angle:0,canvasWidth:0,hasText:""!==e.str,hasEOL:e.hasEOL,fontSize:0};t._textDivs.push(n);var o=i.Util.transform(t._transform,e.transform),s=Math.atan2(o[1],o[0]),l=r[e.fontName];l.vertical&&(s+=Math.PI/2);var f,d,p=Math.hypot(o[2],o[3]),v=p*function(t,e){var r=c.get(t);if(r)return r;var n=h(u,e);n.font="".concat(u,"px ").concat(t);var i=n.measureText(""),a=i.fontBoundingBoxAscent,o=Math.abs(i.fontBoundingBoxDescent);if(a){var s=a/(a+o);return c.set(t,s),n.canvas.width=n.canvas.height=0,s}n.strokeStyle="red",n.clearRect(0,0,u,u),n.strokeText("g",0,0);var l=n.getImageData(0,0,u,u).data;o=0;for(var f=l.length-1-3;f>=0;f-=4)if(l[f]>0){o=Math.ceil(f/4/u);break}n.clearRect(0,0,u,u),n.strokeText("A",0,u),a=0;for(var d=0,p=(l=n.getImageData(0,0,u,u).data).length;d<p;d+=4)if(l[d]>0){a=u-Math.floor(d/4/u);break}if(n.canvas.width=n.canvas.height=0,a){var v=a/(a+o);return c.set(t,v),v}return c.set(t,.8),.8}(l.fontFamily,t._isOffscreenCanvasSupported);0===s?(f=o[4],d=o[5]-v):(f=o[4]+v*Math.sin(s),d=o[5]-v*Math.cos(s));var y="calc(var(--scale-factor)*",m=n.style;t._container===t._rootContainer?(m.left="".concat((100*f/t._pageWidth).toFixed(2),"%"),m.top="".concat((100*d/t._pageHeight).toFixed(2),"%")):(m.left="".concat(y).concat(f.toFixed(2),"px)"),m.top="".concat(y).concat(d.toFixed(2),"px)")),m.fontSize="".concat(y).concat(p.toFixed(2),"px)"),m.fontFamily=l.fontFamily,a.fontSize=p,n.setAttribute("role","presentation"),n.textContent=e.str,n.dir=e.dir,t._fontInspectorEnabled&&(n.dataset.fontName=e.fontName),0!==s&&(a.angle=s*(180/Math.PI));var g=!1;if(e.str.length>1)g=!0;else if(" "!==e.str&&e.transform[0]!==e.transform[3]){var b=Math.abs(e.transform[0]),_=Math.abs(e.transform[3]);b!==_&&Math.max(b,_)/Math.min(b,_)>1.5&&(g=!0)}g&&(a.canvasWidth=l.vertical?e.height:e.width),t._textDivProperties.set(n,a),t._isReadableStream&&t._layoutText(n)}function d(t){var e=t.div,r=t.scale,n=t.properties,i=t.ctx,a=t.prevFontSize,o=t.prevFontFamily,s=e.style,l="";if(0!==n.canvasWidth&&n.hasText){var u=s.fontFamily,c=n.canvasWidth,h=n.fontSize;a===h&&o===u||(i.font="".concat(h*r,"px ").concat(u),t.prevFontSize=h,t.prevFontFamily=u);var f=i.measureText(e.textContent).width;f>0&&(l="scaleX(".concat(c*r/f,")"))}0!==n.angle&&(l="rotate(".concat(n.angle,"deg) ").concat(l)),l.length>0&&(s.transform=l)}var p=function(){function t(e){var r,n=this,o=e.textContentSource,s=e.container,l=e.viewport,u=e.textDivs,c=e.textDivProperties,f=e.textContentItemsStr,d=e.isOffscreenCanvasSupported;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._textContentSource=o,this._isReadableStream=o instanceof ReadableStream,this._container=this._rootContainer=s,this._textDivs=u||[],this._textContentItemsStr=f||[],this._fontInspectorEnabled=!(null===(r=globalThis.FontInspector)||void 0===r||!r.enabled),this._reader=null,this._textDivProperties=c||new WeakMap,this._canceled=!1,this._capability=(0,i.createPromiseCapability)(),this._layoutTextParams={prevFontSize:null,prevFontFamily:null,div:null,scale:l.scale*(globalThis.devicePixelRatio||1),properties:null,ctx:h(0,d)};var p=l.rawDims,v=p.pageWidth,y=p.pageHeight,m=p.pageX,g=p.pageY;this._transform=[1,0,0,-1,-m,g+y],this._pageWidth=v,this._pageHeight=y,(0,a.setLayerDimensions)(s,l),this._capability.promise.finally((function(){n._layoutTextParams=null})).catch((function(){}))}var e,r;return e=t,(r=[{key:"promise",get:function(){return this._capability.promise}},{key:"cancel",value:function(){this._canceled=!0,this._reader&&(this._reader.cancel(new i.AbortException("TextLayer task cancelled.")).catch((function(){})),this._reader=null),this._capability.reject(new i.AbortException("TextLayer task cancelled."))}},{key:"_processItems",value:function(t,e){var r,n=s(t);try{for(n.s();!(r=n.n()).done;){var i=r.value;if(void 0!==i.str)this._textContentItemsStr.push(i.str),f(this,i,e);else if("beginMarkedContentProps"===i.type||"beginMarkedContent"===i.type){var a=this._container;this._container=document.createElement("span"),this._container.classList.add("markedContent"),null!==i.id&&this._container.setAttribute("id","".concat(i.id)),a.append(this._container)}else"endMarkedContent"===i.type&&(this._container=this._container.parentNode)}}catch(t){n.e(t)}finally{n.f()}}},{key:"_layoutText",value:function(t){var e=this._layoutTextParams.properties=this._textDivProperties.get(t);if(this._layoutTextParams.div=t,d(this._layoutTextParams),e.hasText&&this._container.append(t),e.hasEOL){var r=document.createElement("br");r.setAttribute("role","presentation"),this._container.append(r)}}},{key:"_render",value:function(){var t=this,e=(0,i.createPromiseCapability)(),r=Object.create(null);if(this._isReadableStream)this._reader=this._textContentSource.getReader(),function n(){t._reader.read().then((function(i){var a=i.value;i.done?e.resolve():(Object.assign(r,a.styles),t._processItems(a.items,r),n())}),e.reject)}();else{if(!this._textContentSource)throw new Error('No "textContentSource" parameter specified.');var n=this._textContentSource,a=n.items,o=n.styles;this._processItems(a,o),e.resolve()}e.promise.then((function(){r=null,function(t){if(!t._canceled){var e=t._textDivs,r=t._capability;if(e.length>1e5)r.resolve();else{if(!t._isReadableStream){var n,i=s(e);try{for(i.s();!(n=i.n()).done;){var a=n.value;t._layoutText(a)}}catch(t){i.e(t)}finally{i.f()}}r.resolve()}}}(t)}),this._capability.reject)}}])&&o(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.TextLayerRenderTask=p},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.AnnotationEditorLayer=void 0;var i=r(1),a=r(136),o=r(153),s=r(154),l=r(137);function u(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,d(n.key),n)}}function f(t,e){v(t,e),e.add(t)}function d(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}function p(t,e,r){v(t,e),e.set(t,r)}function v(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function y(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function m(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,b(t,e,"get"))}function g(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,b(t,e,"set"),r),r}function b(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var _,w,A=new WeakMap,k=new WeakMap,S=new WeakMap,x=new WeakMap,E=new WeakMap,P=new WeakMap,T=new WeakMap,C=new WeakMap,O=new WeakSet,F=new WeakSet,M=new WeakSet,R=new WeakSet,I=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),f(this,R),f(this,M),f(this,F),f(this,O),p(this,A,{writable:!0,value:void 0}),p(this,k,{writable:!0,value:!1}),p(this,S,{writable:!0,value:this.pointerup.bind(this)}),p(this,x,{writable:!0,value:this.pointerdown.bind(this)}),p(this,E,{writable:!0,value:new Map}),p(this,P,{writable:!0,value:!1}),p(this,T,{writable:!0,value:!1}),p(this,C,{writable:!0,value:void 0}),t._initialized||(t._initialized=!0,o.FreeTextEditor.initialize(e.l10n),s.InkEditor.initialize(e.l10n)),e.uiManager.registerEditorTypes([o.FreeTextEditor,s.InkEditor]),g(this,C,e.uiManager),this.pageIndex=e.pageIndex,this.div=e.div,g(this,A,e.accessibilityManager),m(this,C).addLayer(this)}var e,r;return e=t,r=[{key:"updateToolbar",value:function(t){m(this,C).updateToolbar(t)}},{key:"updateMode",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m(this,C).getMode();y(this,R,N).call(this),t===i.AnnotationEditorType.INK?(this.addInkEditorIfNeeded(!1),this.disableClick()):this.enableClick(),m(this,C).unselectAll(),this.div.classList.toggle("freeTextEditing",t===i.AnnotationEditorType.FREETEXT),this.div.classList.toggle("inkEditing",t===i.AnnotationEditorType.INK)}},{key:"addInkEditorIfNeeded",value:function(t){if(t||m(this,C).getMode()===i.AnnotationEditorType.INK){if(!t){var e,r=u(m(this,E).values());try{for(r.s();!(e=r.n()).done;){var n=e.value;if(n.isEmpty())return void n.setInBackground()}}catch(t){r.e(t)}finally{r.f()}}y(this,M,D).call(this,{offsetX:0,offsetY:0}).setInBackground()}}},{key:"setEditingState",value:function(t){m(this,C).setEditingState(t)}},{key:"addCommands",value:function(t){m(this,C).addCommands(t)}},{key:"enable",value:function(){this.div.style.pointerEvents="auto";var t,e=u(m(this,E).values());try{for(e.s();!(t=e.n()).done;)t.value.enableEditing()}catch(t){e.e(t)}finally{e.f()}}},{key:"disable",value:function(){this.div.style.pointerEvents="none";var t,e=u(m(this,E).values());try{for(e.s();!(t=e.n()).done;)t.value.disableEditing()}catch(t){e.e(t)}finally{e.f()}}},{key:"setActiveEditor",value:function(t){m(this,C).getActive()!==t&&m(this,C).setActiveEditor(t)}},{key:"enableClick",value:function(){this.div.addEventListener("pointerdown",m(this,x)),this.div.addEventListener("pointerup",m(this,S))}},{key:"disableClick",value:function(){this.div.removeEventListener("pointerdown",m(this,x)),this.div.removeEventListener("pointerup",m(this,S))}},{key:"attach",value:function(t){m(this,E).set(t.id,t)}},{key:"detach",value:function(t){var e;m(this,E).delete(t.id),null===(e=m(this,A))||void 0===e||e.removePointerInTextLayer(t.contentDiv)}},{key:"remove",value:function(t){var e=this;m(this,C).removeEditor(t),this.detach(t),t.div.style.display="none",setTimeout((function(){t.div.style.display="",t.div.remove(),t.isAttachedToDOM=!1,document.activeElement===document.body&&m(e,C).focusMainContainer()}),0),m(this,T)||this.addInkEditorIfNeeded(!1)}},{key:"add",value:function(t){if(y(this,O,j).call(this,t),m(this,C).addEditor(t),this.attach(t),!t.isAttachedToDOM){var e=t.render();this.div.append(e),t.isAttachedToDOM=!0}this.moveEditorInDOM(t),t.onceAdded(),m(this,C).addToAnnotationStorage(t)}},{key:"moveEditorInDOM",value:function(t){var e;null===(e=m(this,A))||void 0===e||e.moveElementInDOM(this.div,t.div,t.contentDiv,!0)}},{key:"addOrRebuild",value:function(t){t.needsToBeRebuilt()?t.rebuild():this.add(t)}},{key:"addANewEditor",value:function(t){var e=this;this.addCommands({cmd:function(){e.addOrRebuild(t)},undo:function(){t.remove()},mustExec:!0})}},{key:"addUndoableEditor",value:function(t){var e=this;this.addCommands({cmd:function(){e.addOrRebuild(t)},undo:function(){t.remove()},mustExec:!1})}},{key:"getNextId",value:function(){return m(this,C).getId()}},{key:"deserialize",value:function(t){switch(t.annotationType){case i.AnnotationEditorType.FREETEXT:return o.FreeTextEditor.deserialize(t,this,m(this,C));case i.AnnotationEditorType.INK:return s.InkEditor.deserialize(t,this,m(this,C))}return null}},{key:"setSelected",value:function(t){m(this,C).setSelected(t)}},{key:"toggleSelected",value:function(t){m(this,C).toggleSelected(t)}},{key:"isSelected",value:function(t){return m(this,C).isSelected(t)}},{key:"unselect",value:function(t){m(this,C).unselect(t)}},{key:"pointerup",value:function(t){var e=i.FeatureTest.platform.isMac;0!==t.button||t.ctrlKey&&e||t.target===this.div&&m(this,P)&&(g(this,P,!1),m(this,k)?y(this,M,D).call(this,t):g(this,k,!0))}},{key:"pointerdown",value:function(t){var e=i.FeatureTest.platform.isMac;if(!(0!==t.button||t.ctrlKey&&e)&&t.target===this.div){g(this,P,!0);var r=m(this,C).getActive();g(this,k,!r||r.isEmpty())}}},{key:"drop",value:function(t){var e=t.dataTransfer.getData("text/plain"),r=m(this,C).getEditor(e);if(r){t.preventDefault(),t.dataTransfer.dropEffect="move",y(this,O,j).call(this,r);var n=this.div.getBoundingClientRect(),i=t.clientX-n.x,a=t.clientY-n.y;r.translate(i-r.startX,a-r.startY),this.moveEditorInDOM(r),r.div.focus()}}},{key:"dragover",value:function(t){t.preventDefault()}},{key:"destroy",value:function(){var t;(null===(t=m(this,C).getActive())||void 0===t?void 0:t.parent)===this&&m(this,C).setActiveEditor(null);var e,r=u(m(this,E).values());try{for(r.s();!(e=r.n()).done;){var n,i=e.value;null===(n=m(this,A))||void 0===n||n.removePointerInTextLayer(i.contentDiv),i.setParent(null),i.isAttachedToDOM=!1,i.div.remove()}}catch(t){r.e(t)}finally{r.f()}this.div=null,m(this,E).clear(),m(this,C).removeLayer(this)}},{key:"render",value:function(t){var e=t.viewport;this.viewport=e,(0,l.setLayerDimensions)(this.div,e),(0,a.bindEvents)(this,this.div,["dragover","drop"]);var r,n=u(m(this,C).getEditors(this.pageIndex));try{for(n.s();!(r=n.n()).done;){var i=r.value;this.add(i)}}catch(t){n.e(t)}finally{n.f()}this.updateMode()}},{key:"update",value:function(t){var e=t.viewport;m(this,C).commitOrRemove(),this.viewport=e,(0,l.setLayerDimensions)(this.div,{rotation:e.rotation}),this.updateMode()}},{key:"pageDimensions",get:function(){var t=this.viewport.rawDims;return[t.pageWidth,t.pageHeight]}}],r&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){var e;t.parent!==this&&(this.attach(t),null===(e=t.parent)||void 0===e||e.detach(t),t.setParent(this),t.div&&t.isAttachedToDOM&&(t.div.remove(),this.div.append(t.div)))}function L(t){switch(m(this,C).getMode()){case i.AnnotationEditorType.FREETEXT:return new o.FreeTextEditor(t);case i.AnnotationEditorType.INK:return new s.InkEditor(t)}return null}function D(t){var e=this.getNextId(),r=y(this,F,L).call(this,{parent:this,id:e,x:t.offsetX,y:t.offsetY,uiManager:m(this,C)});return r&&this.add(r),r}function N(){g(this,T,!0);var t,e=u(m(this,E).values());try{for(e.s();!(t=e.n()).done;){var r=t.value;r.isEmpty()&&r.remove()}}catch(t){e.e(t)}finally{e.f()}g(this,T,!1)}e.AnnotationEditorLayer=I,_=I,(w=d(w="_initialized"))in _?Object.defineProperty(_,w,{value:false,enumerable:!0,configurable:!0,writable:!0}):_[w]=false},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.FreeTextEditor=void 0;var i=r(1),a=r(136),o=r(135);function s(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=u(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function l(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||u(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){if(t){if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(t,e):void 0}}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function h(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function f(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?h(Object(r),!0).forEach((function(e){b(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):h(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function d(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_(n.key),n)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=m(t)););return t}(t,e);if(n){var i=Object.getOwnPropertyDescriptor(n,e);return i.get?i.get.call(arguments.length<3?t:r):i.value}},p.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function y(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}function g(t,e){A(t,e),e.add(t)}function b(t,e,r){return(e=_(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}function w(t,e,r){A(t,e),e.set(t,r)}function A(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function k(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,E(t,e,"get"))}function S(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function x(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,E(t,e,"set"),r),r}function E(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}var P=new WeakMap,T=new WeakMap,C=new WeakMap,O=new WeakMap,F=new WeakMap,M=new WeakMap,R=new WeakMap,I=new WeakMap,j=new WeakMap,L=new WeakSet,D=new WeakSet,N=new WeakSet,U=new WeakSet,W=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(E,t);var e,r,h,b,_,A=(b=E,_=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=m(b);if(_){var r=m(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return y(t)}(this,t)});function E(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,E),g(y(e=A.call(this,f(f({},t),{},{name:"freeTextEditor"}))),U),g(y(e),N),g(y(e),D),g(y(e),L),w(y(e),P,{writable:!0,value:e.editorDivBlur.bind(y(e))}),w(y(e),T,{writable:!0,value:e.editorDivFocus.bind(y(e))}),w(y(e),C,{writable:!0,value:e.editorDivInput.bind(y(e))}),w(y(e),O,{writable:!0,value:e.editorDivKeydown.bind(y(e))}),w(y(e),F,{writable:!0,value:void 0}),w(y(e),M,{writable:!0,value:""}),w(y(e),R,{writable:!0,value:"".concat(e.id,"-editor")}),w(y(e),I,{writable:!0,value:!1}),w(y(e),j,{writable:!0,value:void 0}),x(y(e),F,t.color||E._defaultColor||o.AnnotationEditor._defaultLineColor),x(y(e),j,t.fontSize||E._defaultFontSize),e}return e=E,h=[{key:"initialize",value:function(t){this._l10nPromise=new Map(["free_text2_default_content","editor_free_text2_aria_label"].map((function(e){return[e,t.get(e)]})));var e=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(e.getPropertyValue("--freetext-padding"))}},{key:"updateDefaultParams",value:function(t,e){switch(t){case i.AnnotationEditorParamsType.FREETEXT_SIZE:E._defaultFontSize=e;break;case i.AnnotationEditorParamsType.FREETEXT_COLOR:E._defaultColor=e}}},{key:"defaultPropertiesToUpdate",get:function(){return[[i.AnnotationEditorParamsType.FREETEXT_SIZE,E._defaultFontSize],[i.AnnotationEditorParamsType.FREETEXT_COLOR,E._defaultColor||o.AnnotationEditor._defaultLineColor]]}},{key:"deserialize",value:function(t,e,r){var n,a=p(m(E),"deserialize",this).call(this,t,e,r);return x(a,j,t.fontSize),x(a,F,i.Util.makeHexColor.apply(i.Util,function(t){if(Array.isArray(t))return c(t)}(n=t.color)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||u(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())),x(a,M,t.value),a}}],(r=[{key:"updateParams",value:function(t,e){switch(t){case i.AnnotationEditorParamsType.FREETEXT_SIZE:S(this,L,G).call(this,e);break;case i.AnnotationEditorParamsType.FREETEXT_COLOR:S(this,D,B).call(this,e)}}},{key:"propertiesToUpdate",get:function(){return[[i.AnnotationEditorParamsType.FREETEXT_SIZE,k(this,j)],[i.AnnotationEditorParamsType.FREETEXT_COLOR,k(this,F)]]}},{key:"getInitialTranslation",value:function(){var t=this.parentScale;return[-E._internalPadding*t,-(E._internalPadding+k(this,j))*t]}},{key:"rebuild",value:function(){p(m(E.prototype),"rebuild",this).call(this),null!==this.div&&(this.isAttachedToDOM||this.parent.add(this))}},{key:"enableEditMode",value:function(){this.isInEditMode()||(this.parent.setEditingState(!1),this.parent.updateToolbar(i.AnnotationEditorType.FREETEXT),p(m(E.prototype),"enableEditMode",this).call(this),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this.div.draggable=!1,this.div.removeAttribute("aria-activedescendant"),this.editorDiv.addEventListener("keydown",k(this,O)),this.editorDiv.addEventListener("focus",k(this,T)),this.editorDiv.addEventListener("blur",k(this,P)),this.editorDiv.addEventListener("input",k(this,C)))}},{key:"disableEditMode",value:function(){this.isInEditMode()&&(this.parent.setEditingState(!0),p(m(E.prototype),"disableEditMode",this).call(this),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",k(this,R)),this.div.draggable=!0,this.editorDiv.removeEventListener("keydown",k(this,O)),this.editorDiv.removeEventListener("focus",k(this,T)),this.editorDiv.removeEventListener("blur",k(this,P)),this.editorDiv.removeEventListener("input",k(this,C)),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freeTextEditing"))}},{key:"focusin",value:function(t){p(m(E.prototype),"focusin",this).call(this,t),t.target!==this.editorDiv&&this.editorDiv.focus()}},{key:"onceAdded",value:function(){this.width||(this.enableEditMode(),this.editorDiv.focus())}},{key:"isEmpty",value:function(){return!this.editorDiv||""===this.editorDiv.innerText.trim()}},{key:"remove",value:function(){this.isEditing=!1,this.parent.setEditingState(!0),this.parent.div.classList.add("freeTextEditing"),p(m(E.prototype),"remove",this).call(this)}},{key:"commit",value:function(){this.isInEditMode()&&(p(m(E.prototype),"commit",this).call(this),k(this,I)||(x(this,I,!0),this.parent.addUndoableEditor(this)),this.disableEditMode(),x(this,M,S(this,N,q).call(this).trimEnd()),S(this,U,H).call(this))}},{key:"shouldGetKeyboardEvents",value:function(){return this.isInEditMode()}},{key:"dblclick",value:function(t){this.enableEditMode(),this.editorDiv.focus()}},{key:"keydown",value:function(t){t.target===this.div&&"Enter"===t.key&&(this.enableEditMode(),this.editorDiv.focus())}},{key:"editorDivKeydown",value:function(t){E._keyboardManager.exec(this,t)}},{key:"editorDivFocus",value:function(t){this.isEditing=!0}},{key:"editorDivBlur",value:function(t){this.isEditing=!1}},{key:"editorDivInput",value:function(t){this.parent.div.classList.toggle("freeTextEditing",this.isEmpty())}},{key:"disableEditing",value:function(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}},{key:"enableEditing",value:function(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}},{key:"render",value:function(){var t,e,r=this;if(this.div)return this.div;this.width&&(t=this.x,e=this.y),p(m(E.prototype),"render",this).call(this),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",k(this,R)),this.enableEditing(),E._l10nPromise.get("editor_free_text2_aria_label").then((function(t){var e;return null===(e=r.editorDiv)||void 0===e?void 0:e.setAttribute("aria-label",t)})),E._l10nPromise.get("free_text2_default_content").then((function(t){var e;return null===(e=r.editorDiv)||void 0===e?void 0:e.setAttribute("default-content",t)})),this.editorDiv.contentEditable=!0;var n=this.editorDiv.style;if(n.fontSize="calc(".concat(k(this,j),"px * var(--scale-factor))"),n.color=k(this,F),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),(0,a.bindEvents)(this,this.div,["dblclick","keydown"]),this.width){var i=l(this.parentDimensions,2),o=i[0],u=i[1];this.setAt(t*o,e*u,this.width*o,this.height*u);var c,h=s(k(this,M).split("\n"));try{for(h.s();!(c=h.n()).done;){var f=c.value,d=document.createElement("div");d.append(f?document.createTextNode(f):document.createElement("br")),this.editorDiv.append(d)}}catch(t){h.e(t)}finally{h.f()}this.div.draggable=!0,this.editorDiv.contentEditable=!1}else this.div.draggable=!1,this.editorDiv.contentEditable=!0;return this.div}},{key:"contentDiv",get:function(){return this.editorDiv}},{key:"serialize",value:function(){if(this.isEmpty())return null;var t=E._internalPadding*this.parentScale,e=this.getRect(t,t),r=o.AnnotationEditor._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:k(this,F));return{annotationType:i.AnnotationEditorType.FREETEXT,color:r,fontSize:k(this,j),value:k(this,M),pageIndex:this.pageIndex,rect:e,rotation:this.rotation}}}])&&d(e.prototype,r),h&&d(e,h),Object.defineProperty(e,"prototype",{writable:!1}),E}(o.AnnotationEditor);function G(t){var e=this,r=function(t){e.editorDiv.style.fontSize="calc(".concat(t,"px * var(--scale-factor))"),e.translate(0,-(t-k(e,j))*e.parentScale),x(e,j,t),S(e,U,H).call(e)},n=k(this,j);this.addCommands({cmd:function(){r(t)},undo:function(){r(n)},mustExec:!0,type:i.AnnotationEditorParamsType.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})}function B(t){var e=this,r=k(this,F);this.addCommands({cmd:function(){x(e,F,e.editorDiv.style.color=t)},undo:function(){x(e,F,e.editorDiv.style.color=r)},mustExec:!0,type:i.AnnotationEditorParamsType.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})}function q(){var t=this.editorDiv.getElementsByTagName("div");if(0===t.length)return this.editorDiv.innerText;var e,r=[],n=s(t);try{for(n.s();!(e=n.n()).done;){var i=e.value;r.push(i.innerText.replace(/\r\n?|\n/,""))}}catch(t){n.e(t)}finally{n.f()}return r.join("\n")}function H(){var t,e=l(this.parentDimensions,2),r=e[0],n=e[1];if(this.isAttachedToDOM)t=this.div.getBoundingClientRect();else{var i=this.currentLayer,a=this.div,o=a.style.display;a.style.display="hidden",i.div.append(this.div),t=a.getBoundingClientRect(),a.remove(),a.style.display=o}this.width=t.width/r,this.height=t.height/n}e.FreeTextEditor=W,b(W,"_freeTextDefaultContent",""),b(W,"_l10nPromise",void 0),b(W,"_internalPadding",0),b(W,"_defaultColor",null),b(W,"_defaultFontSize",10),b(W,"_keyboardManager",new a.KeyboardManager([[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],W.prototype.commitOrRemove]])),b(W,"_type","freetext")},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.InkEditor=void 0,Object.defineProperty(e,"fitCurve",{enumerable:!0,get:function(){return o.fitCurve}});var i=r(1),a=r(135),o=r(155),s=r(136);function l(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=h(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function u(t){return function(t){if(Array.isArray(t))return f(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||h(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||h(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(t,e){if(t){if("string"==typeof t)return f(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?f(t,e):void 0}}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function d(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?d(Object(r),!0).forEach((function(e){w(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,A(n.key),n)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(n){var i=Object.getOwnPropertyDescriptor(n,e);return i.get?i.get.call(arguments.length<3?t:r):i.value}},y.apply(this,arguments)}function m(t,e){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},m(t,e)}function g(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}function _(t,e){S(t,e),e.add(t)}function w(t,e,r){return(e=A(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function A(t){var e=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===n(e)?e:String(e)}function k(t,e,r){S(t,e),e.set(t,r)}function S(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function x(t,e,r){return function(t,e){if(t!==e)throw new TypeError("Private static access of wrong provenance")}(t,e),r}function E(t,e,r){return function(t,e,r){if(e.set)e.set.call(t,r);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=r}}(t,T(t,e,"set"),r),r}function P(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,T(t,e,"get"))}function T(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}function C(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}var O=16,F=100,M=new WeakMap,R=new WeakMap,I=new WeakMap,j=new WeakMap,L=new WeakMap,D=new WeakMap,N=new WeakMap,U=new WeakMap,W=new WeakMap,G=new WeakMap,B=new WeakMap,q=new WeakMap,H=new WeakMap,z=new WeakMap,V=new WeakSet,X=new WeakSet,Y=new WeakSet,K=new WeakSet,J=new WeakSet,Q=new WeakSet,$=new WeakSet,Z=new WeakSet,tt=new WeakSet,et=new WeakSet,rt=new WeakSet,nt=new WeakSet,it=new WeakSet,at=new WeakSet,ot=new WeakSet,st=new WeakSet,lt=new WeakSet,ut=new WeakSet,ct=new WeakSet,ht=new WeakSet,ft=new WeakSet,dt=new WeakSet,pt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&m(t,e)}(d,t);var e,r,o,s,h,f=(s=d,h=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(s);if(h){var r=b(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===n(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return g(t)}(this,t)});function d(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,d),_(g(e=f.call(this,p(p({},t),{},{name:"inkEditor"}))),dt),_(g(e),ft),_(g(e),ht),_(g(e),ct),_(g(e),ut),_(g(e),lt),_(g(e),st),_(g(e),ot),_(g(e),at),_(g(e),it),_(g(e),nt),_(g(e),rt),_(g(e),et),_(g(e),tt),_(g(e),Z),_(g(e),$),_(g(e),Q),_(g(e),J),_(g(e),K),_(g(e),Y),_(g(e),X),_(g(e),V),k(g(e),M,{writable:!0,value:0}),k(g(e),R,{writable:!0,value:0}),k(g(e),I,{writable:!0,value:0}),k(g(e),j,{writable:!0,value:e.canvasPointermove.bind(g(e))}),k(g(e),L,{writable:!0,value:e.canvasPointerleave.bind(g(e))}),k(g(e),D,{writable:!0,value:e.canvasPointerup.bind(g(e))}),k(g(e),N,{writable:!0,value:e.canvasPointerdown.bind(g(e))}),k(g(e),U,{writable:!0,value:!1}),k(g(e),W,{writable:!0,value:!1}),k(g(e),G,{writable:!0,value:null}),k(g(e),B,{writable:!0,value:null}),k(g(e),q,{writable:!0,value:0}),k(g(e),H,{writable:!0,value:0}),k(g(e),z,{writable:!0,value:null}),e.color=t.color||null,e.thickness=t.thickness||null,e.opacity=t.opacity||null,e.paths=[],e.bezierPath2D=[],e.currentPath=[],e.scaleFactor=1,e.translationX=e.translationY=0,e.x=0,e.y=0,e}return e=d,o=[{key:"initialize",value:function(t){this._l10nPromise=new Map(["editor_ink_canvas_aria_label","editor_ink2_aria_label"].map((function(e){return[e,t.get(e)]})))}},{key:"updateDefaultParams",value:function(t,e){switch(t){case i.AnnotationEditorParamsType.INK_THICKNESS:d._defaultThickness=e;break;case i.AnnotationEditorParamsType.INK_COLOR:d._defaultColor=e;break;case i.AnnotationEditorParamsType.INK_OPACITY:d._defaultOpacity=e/100}}},{key:"defaultPropertiesToUpdate",get:function(){return[[i.AnnotationEditorParamsType.INK_THICKNESS,d._defaultThickness],[i.AnnotationEditorParamsType.INK_COLOR,d._defaultColor||a.AnnotationEditor._defaultLineColor],[i.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*d._defaultOpacity)]]}},{key:"deserialize",value:function(t,e,r){var n=y(b(d),"deserialize",this).call(this,t,e,r);n.thickness=t.thickness,n.color=i.Util.makeHexColor.apply(i.Util,u(t.color)),n.opacity=t.opacity;var a=c(n.pageDimensions,2),o=a[0],s=a[1],h=n.width*o,f=n.height*s,p=n.parentScale,v=t.thickness/2;E(n,M,h/f),E(n,U,!0),E(n,q,Math.round(h)),E(n,H,Math.round(f));var m,g=l(t.paths);try{for(g.s();!(m=g.n()).done;){var _=m.value.bezier,w=[];n.paths.push(w);for(var A=p*(_[0]-v),k=p*(f-_[1]-v),S=2,P=_.length;S<P;S+=6){var T=p*(_[S]-v),F=p*(f-_[S+1]-v),j=p*(_[S+2]-v),L=p*(f-_[S+3]-v),D=p*(_[S+4]-v),N=p*(f-_[S+5]-v);w.push([[A,k],[T,F],[j,L],[D,N]]),A=D,k=N}var W=x(this,d,Ot).call(this,w);n.bezierPath2D.push(W)}}catch(t){g.e(t)}finally{g.f()}var G=C(n,ct,It).call(n);return E(n,I,Math.max(O,G[2]-G[0])),E(n,R,Math.max(O,G[3]-G[1])),C(n,at,Tt).call(n,h,f),n}}],(r=[{key:"updateParams",value:function(t,e){switch(t){case i.AnnotationEditorParamsType.INK_THICKNESS:C(this,V,vt).call(this,e);break;case i.AnnotationEditorParamsType.INK_COLOR:C(this,X,yt).call(this,e);break;case i.AnnotationEditorParamsType.INK_OPACITY:C(this,Y,mt).call(this,e)}}},{key:"propertiesToUpdate",get:function(){var t;return[[i.AnnotationEditorParamsType.INK_THICKNESS,this.thickness||d._defaultThickness],[i.AnnotationEditorParamsType.INK_COLOR,this.color||d._defaultColor||a.AnnotationEditor._defaultLineColor],[i.AnnotationEditorParamsType.INK_OPACITY,Math.round(100*(null!==(t=this.opacity)&&void 0!==t?t:d._defaultOpacity))]]}},{key:"rebuild",value:function(){y(b(d.prototype),"rebuild",this).call(this),null!==this.div&&(this.canvas||(C(this,rt,xt).call(this),C(this,nt,Et).call(this)),this.isAttachedToDOM||(this.parent.add(this),C(this,it,Pt).call(this)),C(this,ft,Lt).call(this))}},{key:"remove",value:function(){null!==this.canvas&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,P(this,B).disconnect(),E(this,B,null),y(b(d.prototype),"remove",this).call(this))}},{key:"setParent",value:function(t){!this.parent&&t?this._uiManager.removeShouldRescale(this):this.parent&&null===t&&this._uiManager.addShouldRescale(this),y(b(d.prototype),"setParent",this).call(this,t)}},{key:"onScaleChanging",value:function(){var t=c(this.parentDimensions,2),e=t[0],r=t[1],n=this.width*e,i=this.height*r;this.setDimensions(n,i)}},{key:"enableEditMode",value:function(){P(this,U)||null===this.canvas||(y(b(d.prototype),"enableEditMode",this).call(this),this.div.draggable=!1,this.canvas.addEventListener("pointerdown",P(this,N)),this.canvas.addEventListener("pointerup",P(this,D)))}},{key:"disableEditMode",value:function(){this.isInEditMode()&&null!==this.canvas&&(y(b(d.prototype),"disableEditMode",this).call(this),this.div.draggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",P(this,N)),this.canvas.removeEventListener("pointerup",P(this,D)))}},{key:"onceAdded",value:function(){this.div.draggable=!this.isEmpty()}},{key:"isEmpty",value:function(){return 0===this.paths.length||1===this.paths.length&&0===this.paths[0].length}},{key:"commit",value:function(){P(this,U)||(y(b(d.prototype),"commit",this).call(this),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),E(this,U,!0),this.div.classList.add("disabled"),C(this,ft,Lt).call(this,!0),this.parent.addInkEditorIfNeeded(!0),this.parent.moveEditorInDOM(this),this.div.focus({preventScroll:!0}))}},{key:"focusin",value:function(t){y(b(d.prototype),"focusin",this).call(this,t),this.enableEditMode()}},{key:"canvasPointerdown",value:function(t){0===t.button&&this.isInEditMode()&&!P(this,U)&&(this.setInForeground(),"mouse"!==t.type&&this.div.focus(),t.stopPropagation(),this.canvas.addEventListener("pointerleave",P(this,L)),this.canvas.addEventListener("pointermove",P(this,j)),C(this,Q,_t).call(this,t.offsetX,t.offsetY))}},{key:"canvasPointermove",value:function(t){t.stopPropagation(),C(this,$,wt).call(this,t.offsetX,t.offsetY)}},{key:"canvasPointerup",value:function(t){0===t.button&&this.isInEditMode()&&0!==this.currentPath.length&&(t.stopPropagation(),C(this,et,St).call(this,t),this.setInBackground())}},{key:"canvasPointerleave",value:function(t){C(this,et,St).call(this,t),this.setInBackground()}},{key:"render",value:function(){var t,e,r=this;if(this.div)return this.div;this.width&&(t=this.x,e=this.y),y(b(d.prototype),"render",this).call(this),d._l10nPromise.get("editor_ink2_aria_label").then((function(t){var e;return null===(e=r.div)||void 0===e?void 0:e.setAttribute("aria-label",t)}));var n=c(C(this,K,gt).call(this),4),i=n[0],a=n[1],o=n[2],s=n[3];if(this.setAt(i,a,0,0),this.setDims(o,s),C(this,rt,xt).call(this),this.width){var l=c(this.parentDimensions,2),u=l[0],h=l[1];this.setAt(t*u,e*h,this.width*u,this.height*h),E(this,W,!0),C(this,it,Pt).call(this),this.setDims(this.width*u,this.height*h),C(this,tt,kt).call(this),C(this,dt,Dt).call(this),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return C(this,nt,Et).call(this),this.div}},{key:"setDimensions",value:function(t,e){var r=Math.round(t),n=Math.round(e);if(P(this,q)!==r||P(this,H)!==n){E(this,q,r),E(this,H,n),this.canvas.style.visibility="hidden",P(this,M)&&Math.abs(P(this,M)-t/e)>.01&&(e=Math.ceil(t/P(this,M)),this.setDims(t,e));var i=c(this.parentDimensions,2),a=i[0],o=i[1];this.width=t/a,this.height=e/o,P(this,U)&&C(this,at,Tt).call(this,t,e),C(this,it,Pt).call(this),C(this,tt,kt).call(this),this.canvas.style.visibility="visible"}}},{key:"serialize",value:function(){if(this.isEmpty())return null;var t=this.getRect(0,0),e=this.rotation%180==0?t[3]-t[1]:t[2]-t[0],r=a.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);return{annotationType:i.AnnotationEditorType.INK,color:r,thickness:this.thickness,opacity:this.opacity,paths:C(this,st,Ft).call(this,this.scaleFactor/this.parentScale,this.translationX,this.translationY,e),pageIndex:this.pageIndex,rect:t,rotation:this.rotation}}}])&&v(e.prototype,r),o&&v(e,o),Object.defineProperty(e,"prototype",{writable:!1}),d}(a.AnnotationEditor);function vt(t){var e=this,r=this.thickness;this.addCommands({cmd:function(){e.thickness=t,C(e,ft,Lt).call(e)},undo:function(){e.thickness=r,C(e,ft,Lt).call(e)},mustExec:!0,type:i.AnnotationEditorParamsType.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})}function yt(t){var e=this,r=this.color;this.addCommands({cmd:function(){e.color=t,C(e,tt,kt).call(e)},undo:function(){e.color=r,C(e,tt,kt).call(e)},mustExec:!0,type:i.AnnotationEditorParamsType.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})}function mt(t){var e=this;t/=100;var r=this.opacity;this.addCommands({cmd:function(){e.opacity=t,C(e,tt,kt).call(e)},undo:function(){e.opacity=r,C(e,tt,kt).call(e)},mustExec:!0,type:i.AnnotationEditorParamsType.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})}function gt(){var t=this.parentRotation,e=c(this.parentDimensions,2),r=e[0],n=e[1];switch(t){case 90:return[0,n,n,r];case 180:return[r,n,r,n];case 270:return[r,0,n,r];default:return[0,0,r,n]}}function bt(){var t=this.ctx,e=this.color,r=this.opacity,n=this.thickness,i=this.parentScale,a=this.scaleFactor;t.lineWidth=n*i/a,t.lineCap="round",t.lineJoin="round",t.miterLimit=10,t.strokeStyle="".concat(e).concat((0,s.opacityToHex)(r))}function _t(t,e){var r,n=this;this.isEditing=!0,P(this,W)||(E(this,W,!0),C(this,it,Pt).call(this),this.thickness||(this.thickness=pt._defaultThickness),this.color||(this.color=pt._defaultColor||a.AnnotationEditor._defaultLineColor),null!==(r=this.opacity)&&void 0!==r||(this.opacity=pt._defaultOpacity)),this.currentPath.push([t,e]),E(this,G,null),C(this,J,bt).call(this),this.ctx.beginPath(),this.ctx.moveTo(t,e),E(this,z,(function(){var t;P(n,z)&&(P(n,G)&&(n.isEmpty()?(n.ctx.setTransform(1,0,0,1,0,0),n.ctx.clearRect(0,0,n.canvas.width,n.canvas.height)):C(n,tt,kt).call(n),(t=n.ctx).lineTo.apply(t,u(P(n,G))),E(n,G,null),n.ctx.stroke()),window.requestAnimationFrame(P(n,z)))})),window.requestAnimationFrame(P(this,z))}function wt(t,e){var r=c(this.currentPath.at(-1),2),n=r[0],i=r[1];t===n&&e===i||(this.currentPath.push([t,e]),E(this,G,[t,e]))}function At(t,e){var r=this;this.ctx.closePath(),E(this,z,null),t=Math.min(Math.max(t,0),this.canvas.width),e=Math.min(Math.max(e,0),this.canvas.height);var n,i=c(this.currentPath.at(-1),2),a=i[0],s=i[1];if(t===a&&e===s||this.currentPath.push([t,e]),1!==this.currentPath.length)n=(0,o.fitCurve)(this.currentPath,30,null);else{var l=[t,e];n=[[l,l.slice(),l.slice(),l]]}var u=x(pt,pt,Ot).call(pt,n);this.currentPath.length=0,this.addCommands({cmd:function(){r.paths.push(n),r.bezierPath2D.push(u),r.rebuild()},undo:function(){r.paths.pop(),r.bezierPath2D.pop(),0===r.paths.length?r.remove():(r.canvas||(C(r,rt,xt).call(r),C(r,nt,Et).call(r)),C(r,ft,Lt).call(r))},mustExec:!0})}function kt(){if(this.isEmpty())C(this,ot,Ct).call(this);else{C(this,J,bt).call(this);var t=this.canvas,e=this.ctx;e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,t.width,t.height),C(this,ot,Ct).call(this);var r,n=l(this.bezierPath2D);try{for(n.s();!(r=n.n()).done;){var i=r.value;e.stroke(i)}}catch(t){n.e(t)}finally{n.f()}}}function St(t){C(this,Z,At).call(this,t.offsetX,t.offsetY),this.canvas.removeEventListener("pointerleave",P(this,L)),this.canvas.removeEventListener("pointermove",P(this,j)),this.addToAnnotationStorage()}function xt(){var t=this;this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",pt._l10nPromise.get("editor_ink_canvas_aria_label").then((function(e){var r;return null===(r=t.canvas)||void 0===r?void 0:r.setAttribute("aria-label",e)})),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")}function Et(){var t=this,e=null;E(this,B,new ResizeObserver((function(r){var n=r[0].contentRect;n.width&&n.height&&(null!==e&&clearTimeout(e),e=setTimeout((function(){t.fixDims(),e=null}),F),t.setDimensions(n.width,n.height))}))),P(this,B).observe(this.div)}function Pt(){if(P(this,W)){var t=c(this.parentDimensions,2),e=t[0],r=t[1];this.canvas.width=Math.ceil(this.width*e),this.canvas.height=Math.ceil(this.height*r),C(this,ot,Ct).call(this)}}function Tt(t,e){var r=C(this,ht,jt).call(this),n=(t-r)/P(this,I),i=(e-r)/P(this,R);this.scaleFactor=Math.min(n,i)}function Ct(){var t=C(this,ht,jt).call(this)/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+t,this.translationY*this.scaleFactor+t)}function Ot(t){for(var e=new Path2D,r=0,n=t.length;r<n;r++){var i=c(t[r],4),a=i[0],o=i[1],s=i[2],l=i[3];0===r&&e.moveTo.apply(e,u(a)),e.bezierCurveTo(o[0],o[1],s[0],s[1],l[0],l[1])}return e}function Ft(t,e,r,n){var i,a,o,s=[],u=this.thickness/2,h=l(this.paths);try{for(h.s();!(o=h.n()).done;){var f=o.value;i=[],a=[];for(var d=0,p=f.length;d<p;d++){var v=c(f[d],4),y=v[0],m=v[1],g=v[2],b=v[3],_=t*(y[0]+e)+u,w=n-t*(y[1]+r)-u,A=t*(m[0]+e)+u,k=n-t*(m[1]+r)-u,S=t*(g[0]+e)+u,x=n-t*(g[1]+r)-u,E=t*(b[0]+e)+u,P=n-t*(b[1]+r)-u;0===d&&(i.push(_,w),a.push(_,w)),i.push(A,k,S,x,E,P),C(this,lt,Mt).call(this,_,w,A,k,S,x,E,P,4,a)}s.push({bezier:i,points:a})}}catch(t){h.e(t)}finally{h.f()}return s}function Mt(t,e,r,n,i,a,o,s,l,u){if(C(this,ut,Rt).call(this,t,e,r,n,i,a,o,s))u.push(o,s);else{for(var c=1;c<l-1;c++){var h=c/l,f=1-h,d=h*t+f*r,p=h*e+f*n,v=h*r+f*i,y=h*n+f*a;d=h*(d=h*d+f*v)+f*(v=h*v+f*(h*i+f*o)),p=h*(p=h*p+f*y)+f*(y=h*y+f*(h*a+f*s)),u.push(d,p)}u.push(o,s)}}function Rt(t,e,r,n,i,a,o,s){var l=Math.pow(3*r-2*t-o,2),u=Math.pow(3*n-2*e-s,2),c=Math.pow(3*i-t-2*o,2),h=Math.pow(3*a-e-2*s,2);return Math.max(l,c)+Math.max(u,h)<=10}function It(){var t,e=1/0,r=-1/0,n=1/0,a=-1/0,o=l(this.paths);try{for(o.s();!(t=o.n()).done;){var s,h=l(t.value);try{for(h.s();!(s=h.n()).done;){var f=c(s.value,4),d=f[0],p=f[1],v=f[2],y=f[3],m=i.Util.bezierBoundingBox.apply(i.Util,u(d).concat(u(p),u(v),u(y)));e=Math.min(e,m[0]),n=Math.min(n,m[1]),r=Math.max(r,m[2]),a=Math.max(a,m[3])}}catch(t){h.e(t)}finally{h.f()}}}catch(t){o.e(t)}finally{o.f()}return[e,n,r,a]}function jt(){return P(this,U)?Math.ceil(this.thickness*this.parentScale):0}function Lt(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.isEmpty())if(P(this,U)){var e=C(this,ct,It).call(this),r=C(this,ht,jt).call(this);E(this,I,Math.max(O,e[2]-e[0])),E(this,R,Math.max(O,e[3]-e[1]));var n=Math.ceil(r+P(this,I)*this.scaleFactor),i=Math.ceil(r+P(this,R)*this.scaleFactor),a=c(this.parentDimensions,2),o=a[0],s=a[1];this.width=n/o,this.height=i/s,E(this,M,n/i),C(this,dt,Dt).call(this);var l=this.translationX,u=this.translationY;this.translationX=-e[0],this.translationY=-e[1],C(this,it,Pt).call(this),C(this,tt,kt).call(this),E(this,q,n),E(this,H,i),this.setDims(n,i);var h=t?r/this.scaleFactor/2:0;this.translate(l-this.translationX-h,u-this.translationY-h)}else C(this,tt,kt).call(this)}function Dt(){var t=this.div.style;P(this,M)>=1?(t.minHeight="".concat(O,"px"),t.minWidth="".concat(Math.round(P(this,M)*O),"px")):(t.minWidth="".concat(O,"px"),t.minHeight="".concat(Math.round(O/P(this,M)),"px"))}e.InkEditor=pt,w(pt,"_defaultColor",null),w(pt,"_defaultOpacity",1),w(pt,"_defaultThickness",1),w(pt,"_l10nPromise",void 0),w(pt,"_type","ink")},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.fitCurve=void 0;var n=r(156);e.fitCurve=n},t=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,r){for(var n=0;n<r.length;n++){var i=r[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,"string");if("object"!==e(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===e(a)?a:String(a)),i)}var a}function i(t,e,r){return e&&n(t.prototype,e),r&&n(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||o(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){if(t){if("string"==typeof t)return s(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function l(t,e,r,n,i){var o,s,h,f,d,p,y,m,g,b,_,w,A;if(2===t.length)return w=v.vectorLen(v.subtract(t[0],t[1]))/3,[o=[t[0],v.addArrays(t[0],v.mulItems(e,w)),v.addArrays(t[1],v.mulItems(r,w)),t[1]]];s=function(t){var e,r,n,i=[];return t.forEach((function(t,a){e=a?r+v.vectorLen(v.subtract(t,n)):0,i.push(e),r=e,n=t})),i=i.map((function(t){return t/r}))}(t);var k=a(u(t,s,s,e,r,i),3);if(o=k[0],f=k[1],p=k[2],0===f||f<n)return[o];if(f<n*n)for(h=s,d=f,y=p,A=0;A<20;A++){var S=a(u(t,s,h=c(o,t,h),e,r,i),3);if(o=S[0],f=S[1],p=S[2],f<n)return[o];if(p===y){var x=f/d;if(x>.9999&&x<1.0001)break}d=f,y=p}if(_=[],(m=v.subtract(t[p-1],t[p+1])).every((function(t){return 0===t}))){var E=[-(m=v.subtract(t[p-1],t[p]))[1],m[0]];m[0]=E[0],m[1]=E[1]}return g=v.normalize(m),b=v.mulItems(g,-1),(_=_.concat(l(t.slice(0,p+1),e,g,n,i))).concat(l(t.slice(p),b,r,n,i))}function u(t,e,r,n,i,o){var s,l,u;s=function(t,e,r,n){var i,a,o,s,l,u,c,h,f,d,p,m,g,b,_,w,A,k=t[0],S=t[t.length-1];for(i=[k,null,null,S],a=v.zeros_Xx2x2(e.length),g=0,b=e.length;g<b;g++)A=1-(w=e[g]),(o=a[g])[0]=v.mulItems(r,3*w*(A*A)),o[1]=v.mulItems(n,3*A*(w*w));for(s=[[0,0],[0,0]],l=[0,0],g=0,b=t.length;g<b;g++)w=e[g],o=a[g],s[0][0]+=v.dot(o[0],o[0]),s[0][1]+=v.dot(o[0],o[1]),s[1][0]+=v.dot(o[0],o[1]),s[1][1]+=v.dot(o[1],o[1]),_=v.subtract(t[g],y.q([k,k,S,S],w)),l[0]+=v.dot(o[0],_),l[1]+=v.dot(o[1],_);return u=s[0][0]*s[1][1]-s[1][0]*s[0][1],c=s[0][0]*l[1]-s[1][0]*l[0],h=l[0]*s[1][1]-l[1]*s[0][1],d=0===u?0:c/u,(f=0===u?0:h/u)<(p=1e-6*(m=v.vectorLen(v.subtract(k,S))))||d<p?(i[1]=v.addArrays(k,v.mulItems(r,m/3)),i[2]=v.addArrays(S,v.mulItems(n,m/3))):(i[1]=v.addArrays(k,v.mulItems(r,f)),i[2]=v.addArrays(S,v.mulItems(n,d))),i}(t,r,n,i);var c=function(t,e,r){var n,i,a,o,s,l,u,c;i=0,a=Math.floor(t.length/2);var h=f(e,10);for(s=0,l=t.length;s<l;s++)u=t[s],c=d(0,r[s],h,10),(n=(o=v.subtract(y.q(e,c),u))[0]*o[0]+o[1]*o[1])>i&&(i=n,a=s);return[i,a]}(t,s,e),h=a(c,2);return l=h[0],u=h[1],o&&o({bez:s,points:t,params:e,maxErr:l,maxPoint:u}),[s,l,u]}function c(t,e,r){return r.map((function(r,n){return h(t,e[n],r)}))}function h(t,e,r){var n=v.subtract(y.q(t,r),e),i=y.qprime(t,r),a=v.mulMatrix(n,i),o=v.sum(v.squareItems(i))+2*v.mulMatrix(n,y.qprimeprime(t,r));return 0===o?r:r-a/o}var f=function(t,e){for(var r,n=[0],i=t[0],a=0,o=1;o<=e;o++)r=y.q(t,o/e),a+=v.vectorLen(v.subtract(r,i)),n.push(a),i=r;return n.map((function(t){return t/a}))};function d(t,e,r,n){if(e<0)return 0;if(e>1)return 1;for(var i,a,o,s,l=1;l<=n;l++)if(e<=r[l]){o=(l-1)/n,a=l/n,s=(e-(i=r[l-1]))/(r[l]-i)*(a-o)+o;break}return s}function p(t,e){return v.normalize(v.subtract(t,e))}var v=function(){function t(){r(this,t)}return i(t,null,[{key:"zeros_Xx2x2",value:function(t){for(var e=[];t--;)e.push([0,0]);return e}},{key:"mulItems",value:function(t,e){return t.map((function(t){return t*e}))}},{key:"mulMatrix",value:function(t,e){return t.reduce((function(t,r,n){return t+r*e[n]}),0)}},{key:"subtract",value:function(t,e){return t.map((function(t,r){return t-e[r]}))}},{key:"addArrays",value:function(t,e){return t.map((function(t,r){return t+e[r]}))}},{key:"addItems",value:function(t,e){return t.map((function(t){return t+e}))}},{key:"sum",value:function(t){return t.reduce((function(t,e){return t+e}))}},{key:"dot",value:function(e,r){return t.mulMatrix(e,r)}},{key:"vectorLen",value:function(t){return Math.hypot.apply(Math,function(t){if(Array.isArray(t))return s(t)}(e=t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||o(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());var e}},{key:"divItems",value:function(t,e){return t.map((function(t){return t/e}))}},{key:"squareItems",value:function(t){return t.map((function(t){return t*t}))}},{key:"normalize",value:function(t){return this.divItems(t,this.vectorLen(t))}}]),t}(),y=function(){function t(){r(this,t)}return i(t,null,[{key:"q",value:function(t,e){var r=1-e,n=v.mulItems(t[0],r*r*r),i=v.mulItems(t[1],3*r*r*e),a=v.mulItems(t[2],3*r*e*e),o=v.mulItems(t[3],e*e*e);return v.addArrays(v.addArrays(n,i),v.addArrays(a,o))}},{key:"qprime",value:function(t,e){var r=1-e,n=v.mulItems(v.subtract(t[1],t[0]),3*r*r),i=v.mulItems(v.subtract(t[2],t[1]),6*r*e),a=v.mulItems(v.subtract(t[3],t[2]),3*e*e);return v.addArrays(v.addArrays(n,i),a)}},{key:"qprimeprime",value:function(t,e){return v.addArrays(v.mulItems(v.addArrays(v.subtract(t[2],v.mulItems(t[1],2)),t[0]),6*(1-e)),v.mulItems(v.addArrays(v.subtract(t[3],v.mulItems(t[2],2)),t[1]),6*e))}}]),t}();t.exports=function(t,e,r){if(!Array.isArray(t))throw new TypeError("First argument should be an array");if(t.forEach((function(e){if(!Array.isArray(e)||e.some((function(t){return"number"!=typeof t}))||e.length!==t[0].length)throw Error("Each point should be an array of numbers. Each point should have the same amount of numbers.")})),(t=t.filter((function(e,r){return 0===r||!e.every((function(e,n){return e===t[r-1][n]}))}))).length<2)return[];var n=t.length,i=p(t[1],t[0]),a=p(t[n-2],t[n-1]);return l(t,i,a,e,r)},t.exports.fitCubic=l,t.exports.createTangent=p},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AnnotationLayer=void 0;var n=r(1),i=r(137),a=r(134),o=r(158),s=r(159);function l(t,e,r){return function(t,e){if(t!==e)throw new TypeError("Private static access of wrong provenance")}(t,e),r}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(n){var i=Object.getOwnPropertyDescriptor(n,e);return i.get?i.get.call(arguments.length<3?t:r):i.value}},u.apply(this,arguments)}function c(t){return function(t){if(Array.isArray(t))return w(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||_(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&f(t,e)}function f(t,e){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},f(t,e)}function d(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=v(t);if(e){var i=v(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return function(t,e){if(e&&("object"===A(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return p(t)}(this,r)}}function p(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}function y(t,e){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.add(t)}function m(t,e,r){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return r}function g(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=_(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function b(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||_(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function k(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,E(n.key),n)}}function x(t,e,r){return e&&S(t.prototype,e),r&&S(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function E(t){var e=function(t,e){if("object"!==A(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===A(e)?e:String(e)}var P=1e3,T=new WeakSet;function C(t){return{width:t[2]-t[0],height:t[3]-t[1]}}var O=function(){function t(){k(this,t)}return x(t,null,[{key:"create",value:function(t){switch(t.data.annotationType){case n.AnnotationType.LINK:return new I(t);case n.AnnotationType.TEXT:return new W(t);case n.AnnotationType.WIDGET:switch(t.data.fieldType){case"Tx":return new B(t);case"Btn":return t.data.radioButton?new H(t):t.data.checkBox?new q(t):new z(t);case"Ch":return new V(t)}return new G(t);case n.AnnotationType.POPUP:return new X(t);case n.AnnotationType.FREETEXT:return new K(t);case n.AnnotationType.LINE:return new J(t);case n.AnnotationType.SQUARE:return new Q(t);case n.AnnotationType.CIRCLE:return new $(t);case n.AnnotationType.POLYLINE:return new Z(t);case n.AnnotationType.CARET:return new et(t);case n.AnnotationType.INK:return new rt(t);case n.AnnotationType.POLYGON:return new tt(t);case n.AnnotationType.HIGHLIGHT:return new nt(t);case n.AnnotationType.UNDERLINE:return new it(t);case n.AnnotationType.SQUIGGLY:return new at(t);case n.AnnotationType.STRIKEOUT:return new ot(t);case n.AnnotationType.STAMP:return new st(t);case n.AnnotationType.FILEATTACHMENT:return new lt(t);default:return new F(t)}}}]),t}(),F=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=r.isRenderable,i=void 0!==n&&n,a=r.ignoreBorder,o=void 0!==a&&a,s=r.createQuadrilaterals,l=void 0!==s&&s;k(this,t),this.isRenderable=i,this.data=e.data,this.layer=e.layer,this.page=e.page,this.viewport=e.viewport,this.linkService=e.linkService,this.downloadManager=e.downloadManager,this.imageResourcesPath=e.imageResourcesPath,this.renderForms=e.renderForms,this.svgFactory=e.svgFactory,this.annotationStorage=e.annotationStorage,this.enableScripting=e.enableScripting,this.hasJSActions=e.hasJSActions,this._fieldObjects=e.fieldObjects,i&&(this.container=this._createContainer(o)),l&&(this.quadrilaterals=this._createQuadrilaterals(o))}return x(t,[{key:"_createContainer",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.data,r=this.page,i=this.viewport,a=document.createElement("section");a.setAttribute("data-annotation-id",e.id);var o=i.rawDims,s=o.pageWidth,l=o.pageHeight,u=o.pageX,c=o.pageY,h=C(e.rect),f=h.width,d=h.height,p=n.Util.normalizeRect([e.rect[0],r.view[3]-e.rect[1]+r.view[1],e.rect[2],r.view[3]-e.rect[3]+r.view[1]]);if(!t&&e.borderStyle.width>0){a.style.borderWidth="".concat(e.borderStyle.width,"px");var v=e.borderStyle.horizontalCornerRadius,y=e.borderStyle.verticalCornerRadius;if(v>0||y>0){var m="calc(".concat(v,"px * var(--scale-factor)) / calc(").concat(y,"px * var(--scale-factor))");a.style.borderRadius=m}else if(this instanceof H){var g="calc(".concat(f,"px * var(--scale-factor)) / calc(").concat(d,"px * var(--scale-factor))");a.style.borderRadius=g}switch(e.borderStyle.style){case n.AnnotationBorderStyleType.SOLID:a.style.borderStyle="solid";break;case n.AnnotationBorderStyleType.DASHED:a.style.borderStyle="dashed";break;case n.AnnotationBorderStyleType.BEVELED:(0,n.warn)("Unimplemented border style: beveled");break;case n.AnnotationBorderStyleType.INSET:(0,n.warn)("Unimplemented border style: inset");break;case n.AnnotationBorderStyleType.UNDERLINE:a.style.borderBottomStyle="solid"}var b=e.borderColor||null;b?a.style.borderColor=n.Util.makeHexColor(0|b[0],0|b[1],0|b[2]):a.style.borderWidth=0}a.style.left="".concat(100*(p[0]-u)/s,"%"),a.style.top="".concat(100*(p[1]-c)/l,"%");var _=e.rotation;return e.hasOwnCanvas||0===_?(a.style.width="".concat(100*f/s,"%"),a.style.height="".concat(100*d/l,"%")):this.setRotation(_,a),a}},{key:"setRotation",value:function(t){var e,r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.container,i=this.viewport.rawDims,a=i.pageWidth,o=i.pageHeight,s=C(this.data.rect),l=s.width,u=s.height;t%180==0?(e=100*l/a,r=100*u/o):(e=100*u/a,r=100*l/o),n.style.width="".concat(e,"%"),n.style.height="".concat(r,"%"),n.setAttribute("data-main-rotation",(360-t)%360)}},{key:"_commonActions",get:function(){var t=this,e=function(t,e,r){var n=r.detail[t];r.target.style[e]=o.ColorConverters["".concat(n[0],"_HTML")](n.slice(1))};return(0,n.shadow)(this,"_commonActions",{display:function(e){var r=e.detail.display%2==1;t.container.style.visibility=r?"hidden":"visible",t.annotationStorage.setValue(t.data.id,{hidden:r,print:0===e.detail.display||3===e.detail.display})},print:function(e){t.annotationStorage.setValue(t.data.id,{print:e.detail.print})},hidden:function(e){t.container.style.visibility=e.detail.hidden?"hidden":"visible",t.annotationStorage.setValue(t.data.id,{hidden:e.detail.hidden})},focus:function(t){setTimeout((function(){return t.target.focus({preventScroll:!1})}),0)},userName:function(t){t.target.title=t.detail.userName},readonly:function(t){t.detail.readonly?t.target.setAttribute("readonly",""):t.target.removeAttribute("readonly")},required:function(e){t._setRequired(e.target,e.detail.required)},bgColor:function(t){e("bgColor","backgroundColor",t)},fillColor:function(t){e("fillColor","backgroundColor",t)},fgColor:function(t){e("fgColor","color",t)},textColor:function(t){e("textColor","color",t)},borderColor:function(t){e("borderColor","borderColor",t)},strokeColor:function(t){e("strokeColor","borderColor",t)},rotation:function(e){var r=e.detail.rotation;t.setRotation(r),t.annotationStorage.setValue(t.data.id,{rotation:r})}})}},{key:"_dispatchEventFromSandbox",value:function(t,e){for(var r=this._commonActions,n=0,i=Object.keys(e.detail);n<i.length;n++){var a=i[n],o=t[a]||r[a];null==o||o(e)}}},{key:"_setDefaultPropertiesFromJS",value:function(t){if(this.enableScripting){var e=this.annotationStorage.getRawValue(this.data.id);if(e)for(var r=this._commonActions,n=0,i=Object.entries(e);n<i.length;n++){var a=b(i[n],2),o=a[0],s=a[1],l=r[o];l&&(l({detail:{[o]:s},target:t}),delete e[o])}}}},{key:"_createQuadrilaterals",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.data.quadPoints)return null;var e,r=[],n=this.data.rect,i=g(this.data.quadPoints);try{for(i.s();!(e=i.n()).done;){var a=e.value;this.data.rect=[a[2].x,a[2].y,a[1].x,a[1].y],r.push(this._createContainer(t))}}catch(t){i.e(t)}finally{i.f()}return this.data.rect=n,r}},{key:"_createPopup",value:function(t,e){var r=this.container;this.quadrilaterals&&(t=t||this.quadrilaterals,r=this.quadrilaterals[0]),t||((t=document.createElement("div")).className="popupTriggerArea",r.append(t));var n=new Y({container:r,trigger:t,color:e.color,titleObj:e.titleObj,modificationDate:e.modificationDate,contentsObj:e.contentsObj,richText:e.richText,hideWrapper:!0}).render();n.style.left="100%",r.append(n)}},{key:"_renderQuadrilaterals",value:function(t){var e,r=g(this.quadrilaterals);try{for(r.s();!(e=r.n()).done;)e.value.className=t}catch(t){r.e(t)}finally{r.f()}return this.quadrilaterals}},{key:"render",value:function(){(0,n.unreachable)("Abstract method `AnnotationElement.render` called")}},{key:"_getElementsByName",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=[];if(this._fieldObjects){var i=this._fieldObjects[t];if(i){var a,o=g(i);try{for(o.s();!(a=o.n()).done;){var s=a.value,l=s.page,u=s.id,c=s.exportValues;if(-1!==l&&u!==e){var h="string"==typeof c?c:null,f=document.querySelector('[data-element-id="'.concat(u,'"]'));!f||T.has(f)?r.push({id:u,exportValue:h,domElement:f}):(0,n.warn)("_getElementsByName - element not allowed: ".concat(u))}}}catch(t){o.e(t)}finally{o.f()}}return r}var d,p=g(document.getElementsByName(t));try{for(p.s();!(d=p.n()).done;){var v=d.value,y=v.exportValue,m=v.getAttribute("data-element-id");m!==e&&T.has(v)&&r.push({id:m,exportValue:y,domElement:v})}}catch(t){p.e(t)}finally{p.f()}return r}}]),t}(),M=new WeakSet,R=new WeakSet,I=function(t){h(r,t);var e=d(r);function r(t){var n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return k(this,r),y(p(n=e.call(this,t,{isRenderable:!0,ignoreBorder:!(null==i||!i.ignoreBorder),createQuadrilaterals:!0})),R),y(p(n),M),n.isTooltipOnly=t.data.isTooltipOnly,n}return x(r,[{key:"render",value:function(){var t=this.data,e=this.linkService,r=document.createElement("a");r.setAttribute("data-element-id",t.id);var n=!1;return t.url?(e.addLinkAttributes(r,t.url,t.newWindow),n=!0):t.action?(this._bindNamedAction(r,t.action),n=!0):t.attachment?(this._bindAttachment(r,t.attachment),n=!0):t.setOCGState?(m(this,R,L).call(this,r,t.setOCGState),n=!0):t.dest?(this._bindLink(r,t.dest),n=!0):(t.actions&&(t.actions.Action||t.actions["Mouse Up"]||t.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(r,t),n=!0),t.resetForm?(this._bindResetFormAction(r,t.resetForm),n=!0):this.isTooltipOnly&&!n&&(this._bindLink(r,""),n=!0)),this.quadrilaterals?this._renderQuadrilaterals("linkAnnotation").map((function(t,e){var n=0===e?r:r.cloneNode();return t.append(n),t})):(this.container.className="linkAnnotation",n&&this.container.append(r),this.container)}},{key:"_bindLink",value:function(t,e){var r=this;t.href=this.linkService.getDestinationHash(e),t.onclick=function(){return e&&r.linkService.goToDestination(e),!1},(e||""===e)&&m(this,M,j).call(this)}},{key:"_bindNamedAction",value:function(t,e){var r=this;t.href=this.linkService.getAnchorUrl(""),t.onclick=function(){return r.linkService.executeNamedAction(e),!1},m(this,M,j).call(this)}},{key:"_bindAttachment",value:function(t,e){var r=this;t.href=this.linkService.getAnchorUrl(""),t.onclick=function(){var t;return null===(t=r.downloadManager)||void 0===t||t.openOrDownloadData(r.container,e.content,e.filename),!1},m(this,M,j).call(this)}},{key:"_bindJSAction",value:function(t,e){var r=this;t.href=this.linkService.getAnchorUrl("");for(var n=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]),i=function(){var i=o[a],s=n.get(i);if(!s)return"continue";t[s]=function(){var t;return null===(t=r.linkService.eventBus)||void 0===t||t.dispatch("dispatcheventinsandbox",{source:r,detail:{id:e.id,name:i}}),!1}},a=0,o=Object.keys(e.actions);a<o.length;a++)i();t.onclick||(t.onclick=function(){return!1}),m(this,M,j).call(this)}},{key:"_bindResetFormAction",value:function(t,e){var r=this,i=t.onclick;if(i||(t.href=this.linkService.getAnchorUrl("")),m(this,M,j).call(this),!this._fieldObjects)return(0,n.warn)('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),void(i||(t.onclick=function(){return!1}));t.onclick=function(){null==i||i();var t=e.fields,a=e.refs,o=e.include,s=[];if(0!==t.length||0!==a.length){var l,u=new Set(a),h=g(t);try{for(h.s();!(l=h.n()).done;){var f,d=l.value,p=g(r._fieldObjects[d]||[]);try{for(p.s();!(f=p.n()).done;){var v=f.value.id;u.add(v)}}catch(t){p.e(t)}finally{p.f()}}}catch(t){h.e(t)}finally{h.f()}for(var y=0,m=Object.values(r._fieldObjects);y<m.length;y++){var b,_=g(m[y]);try{for(_.s();!(b=_.n()).done;){var w=b.value;u.has(w.id)===o&&s.push(w)}}catch(t){_.e(t)}finally{_.f()}}}else for(var A=0,k=Object.values(r._fieldObjects);A<k.length;A++){var S=k[A];s.push.apply(s,c(S))}for(var x,E=r.annotationStorage,P=[],C=0,O=s;C<O.length;C++){var F=O[C],M=F.id;switch(P.push(M),F.type){case"text":var R=F.defaultValue||"";E.setValue(M,{value:R});break;case"checkbox":case"radiobutton":var I=F.defaultValue===F.exportValues;E.setValue(M,{value:I});break;case"combobox":case"listbox":var j=F.defaultValue||"";E.setValue(M,{value:j});break;default:continue}var L=document.querySelector('[data-element-id="'.concat(M,'"]'));L&&(T.has(L)?L.dispatchEvent(new Event("resetform")):(0,n.warn)("_bindResetFormAction - element not allowed: ".concat(M)))}return r.enableScripting&&(null===(x=r.linkService.eventBus)||void 0===x||x.dispatch("dispatcheventinsandbox",{source:r,detail:{id:"app",ids:P,name:"ResetForm"}})),!1}}}]),r}(F);function j(){this.container.setAttribute("data-internal-link","")}function L(t,e){var r=this;t.href=this.linkService.getAnchorUrl(""),t.onclick=function(){return r.linkService.executeSetOCGState(e),!1},m(this,M,j).call(this)}var D,N,U,W=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o})}return x(r,[{key:"render",value:function(){this.container.className="textAnnotation";var t=document.createElement("img");return t.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",t.alt="[{{type}} Annotation]",t.dataset.l10nId="text_annotation_type",t.dataset.l10nArgs=JSON.stringify({type:this.data.name}),this.data.hasPopup||this._createPopup(t,this.data),this.container.append(t),this.container}}]),r}(F),G=function(t){h(r,t);var e=d(r);function r(){return k(this,r),e.apply(this,arguments)}return x(r,[{key:"render",value:function(){return this.data.alternativeText&&(this.container.title=this.data.alternativeText),this.container}},{key:"_getKeyModifier",value:function(t){var e=n.FeatureTest.platform,r=e.isWin,i=e.isMac;return r&&t.ctrlKey||i&&t.metaKey}},{key:"_setEventListener",value:function(t,e,r,n){var i=this;e.includes("mouse")?t.addEventListener(e,(function(t){var e;null===(e=i.linkService.eventBus)||void 0===e||e.dispatch("dispatcheventinsandbox",{source:i,detail:{id:i.data.id,name:r,value:n(t),shift:t.shiftKey,modifier:i._getKeyModifier(t)}})})):t.addEventListener(e,(function(t){var e;null===(e=i.linkService.eventBus)||void 0===e||e.dispatch("dispatcheventinsandbox",{source:i,detail:{id:i.data.id,name:r,value:n(t)}})}))}},{key:"_setEventListeners",value:function(t,e,r){var n,i=g(e);try{for(i.s();!(n=i.n()).done;){var a,o=b(n.value,2),s=o[0],l=o[1];("Action"===l||null!==(a=this.data.actions)&&void 0!==a&&a[l])&&this._setEventListener(t,s,l,r)}}catch(t){i.e(t)}finally{i.f()}}},{key:"_setBackgroundColor",value:function(t){var e=this.data.backgroundColor||null;t.style.backgroundColor=null===e?"transparent":n.Util.makeHexColor(e[0],e[1],e[2])}},{key:"_setTextStyle",value:function(t){var e,r=this.data.defaultAppearanceData.fontColor,i=this.data.defaultAppearanceData.fontSize||9,a=t.style,o=function(t){return Math.round(10*t)/10};if(this.data.multiLine){var s=Math.abs(this.data.rect[3]-this.data.rect[1]-2),l=s/(Math.round(s/(n.LINE_FACTOR*i))||1);e=Math.min(i,o(l/n.LINE_FACTOR))}else{var u=Math.abs(this.data.rect[3]-this.data.rect[1]-2);e=Math.min(i,o(u/n.LINE_FACTOR))}a.fontSize="calc(".concat(e,"px * var(--scale-factor))"),a.color=n.Util.makeHexColor(r[0],r[1],r[2]),null!==this.data.textAlignment&&(a.textAlign=["left","center","right"][this.data.textAlignment])}},{key:"_setRequired",value:function(t,e){e?t.setAttribute("required",!0):t.removeAttribute("required"),t.setAttribute("aria-required",e)}}]),r}(F),B=function(t){h(r,t);var e=d(r);function r(t){k(this,r);var n=t.renderForms||!t.data.hasAppearance&&!!t.data.fieldValue;return e.call(this,t,{isRenderable:n})}return x(r,[{key:"setPropertyOnSiblings",value:function(t,e,r,n){var i,a=this.annotationStorage,o=g(this._getElementsByName(t.name,t.id));try{for(o.s();!(i=o.n()).done;){var s=i.value;s.domElement&&(s.domElement[e]=r),a.setValue(s.id,{[n]:r})}}catch(t){o.e(t)}finally{o.f()}}},{key:"render",value:function(){var t=this,e=this.annotationStorage,r=this.data.id;this.container.className="textWidgetAnnotation";var n=null;if(this.renderForms){var i=e.getValue(r,{value:this.data.fieldValue}),a=i.formattedValue||i.value||"",o=e.getValue(r,{charLimit:this.data.maxLen}).charLimit;o&&a.length>o&&(a=a.slice(0,o));var s={userValue:a,formattedValue:null,lastCommittedValue:null,commitKey:1};this.data.multiLine?((n=document.createElement("textarea")).textContent=a,this.data.doNotScroll&&(n.style.overflowY="hidden")):((n=document.createElement("input")).type="text",n.setAttribute("value",a),this.data.doNotScroll&&(n.style.overflowX="hidden")),T.add(n),n.setAttribute("data-element-id",r),n.disabled=this.data.readOnly,n.name=this.data.fieldName,n.tabIndex=P,this._setRequired(n,this.data.required),o&&(n.maxLength=o),n.addEventListener("input",(function(i){e.setValue(r,{value:i.target.value}),t.setPropertyOnSiblings(n,"value",i.target.value,"value")})),n.addEventListener("resetform",(function(e){var r,i=null!==(r=t.data.defaultFieldValue)&&void 0!==r?r:"";n.value=s.userValue=i,s.formattedValue=null}));var l=function(t){var e=s.formattedValue;null!=e&&(t.target.value=e),t.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){var u;n.addEventListener("focus",(function(t){var e=t.target;s.userValue&&(e.value=s.userValue),s.lastCommittedValue=e.value,s.commitKey=1})),n.addEventListener("updatefromsandbox",(function(n){var i={value:function(t){var n;s.userValue=null!==(n=t.detail.value)&&void 0!==n?n:"",e.setValue(r,{value:s.userValue.toString()}),t.target.value=s.userValue},formattedValue:function(t){var n=t.detail.formattedValue;s.formattedValue=n,null!=n&&t.target!==document.activeElement&&(t.target.value=n),e.setValue(r,{formattedValue:n})},selRange:function(t){var e;(e=t.target).setSelectionRange.apply(e,c(t.detail.selRange))},charLimit:function(n){var i,a=n.detail.charLimit,o=n.target;if(0!==a){o.setAttribute("maxLength",a);var l=s.userValue;!l||l.length<=a||(l=l.slice(0,a),o.value=s.userValue=l,e.setValue(r,{value:l}),null===(i=t.linkService.eventBus)||void 0===i||i.dispatch("dispatcheventinsandbox",{source:t,detail:{id:r,name:"Keystroke",value:l,willCommit:!0,commitKey:1,selStart:o.selectionStart,selEnd:o.selectionEnd}}))}else o.removeAttribute("maxLength")}};t._dispatchEventFromSandbox(i,n)})),n.addEventListener("keydown",(function(e){var n;s.commitKey=1;var i=-1;if("Escape"===e.key?i=0:"Enter"!==e.key||t.data.multiLine?"Tab"===e.key&&(s.commitKey=3):i=2,-1!==i){var a=e.target.value;s.lastCommittedValue!==a&&(s.lastCommittedValue=a,s.userValue=a,null===(n=t.linkService.eventBus)||void 0===n||n.dispatch("dispatcheventinsandbox",{source:t,detail:{id:r,name:"Keystroke",value:a,willCommit:!0,commitKey:i,selStart:e.target.selectionStart,selEnd:e.target.selectionEnd}}))}}));var h=l;l=null,n.addEventListener("blur",(function(e){if(e.relatedTarget){var n,i=e.target.value;s.userValue=i,s.lastCommittedValue!==i&&(null===(n=t.linkService.eventBus)||void 0===n||n.dispatch("dispatcheventinsandbox",{source:t,detail:{id:r,name:"Keystroke",value:i,willCommit:!0,commitKey:s.commitKey,selStart:e.target.selectionStart,selEnd:e.target.selectionEnd}})),h(e)}})),null!==(u=this.data.actions)&&void 0!==u&&u.Keystroke&&n.addEventListener("beforeinput",(function(e){var n;s.lastCommittedValue=null;var i=e.data,a=e.target,o=a.value,l=a.selectionStart,u=a.selectionEnd,c=l,h=u;switch(e.inputType){case"deleteWordBackward":var f=o.substring(0,l).match(/\w*[^\w]*$/);f&&(c-=f[0].length);break;case"deleteWordForward":var d=o.substring(l).match(/^[^\w]*\w*/);d&&(h+=d[0].length);break;case"deleteContentBackward":l===u&&(c-=1);break;case"deleteContentForward":l===u&&(h+=1)}e.preventDefault(),null===(n=t.linkService.eventBus)||void 0===n||n.dispatch("dispatcheventinsandbox",{source:t,detail:{id:r,name:"Keystroke",value:o,change:i||"",willCommit:!1,selStart:c,selEnd:h}})})),this._setEventListeners(n,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(function(t){return t.target.value}))}if(l&&n.addEventListener("blur",l),this.data.comb){var f=(this.data.rect[2]-this.data.rect[0])/o;n.classList.add("comb"),n.style.letterSpacing="calc(".concat(f,"px * var(--scale-factor) - 1ch)")}}else(n=document.createElement("div")).textContent=this.data.fieldValue,n.style.verticalAlign="middle",n.style.display="table-cell";return this._setTextStyle(n),this._setBackgroundColor(n),this._setDefaultPropertiesFromJS(n),this.container.append(n),this.container}}]),r}(G),q=function(t){h(r,t);var e=d(r);function r(t){return k(this,r),e.call(this,t,{isRenderable:t.renderForms})}return x(r,[{key:"render",value:function(){var t=this,e=this.annotationStorage,r=this.data,n=r.id,i=e.getValue(n,{value:r.exportValue===r.fieldValue}).value;"string"==typeof i&&(i="Off"!==i,e.setValue(n,{value:i})),this.container.className="buttonWidgetAnnotation checkBox";var a=document.createElement("input");return T.add(a),a.setAttribute("data-element-id",n),a.disabled=r.readOnly,this._setRequired(a,this.data.required),a.type="checkbox",a.name=r.fieldName,i&&a.setAttribute("checked",!0),a.setAttribute("exportValue",r.exportValue),a.tabIndex=P,a.addEventListener("change",(function(i){var a,o=i.target,s=o.name,l=o.checked,u=g(t._getElementsByName(s,n));try{for(u.s();!(a=u.n()).done;){var c=a.value,h=l&&c.exportValue===r.exportValue;c.domElement&&(c.domElement.checked=h),e.setValue(c.id,{value:h})}}catch(t){u.e(t)}finally{u.f()}e.setValue(n,{value:l})})),a.addEventListener("resetform",(function(t){var e=r.defaultFieldValue||"Off";t.target.checked=e===r.exportValue})),this.enableScripting&&this.hasJSActions&&(a.addEventListener("updatefromsandbox",(function(r){var i={value:function(t){t.target.checked="Off"!==t.detail.value,e.setValue(n,{value:t.target.checked})}};t._dispatchEventFromSandbox(i,r)})),this._setEventListeners(a,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(function(t){return t.target.checked}))),this._setBackgroundColor(a),this._setDefaultPropertiesFromJS(a),this.container.append(a),this.container}}]),r}(G),H=function(t){h(r,t);var e=d(r);function r(t){return k(this,r),e.call(this,t,{isRenderable:t.renderForms})}return x(r,[{key:"render",value:function(){var t=this;this.container.className="buttonWidgetAnnotation radioButton";var e=this.annotationStorage,r=this.data,n=r.id,i=e.getValue(n,{value:r.fieldValue===r.buttonValue}).value;"string"==typeof i&&(i=i!==r.buttonValue,e.setValue(n,{value:i}));var a=document.createElement("input");if(T.add(a),a.setAttribute("data-element-id",n),a.disabled=r.readOnly,this._setRequired(a,this.data.required),a.type="radio",a.name=r.fieldName,i&&a.setAttribute("checked",!0),a.tabIndex=P,a.addEventListener("change",(function(r){var i,a=r.target,o=a.name,s=a.checked,l=g(t._getElementsByName(o,n));try{for(l.s();!(i=l.n()).done;){var u=i.value;e.setValue(u.id,{value:!1})}}catch(t){l.e(t)}finally{l.f()}e.setValue(n,{value:s})})),a.addEventListener("resetform",(function(t){var e=r.defaultFieldValue;t.target.checked=null!=e&&e===r.buttonValue})),this.enableScripting&&this.hasJSActions){var o=r.buttonValue;a.addEventListener("updatefromsandbox",(function(r){var i={value:function(r){var i,a=o===r.detail.value,s=g(t._getElementsByName(r.target.name));try{for(s.s();!(i=s.n()).done;){var l=i.value,u=a&&l.id===n;l.domElement&&(l.domElement.checked=u),e.setValue(l.id,{value:u})}}catch(t){s.e(t)}finally{s.f()}}};t._dispatchEventFromSandbox(i,r)})),this._setEventListeners(a,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(function(t){return t.target.checked}))}return this._setBackgroundColor(a),this._setDefaultPropertiesFromJS(a),this.container.append(a),this.container}}]),r}(G),z=function(t){h(r,t);var e=d(r);function r(t){return k(this,r),e.call(this,t,{ignoreBorder:t.data.hasAppearance})}return x(r,[{key:"render",value:function(){var t=this,e=u(v(r.prototype),"render",this).call(this);e.className="buttonWidgetAnnotation pushButton",this.data.alternativeText&&(e.title=this.data.alternativeText);var n=e.lastChild;return this.enableScripting&&this.hasJSActions&&n&&(this._setDefaultPropertiesFromJS(n),n.addEventListener("updatefromsandbox",(function(e){t._dispatchEventFromSandbox({},e)}))),e}}]),r}(I),V=function(t){h(r,t);var e=d(r);function r(t){return k(this,r),e.call(this,t,{isRenderable:t.renderForms})}return x(r,[{key:"render",value:function(){var t=this;this.container.className="choiceWidgetAnnotation";var e=this.annotationStorage,r=this.data.id,n=e.getValue(r,{value:this.data.fieldValue}),i=document.createElement("select");T.add(i),i.setAttribute("data-element-id",r),i.disabled=this.data.readOnly,this._setRequired(i,this.data.required),i.name=this.data.fieldName,i.tabIndex=P;var a=this.data.combo&&this.data.options.length>0;this.data.combo||(i.size=this.data.options.length,this.data.multiSelect&&(i.multiple=!0)),i.addEventListener("resetform",(function(e){var r,n=t.data.defaultFieldValue,a=g(i.options);try{for(a.s();!(r=a.n()).done;){var o=r.value;o.selected=o.value===n}}catch(t){a.e(t)}finally{a.f()}}));var o,s=g(this.data.options);try{for(s.s();!(o=s.n()).done;){var l=o.value,u=document.createElement("option");u.textContent=l.displayValue,u.value=l.exportValue,n.value.includes(l.exportValue)&&(u.setAttribute("selected",!0),a=!1),i.append(u)}}catch(t){s.e(t)}finally{s.f()}var c=null;if(a){var h=document.createElement("option");h.value=" ",h.setAttribute("hidden",!0),h.setAttribute("selected",!0),i.prepend(h),c=function(){h.remove(),i.removeEventListener("input",c),c=null},i.addEventListener("input",c)}var f=function(t){var e=t?"value":"textContent",r=i.options;return i.multiple?Array.prototype.filter.call(r,(function(t){return t.selected})).map((function(t){return t[e]})):-1===r.selectedIndex?null:r[r.selectedIndex][e]},d=f(!1),p=function(t){var e=t.target.options;return Array.prototype.map.call(e,(function(t){return{displayValue:t.textContent,exportValue:t.value}}))};return this.enableScripting&&this.hasJSActions?(i.addEventListener("updatefromsandbox",(function(n){var a={value:function(t){var n;null===(n=c)||void 0===n||n();var a,o=t.detail.value,s=new Set(Array.isArray(o)?o:[o]),l=g(i.options);try{for(l.s();!(a=l.n()).done;){var u=a.value;u.selected=s.has(u.value)}}catch(t){l.e(t)}finally{l.f()}e.setValue(r,{value:f(!0)}),d=f(!1)},multipleSelection:function(t){i.multiple=!0},remove:function(t){var n=i.options,a=t.detail.remove;if(n[a].selected=!1,i.remove(a),n.length>0){var o=Array.prototype.findIndex.call(n,(function(t){return t.selected}));-1===o&&(n[0].selected=!0)}e.setValue(r,{value:f(!0),items:p(t)}),d=f(!1)},clear:function(t){for(;0!==i.length;)i.remove(0);e.setValue(r,{value:null,items:[]}),d=f(!1)},insert:function(t){var n=t.detail.insert,a=n.index,o=n.displayValue,s=n.exportValue,l=i.children[a],u=document.createElement("option");u.textContent=o,u.value=s,l?l.before(u):i.append(u),e.setValue(r,{value:f(!0),items:p(t)}),d=f(!1)},items:function(t){for(var n=t.detail.items;0!==i.length;)i.remove(0);var a,o=g(n);try{for(o.s();!(a=o.n()).done;){var s=a.value,l=s.displayValue,u=s.exportValue,c=document.createElement("option");c.textContent=l,c.value=u,i.append(c)}}catch(t){o.e(t)}finally{o.f()}i.options.length>0&&(i.options[0].selected=!0),e.setValue(r,{value:f(!0),items:p(t)}),d=f(!1)},indices:function(t){var n,i=new Set(t.detail.indices),a=g(t.target.options);try{for(a.s();!(n=a.n()).done;){var o=n.value;o.selected=i.has(o.index)}}catch(t){a.e(t)}finally{a.f()}e.setValue(r,{value:f(!0)}),d=f(!1)},editable:function(t){t.target.disabled=!t.detail.editable}};t._dispatchEventFromSandbox(a,n)})),i.addEventListener("input",(function(n){var i,a=f(!0);e.setValue(r,{value:a}),n.preventDefault(),null===(i=t.linkService.eventBus)||void 0===i||i.dispatch("dispatcheventinsandbox",{source:t,detail:{id:r,name:"Keystroke",value:d,changeEx:a,willCommit:!1,commitKey:1,keyDown:!1}})})),this._setEventListeners(i,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"]],(function(t){return t.target.checked}))):i.addEventListener("input",(function(t){e.setValue(r,{value:f(!0)})})),this.data.combo&&this._setTextStyle(i),this._setBackgroundColor(i),this._setDefaultPropertiesFromJS(i),this.container.append(i),this.container}}]),r}(G),X=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=t.data,s=!r.IGNORE_TYPES.has(o.parentType)&&!!(null!==(n=o.titleObj)&&void 0!==n&&n.str||null!==(i=o.contentsObj)&&void 0!==i&&i.str||null!==(a=o.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:s})}return x(r,[{key:"render",value:function(){this.container.className="popupAnnotation";var t=this.layer.querySelectorAll('[data-annotation-id="'.concat(this.data.parentId,'"]'));if(0===t.length)return this.container;var e=new Y({container:this.container,trigger:Array.from(t),color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText}),r=this.page,i=n.Util.normalizeRect([this.data.parentRect[0],r.view[3]-this.data.parentRect[1]+r.view[1],this.data.parentRect[2],r.view[3]-this.data.parentRect[3]+r.view[1]]),a=i[0]+this.data.parentRect[2]-this.data.parentRect[0],o=i[1],s=this.viewport.rawDims,l=s.pageWidth,u=s.pageHeight,c=s.pageX,h=s.pageY;return this.container.style.left="".concat(100*(a-c)/l,"%"),this.container.style.top="".concat(100*(o-h)/u,"%"),this.container.append(e.render()),this.container}}]),r}(F);D=X,N="IGNORE_TYPES",U=new Set(["Line","Square","Circle","PolyLine","Polygon","Ink"]),(N=E(N))in D?Object.defineProperty(D,N,{value:U,enumerable:!0,configurable:!0,writable:!0}):D[N]=U;var Y=function(){function t(e){k(this,t),this.container=e.container,this.trigger=e.trigger,this.color=e.color,this.titleObj=e.titleObj,this.modificationDate=e.modificationDate,this.contentsObj=e.contentsObj,this.richText=e.richText,this.hideWrapper=e.hideWrapper||!1,this.pinned=!1}return x(t,[{key:"render",value:function(){var t,e,r=document.createElement("div");r.className="popupWrapper",this.hideElement=this.hideWrapper?r:this.container,this.hideElement.hidden=!0;var a=document.createElement("div");a.className="popup";var o=this.color;if(o){var l=.7*(255-o[0])+o[0],u=.7*(255-o[1])+o[1],c=.7*(255-o[2])+o[2];a.style.backgroundColor=n.Util.makeHexColor(0|l,0|u,0|c)}var h=document.createElement("h1");h.dir=this.titleObj.dir,h.textContent=this.titleObj.str,a.append(h);var f=i.PDFDateString.toDateObject(this.modificationDate);if(f){var d=document.createElement("span");d.className="popupDate",d.textContent="{{date}}, {{time}}",d.dataset.l10nId="annotation_date_string",d.dataset.l10nArgs=JSON.stringify({date:f.toLocaleDateString(),time:f.toLocaleTimeString()}),a.append(d)}if(null===(t=this.richText)||void 0===t||!t.str||null!==(e=this.contentsObj)&&void 0!==e&&e.str&&this.contentsObj.str!==this.richText.str){var p=this._formatContents(this.contentsObj);a.append(p)}else s.XfaLayer.render({xfaHtml:this.richText.html,intent:"richText",div:a}),a.lastChild.className="richText popupContent";Array.isArray(this.trigger)||(this.trigger=[this.trigger]);var v,y=g(this.trigger);try{for(y.s();!(v=y.n()).done;){var m=v.value;m.addEventListener("click",this._toggle.bind(this)),m.addEventListener("mouseover",this._show.bind(this,!1)),m.addEventListener("mouseout",this._hide.bind(this,!1))}}catch(t){y.e(t)}finally{y.f()}return a.addEventListener("click",this._hide.bind(this,!0)),r.append(a),r}},{key:"_formatContents",value:function(t){var e=t.str,r=t.dir,n=document.createElement("p");n.className="popupContent",n.dir=r;for(var i=e.split(/(?:\r\n?|\n)/),a=0,o=i.length;a<o;++a){var s=i[a];n.append(document.createTextNode(s)),a<o-1&&n.append(document.createElement("br"))}return n}},{key:"_toggle",value:function(){this.pinned?this._hide(!0):this._show(!0)}},{key:"_show",value:function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&(this.pinned=!0),this.hideElement.hidden&&(this.hideElement.hidden=!1,this.container.style.zIndex=parseInt(this.container.style.zIndex)+1e3)}},{key:"_hide",value:function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&(this.pinned=!1),this.hideElement.hidden||this.pinned||(this.hideElement.hidden=!0,this.container.style.zIndex=parseInt(this.container.style.zIndex)-1e3)}}]),t}(),K=function(t){h(r,t);var e=d(r);function r(t){var n,i,a,o;k(this,r);var s=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return(o=e.call(this,t,{isRenderable:s,ignoreBorder:!0})).textContent=t.data.textContent,o}return x(r,[{key:"render",value:function(){if(this.container.className="freeTextAnnotation",this.textContent){var t=document.createElement("div");t.className="annotationTextContent",t.setAttribute("role","comment");var e,r=g(this.textContent);try{for(r.s();!(e=r.n()).done;){var n=e.value,i=document.createElement("span");i.textContent=n,t.append(i)}}catch(t){r.e(t)}finally{r.f()}this.container.append(t)}return this.data.hasPopup||this._createPopup(null,this.data),this.container}}]),r}(F),J=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0})}return x(r,[{key:"render",value:function(){this.container.className="lineAnnotation";var t=this.data,e=C(t.rect),r=e.width,n=e.height,i=this.svgFactory.create(r,n,!0),a=this.svgFactory.createElement("svg:line");return a.setAttribute("x1",t.rect[2]-t.lineCoordinates[0]),a.setAttribute("y1",t.rect[3]-t.lineCoordinates[1]),a.setAttribute("x2",t.rect[2]-t.lineCoordinates[2]),a.setAttribute("y2",t.rect[3]-t.lineCoordinates[3]),a.setAttribute("stroke-width",t.borderStyle.width||1),a.setAttribute("stroke","transparent"),a.setAttribute("fill","transparent"),i.append(a),this.container.append(i),this._createPopup(a,t),this.container}}]),r}(F),Q=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0})}return x(r,[{key:"render",value:function(){this.container.className="squareAnnotation";var t=this.data,e=C(t.rect),r=e.width,n=e.height,i=this.svgFactory.create(r,n,!0),a=t.borderStyle.width,o=this.svgFactory.createElement("svg:rect");return o.setAttribute("x",a/2),o.setAttribute("y",a/2),o.setAttribute("width",r-a),o.setAttribute("height",n-a),o.setAttribute("stroke-width",a||1),o.setAttribute("stroke","transparent"),o.setAttribute("fill","transparent"),i.append(o),this.container.append(i),this._createPopup(o,t),this.container}}]),r}(F),$=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0})}return x(r,[{key:"render",value:function(){this.container.className="circleAnnotation";var t=this.data,e=C(t.rect),r=e.width,n=e.height,i=this.svgFactory.create(r,n,!0),a=t.borderStyle.width,o=this.svgFactory.createElement("svg:ellipse");return o.setAttribute("cx",r/2),o.setAttribute("cy",n/2),o.setAttribute("rx",r/2-a/2),o.setAttribute("ry",n/2-a/2),o.setAttribute("stroke-width",a||1),o.setAttribute("stroke","transparent"),o.setAttribute("fill","transparent"),i.append(o),this.container.append(i),this._createPopup(o,t),this.container}}]),r}(F),Z=function(t){h(r,t);var e=d(r);function r(t){var n,i,a,o;k(this,r);var s=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return(o=e.call(this,t,{isRenderable:s,ignoreBorder:!0})).containerClassName="polylineAnnotation",o.svgElementName="svg:polyline",o}return x(r,[{key:"render",value:function(){this.container.className=this.containerClassName;var t,e=this.data,r=C(e.rect),n=r.width,i=r.height,a=this.svgFactory.create(n,i,!0),o=[],s=g(e.vertices);try{for(s.s();!(t=s.n()).done;){var l=t.value,u=l.x-e.rect[0],c=e.rect[3]-l.y;o.push(u+","+c)}}catch(t){s.e(t)}finally{s.f()}o=o.join(" ");var h=this.svgFactory.createElement(this.svgElementName);return h.setAttribute("points",o),h.setAttribute("stroke-width",e.borderStyle.width||1),h.setAttribute("stroke","transparent"),h.setAttribute("fill","transparent"),a.append(h),this.container.append(a),this._createPopup(h,e),this.container}}]),r}(F),tt=function(t){h(r,t);var e=d(r);function r(t){var n;return k(this,r),(n=e.call(this,t)).containerClassName="polygonAnnotation",n.svgElementName="svg:polygon",n}return x(r)}(Z),et=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0})}return x(r,[{key:"render",value:function(){return this.container.className="caretAnnotation",this.data.hasPopup||this._createPopup(null,this.data),this.container}}]),r}(F),rt=function(t){h(r,t);var e=d(r);function r(t){var n,i,a,o;k(this,r);var s=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return(o=e.call(this,t,{isRenderable:s,ignoreBorder:!0})).containerClassName="inkAnnotation",o.svgElementName="svg:polyline",o}return x(r,[{key:"render",value:function(){this.container.className=this.containerClassName;var t,e=this.data,r=C(e.rect),n=r.width,i=r.height,a=this.svgFactory.create(n,i,!0),o=g(e.inkLists);try{for(o.s();!(t=o.n()).done;){var s,l=t.value,u=[],c=g(l);try{for(c.s();!(s=c.n()).done;){var h=s.value,f=h.x-e.rect[0],d=e.rect[3]-h.y;u.push("".concat(f,",").concat(d))}}catch(t){c.e(t)}finally{c.f()}u=u.join(" ");var p=this.svgFactory.createElement(this.svgElementName);p.setAttribute("points",u),p.setAttribute("stroke-width",e.borderStyle.width||1),p.setAttribute("stroke","transparent"),p.setAttribute("fill","transparent"),this._createPopup(p,e),a.append(p)}}catch(t){o.e(t)}finally{o.f()}return this.container.append(a),this.container}}]),r}(F),nt=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0,createQuadrilaterals:!0})}return x(r,[{key:"render",value:function(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("highlightAnnotation"):(this.container.className="highlightAnnotation",this.container)}}]),r}(F),it=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0,createQuadrilaterals:!0})}return x(r,[{key:"render",value:function(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("underlineAnnotation"):(this.container.className="underlineAnnotation",this.container)}}]),r}(F),at=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0,createQuadrilaterals:!0})}return x(r,[{key:"render",value:function(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("squigglyAnnotation"):(this.container.className="squigglyAnnotation",this.container)}}]),r}(F),ot=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0,createQuadrilaterals:!0})}return x(r,[{key:"render",value:function(){return this.data.hasPopup||this._createPopup(null,this.data),this.quadrilaterals?this._renderQuadrilaterals("strikeoutAnnotation"):(this.container.className="strikeoutAnnotation",this.container)}}]),r}(F),st=function(t){h(r,t);var e=d(r);function r(t){var n,i,a;k(this,r);var o=!!(t.data.hasPopup||null!==(n=t.data.titleObj)&&void 0!==n&&n.str||null!==(i=t.data.contentsObj)&&void 0!==i&&i.str||null!==(a=t.data.richText)&&void 0!==a&&a.str);return e.call(this,t,{isRenderable:o,ignoreBorder:!0})}return x(r,[{key:"render",value:function(){return this.container.className="stampAnnotation",this.data.hasPopup||this._createPopup(null,this.data),this.container}}]),r}(F),lt=function(t){h(r,t);var e=d(r);function r(t){var n,a;k(this,r);var o=(a=e.call(this,t,{isRenderable:!0})).data.file,s=o.filename,l=o.content;return a.filename=(0,i.getFilenameFromUrl)(s,!0),a.content=l,null===(n=a.linkService.eventBus)||void 0===n||n.dispatch("fileattachmentannotation",{source:p(a),filename:s,content:l}),a}return x(r,[{key:"render",value:function(){var t,e,r;return this.container.className="fileAttachmentAnnotation",this.data.hasAppearance?r=document.createElement("div"):(r=document.createElement("img")).src="".concat(this.imageResourcesPath,"annotation-").concat(/paperclip/i.test(this.data.name)?"paperclip":"pushpin",".svg"),r.className="popupTriggerArea",r.addEventListener("dblclick",this._download.bind(this)),!this.data.hasPopup&&(null!==(t=this.data.titleObj)&&void 0!==t&&t.str||null!==(e=this.data.contentsObj)&&void 0!==e&&e.str||this.data.richText)&&this._createPopup(r,this.data),this.container.append(r),this.container}},{key:"_download",value:function(){var t;null===(t=this.downloadManager)||void 0===t||t.openOrDownloadData(this.container,this.content,this.filename)}}]),r}(F),ut=function(){function t(){k(this,t)}return x(t,null,[{key:"render",value:function(e){var r=e.annotations,o=e.div,s=e.viewport,u=e.accessibilityManager;(0,i.setLayerDimensions)(o,s);var c,h={data:null,layer:o,page:e.page,viewport:s,linkService:e.linkService,downloadManager:e.downloadManager,imageResourcesPath:e.imageResourcesPath||"",renderForms:!1!==e.renderForms,svgFactory:new i.DOMSVGFactory,annotationStorage:e.annotationStorage||new a.AnnotationStorage,enableScripting:!0===e.enableScripting,hasJSActions:e.hasJSActions,fieldObjects:e.fieldObjects},f=0,d=g(r);try{for(d.s();!(c=d.n()).done;){var p=c.value;if(p.annotationType!==n.AnnotationType.POPUP){var v=C(p.rect),y=v.width,m=v.height;if(y<=0||m<=0)continue}h.data=p;var b=O.create(h);if(b.isRenderable){var _=b.render();if(p.hidden&&(_.style.visibility="hidden"),Array.isArray(_)){var w,A=g(_);try{for(A.s();!(w=A.n()).done;){var k=w.value;k.style.zIndex=f++,l(t,t,ct).call(t,k,p.id,o,u)}}catch(t){A.e(t)}finally{A.f()}}else _.style.zIndex=f++,b instanceof X?o.prepend(_):l(t,t,ct).call(t,_,p.id,o,u)}}}catch(t){d.e(t)}finally{d.f()}l(this,t,ht).call(this,o,e.annotationCanvasMap)}},{key:"update",value:function(e){var r=e.annotationCanvasMap,n=e.div,a=e.viewport;(0,i.setLayerDimensions)(n,{rotation:a.rotation}),l(this,t,ht).call(this,n,r),n.hidden=!1}}]),t}();function ct(t,e,r,n){var a=t.firstChild||t;a.id="".concat(i.AnnotationPrefix).concat(e),r.append(t),null==n||n.moveElementInDOM(r,t,a,!1)}function ht(t,e){if(e){var r,n=g(e);try{for(n.s();!(r=n.n()).done;){var i=b(r.value,2),a=i[0],o=i[1],s=t.querySelector('[data-annotation-id="'.concat(a,'"]'));if(s){var l=s.firstChild;l?"CANVAS"===l.nodeName?l.replaceWith(o):l.before(o):s.append(o)}}}catch(t){n.e(t)}finally{n.f()}e.clear()}}e.AnnotationLayer=ut},(t,e)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function a(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,"string");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===r(a)?a:String(a)),i)}var a}function o(t){return Math.floor(255*Math.max(0,Math.min(1,t))).toString(16).padStart(2,"0")}Object.defineProperty(e,"__esModule",{value:!0}),e.ColorConverters=void 0;var s=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,r=[{key:"CMYK_G",value:function(t){var e=n(t,4),r=e[0],i=e[1],a=e[2],o=e[3];return["G",1-Math.min(1,.3*r+.59*a+.11*i+o)]}},{key:"G_CMYK",value:function(t){return["CMYK",0,0,0,1-n(t,1)[0]]}},{key:"G_RGB",value:function(t){var e=n(t,1)[0];return["RGB",e,e,e]}},{key:"G_HTML",value:function(t){var e=o(n(t,1)[0]);return"#".concat(e).concat(e).concat(e)}},{key:"RGB_G",value:function(t){var e=n(t,3);return["G",.3*e[0]+.59*e[1]+.11*e[2]]}},{key:"RGB_HTML",value:function(t){var e=n(t,3),r=e[0],i=e[1],a=e[2],s=o(r),l=o(i),u=o(a);return"#".concat(s).concat(l).concat(u)}},{key:"T_HTML",value:function(){return"#00000000"}},{key:"CMYK_RGB",value:function(t){var e=n(t,4),r=e[0],i=e[1],a=e[2],o=e[3];return["RGB",1-Math.min(1,r+o),1-Math.min(1,a+o),1-Math.min(1,i+o)]}},{key:"CMYK_HTML",value:function(t){var e=this.CMYK_RGB(t).slice(1);return this.RGB_HTML(e)}},{key:"RGB_CMYK",value:function(t){var e=n(t,3),r=1-e[0],i=1-e[1],a=1-e[2];return["CMYK",r,i,a,Math.min(r,i,a)]}}],null&&a(e.prototype,null),r&&a(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.ColorConverters=s},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.XfaLayer=void 0;var n=r(149);function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||s(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=s(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){l=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(l)throw a}}}}function s(t,e){if(t){if("string"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(t,e):void 0}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function u(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==i(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===i(a)?a:String(a)),n)}var a}var c=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,r=[{key:"setupStorage",value:function(t,e,r,n,i){var a=n.getValue(e,{value:null});switch(r.name){case"textarea":if(null!==a.value&&(t.textContent=a.value),"print"===i)break;t.addEventListener("input",(function(t){n.setValue(e,{value:t.target.value})}));break;case"input":if("radio"===r.attributes.type||"checkbox"===r.attributes.type){if(a.value===r.attributes.xfaOn?t.setAttribute("checked",!0):a.value===r.attributes.xfaOff&&t.removeAttribute("checked"),"print"===i)break;t.addEventListener("change",(function(t){n.setValue(e,{value:t.target.checked?t.target.getAttribute("xfaOn"):t.target.getAttribute("xfaOff")})}))}else{if(null!==a.value&&t.setAttribute("value",a.value),"print"===i)break;t.addEventListener("input",(function(t){n.setValue(e,{value:t.target.value})}))}break;case"select":if(null!==a.value){var s,l=o(r.children);try{for(l.s();!(s=l.n()).done;){var u=s.value;u.attributes.value===a.value&&(u.attributes.selected=!0)}}catch(t){l.e(t)}finally{l.f()}}t.addEventListener("input",(function(t){var r=t.target.options,i=-1===r.selectedIndex?"":r[r.selectedIndex].value;n.setValue(e,{value:i})}))}}},{key:"setAttributes",value:function(t){var e=t.html,r=t.element,n=t.storage,i=void 0===n?null:n,o=t.intent,s=t.linkService,l=r.attributes,u=e instanceof HTMLAnchorElement;"radio"===l.type&&(l.name="".concat(l.name,"-").concat(o));for(var c=0,h=Object.entries(l);c<h.length;c++){var f=a(h[c],2),d=f[0],p=f[1];if(null!=p)switch(d){case"class":p.length&&e.setAttribute(d,p.join(" "));break;case"dataId":break;case"id":e.setAttribute("data-element-id",p);break;case"style":Object.assign(e.style,p);break;case"textContent":e.textContent=p;break;default:(!u||"href"!==d&&"newWindow"!==d)&&e.setAttribute(d,p)}}u&&s.addLinkAttributes(e,l.href,l.newWindow),i&&l.dataId&&this.setupStorage(e,l.dataId,r,i)}},{key:"render",value:function(t){var e=t.annotationStorage,r=t.linkService,i=t.xfaHtml,s=t.intent||"display",l=document.createElement(i.name);i.attributes&&this.setAttributes({html:l,element:i,intent:s,linkService:r});var u=[[i,-1,l]],c=t.div;if(c.append(l),t.viewport){var h="matrix(".concat(t.viewport.transform.join(","),")");c.style.transform=h}"richText"!==s&&c.setAttribute("class","xfaLayer xfaFont");for(var f=[];u.length>0;){var d,p,v=a(u.at(-1),3),y=v[0],m=v[1],g=v[2];if(m+1!==y.children.length){var b=y.children[++u.at(-1)[1]];if(null!==b){var _=b.name;if("#text"!==_){var w=void 0;if(w=null!==(d=b)&&void 0!==d&&null!==(p=d.attributes)&&void 0!==p&&p.xmlns?document.createElementNS(b.attributes.xmlns,_):document.createElement(_),g.append(w),b.attributes&&this.setAttributes({html:w,element:b,storage:e,intent:s,linkService:r}),b.children&&b.children.length>0)u.push([b,-1,w]);else if(b.value){var A=document.createTextNode(b.value);n.XfaText.shouldBuildText(_)&&f.push(A),w.append(A)}}else{var k=document.createTextNode(b.value);f.push(k),g.append(k)}}}else u.pop()}var S,x=o(c.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"));try{for(x.s();!(S=x.n()).done;)S.value.setAttribute("readOnly",!0)}catch(t){x.e(t)}finally{x.f()}return{textDivs:f}}},{key:"update",value:function(t){var e="matrix(".concat(t.viewport.transform.join(","),")");t.div.style.transform=e,t.div.hidden=!1}}],null&&u(e.prototype,null),r&&u(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();e.XfaLayer=c},(t,e,r)=>{function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.SVGGraphics=void 0;var i=r(137),a=r(1),o=r(3);function s(t){return function(t){if(Array.isArray(t))return h(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||c(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||c(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=c(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function c(t,e){if(t){if("string"==typeof t)return h(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?h(t,e):void 0}}function h(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function f(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,(void 0,a=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,"string");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(i.key),"symbol"===n(a)?a:String(a)),i)}var a}function d(t,e,r){return e&&f(t.prototype,e),r&&f(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var v=d((function t(){p(this,t),(0,a.unreachable)("Not implemented: SVGGraphics")}));e.SVGGraphics=v;var y=function(t){if(Number.isInteger(t))return t.toString();var e=t.toFixed(10),r=e.length-1;if("0"!==e[r])return e;do{r--}while("0"===e[r]);return e.substring(0,"."===e[r]?r:r+1)},m=function(t){if(0===t[4]&&0===t[5]){if(0===t[1]&&0===t[2])return 1===t[0]&&1===t[3]?"":"scale(".concat(y(t[0])," ").concat(y(t[3]),")");if(t[0]===t[3]&&t[1]===-t[2]){var e=180*Math.acos(t[0])/Math.PI;return"rotate(".concat(y(e),")")}}else if(1===t[0]&&0===t[1]&&0===t[2]&&1===t[3])return"translate(".concat(y(t[4])," ").concat(y(t[5]),")");return"matrix(".concat(y(t[0])," ").concat(y(t[1])," ").concat(y(t[2])," ").concat(y(t[3])," ").concat(y(t[4])," ")+"".concat(y(t[5]),")")},g="normal",b="normal",_="#000000",w=["butt","round","square"],A=["miter","round","bevel"],k=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(URL.createObjectURL&&"undefined"!=typeof Blob&&!r)return URL.createObjectURL(new Blob([t],{type:e}));for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",i="data:".concat(e,";base64,"),a=0,o=t.length;a<o;a+=3){var s=255&t[a],l=255&t[a+1],u=255&t[a+2];i+=n[s>>2]+n[(3&s)<<4|l>>4]+n[a+1<o?(15&l)<<2|u>>6:64]+n[a+2<o?63&u:64]}return i},S=function(){for(var t=new Uint8Array([137,80,78,71,13,10,26,10]),e=new Int32Array(256),r=0;r<256;r++){for(var n=r,i=0;i<8;i++)n=1&n?3988292384^n>>1&2147483647:n>>1&2147483647;e[r]=n}function s(t,r,n,i){var a=i,o=r.length;n[a]=o>>24&255,n[a+1]=o>>16&255,n[a+2]=o>>8&255,n[a+3]=255&o,n[a+=4]=255&t.charCodeAt(0),n[a+1]=255&t.charCodeAt(1),n[a+2]=255&t.charCodeAt(2),n[a+3]=255&t.charCodeAt(3),a+=4,n.set(r,a);var s=function(t,r,n){for(var i=-1,a=r;a<n;a++){var o=255&(i^t[a]);i=i>>>8^e[o]}return-1^i}(n,i+4,a+=r.length);n[a]=s>>24&255,n[a+1]=s>>16&255,n[a+2]=s>>8&255,n[a+3]=255&s}function l(t){var e=t.length,r=65535,n=Math.ceil(e/r),i=new Uint8Array(2+e+5*n+4),a=0;i[a++]=120,i[a++]=156;for(var o=0;e>r;)i[a++]=0,i[a++]=255,i[a++]=255,i[a++]=0,i[a++]=0,i.set(t.subarray(o,o+r),a),a+=r,o+=r,e-=r;i[a++]=1,i[a++]=255&e,i[a++]=e>>8&255,i[a++]=255&~e,i[a++]=(65535&~e)>>8&255,i.set(t.subarray(o),a),a+=t.length-o;var s=function(t,e,r){for(var n=1,i=0,a=0;a<r;++a)i=(i+(n=(n+(255&t[a]))%65521))%65521;return i<<16|n}(t,0,t.length);return i[a++]=s>>24&255,i[a++]=s>>16&255,i[a++]=s>>8&255,i[a++]=255&s,i}return function(e,r,n){return function(e,r,n,i){var u,c,h,f=e.width,d=e.height,p=e.data;switch(r){case a.ImageKind.GRAYSCALE_1BPP:c=0,u=1,h=f+7>>3;break;case a.ImageKind.RGB_24BPP:c=2,u=8,h=3*f;break;case a.ImageKind.RGBA_32BPP:c=6,u=8,h=4*f;break;default:throw new Error("invalid format")}for(var v=new Uint8Array((1+h)*d),y=0,m=0,g=0;g<d;++g)v[y++]=0,v.set(p.subarray(m,m+h),y),m+=h,y+=h;if(r===a.ImageKind.GRAYSCALE_1BPP&&i){y=0;for(var b=0;b<d;b++){y++;for(var _=0;_<h;_++)v[y++]^=255}}var w=new Uint8Array([f>>24&255,f>>16&255,f>>8&255,255&f,d>>24&255,d>>16&255,d>>8&255,255&d,u,c,0,0,0]),A=function(t){if(!o.isNodeJS)return l(t);try{var e;e=parseInt(process.versions.node)>=8?t:Buffer.from(t);var r=require("zlib").deflateSync(e,{level:9});return r instanceof Uint8Array?r:new Uint8Array(r)}catch(t){(0,a.warn)("Not compressing PNG because zlib.deflateSync is unavailable: "+t)}return l(t)}(v),S=t.length+36+w.length+A.length,x=new Uint8Array(S),E=0;return x.set(t,E),s("IHDR",w,x,E+=t.length),s("IDATA",A,x,E+=12+w.length),E+=12+A.length,s("IEND",new Uint8Array(0),x,E),k(x,"image/png",n)}(e,void 0===e.kind?a.ImageKind.GRAYSCALE_1BPP:e.kind,r,n)}}(),x=function(){function t(){p(this,t),this.fontSizeScale=1,this.fontWeight=b,this.fontSize=0,this.textMatrix=a.IDENTITY_MATRIX,this.fontMatrix=a.FONT_IDENTITY_MATRIX,this.leading=0,this.textRenderingMode=a.TextRenderingMode.FILL,this.textMatrixScale=1,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRise=0,this.fillColor=_,this.strokeColor="#000000",this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.lineJoin="",this.lineCap="",this.miterLimit=0,this.dashArray=[],this.dashPhase=0,this.dependencies=[],this.activeClipUrl=null,this.clipGroup=null,this.maskId=""}return d(t,[{key:"clone",value:function(){return Object.create(this)}},{key:"setCurrentPoint",value:function(t,e){this.x=t,this.y=e}}]),t}(),E=0,P=0,T=0;e.SVGGraphics=v=function(){function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(var o in p(this,t),(0,i.deprecated)("The SVG back-end is no longer maintained and *may* be removed in the future."),this.svgFactory=new i.DOMSVGFactory,this.current=new x,this.transformMatrix=a.IDENTITY_MATRIX,this.transformStack=[],this.extraStack=[],this.commonObjs=e,this.objs=r,this.pendingClip=null,this.pendingEOFill=!1,this.embedFonts=!1,this.embeddedFonts=Object.create(null),this.cssStyle=null,this.forceDataSchema=!!n,this._operatorIdMapping=[],a.OPS)this._operatorIdMapping[a.OPS[o]]=o}return d(t,[{key:"getObject",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return"string"==typeof t?t.startsWith("g_")?this.commonObjs.get(t):this.objs.get(t):e}},{key:"save",value:function(){this.transformStack.push(this.transformMatrix);var t=this.current;this.extraStack.push(t),this.current=t.clone()}},{key:"restore",value:function(){this.transformMatrix=this.transformStack.pop(),this.current=this.extraStack.pop(),this.pendingClip=null,this.tgrp=null}},{key:"group",value:function(t){this.save(),this.executeOpTree(t),this.restore()}},{key:"loadDependencies",value:function(t){for(var e=this,r=t.fnArray,n=t.argsArray,i=0,o=r.length;i<o;i++)if(r[i]===a.OPS.dependency){var s,l=u(n[i]);try{var c=function(){var t=s.value,r=t.startsWith("g_")?e.commonObjs:e.objs,n=new Promise((function(e){r.get(t,e)}));e.current.dependencies.push(n)};for(l.s();!(s=l.n()).done;)c()}catch(t){l.e(t)}finally{l.f()}}return Promise.all(this.current.dependencies)}},{key:"transform",value:function(t,e,r,n,i,o){var s=[t,e,r,n,i,o];this.transformMatrix=a.Util.transform(this.transformMatrix,s),this.tgrp=null}},{key:"getSVG",value:function(t,e){var r=this;this.viewport=e;var n=this._initialize(e);return this.loadDependencies(t).then((function(){return r.transformMatrix=a.IDENTITY_MATRIX,r.executeOpTree(r.convertOpList(t)),n}))}},{key:"convertOpList",value:function(t){for(var e=this._operatorIdMapping,r=t.argsArray,n=t.fnArray,i=[],a=0,o=n.length;a<o;a++){var s=n[a];i.push({fnId:s,fn:e[s],args:r[a]})}return function(t){var e,r=[],n=[],i=u(t);try{for(i.s();!(e=i.n()).done;){var a=e.value;"save"!==a.fn?"restore"===a.fn?r=n.pop():r.push(a):(r.push({fnId:92,fn:"group",items:[]}),n.push(r),r=r.at(-1).items)}}catch(t){i.e(t)}finally{i.f()}return r}(i)}},{key:"executeOpTree",value:function(t){var e,r=u(t);try{for(r.s();!(e=r.n()).done;){var n=e.value,i=n.fn,o=n.fnId,s=n.args;switch(0|o){case a.OPS.beginText:this.beginText();break;case a.OPS.dependency:break;case a.OPS.setLeading:this.setLeading(s);break;case a.OPS.setLeadingMoveText:this.setLeadingMoveText(s[0],s[1]);break;case a.OPS.setFont:this.setFont(s);break;case a.OPS.showText:case a.OPS.showSpacedText:this.showText(s[0]);break;case a.OPS.endText:this.endText();break;case a.OPS.moveText:this.moveText(s[0],s[1]);break;case a.OPS.setCharSpacing:this.setCharSpacing(s[0]);break;case a.OPS.setWordSpacing:this.setWordSpacing(s[0]);break;case a.OPS.setHScale:this.setHScale(s[0]);break;case a.OPS.setTextMatrix:this.setTextMatrix(s[0],s[1],s[2],s[3],s[4],s[5]);break;case a.OPS.setTextRise:this.setTextRise(s[0]);break;case a.OPS.setTextRenderingMode:this.setTextRenderingMode(s[0]);break;case a.OPS.setLineWidth:this.setLineWidth(s[0]);break;case a.OPS.setLineJoin:this.setLineJoin(s[0]);break;case a.OPS.setLineCap:this.setLineCap(s[0]);break;case a.OPS.setMiterLimit:this.setMiterLimit(s[0]);break;case a.OPS.setFillRGBColor:this.setFillRGBColor(s[0],s[1],s[2]);break;case a.OPS.setStrokeRGBColor:this.setStrokeRGBColor(s[0],s[1],s[2]);break;case a.OPS.setStrokeColorN:this.setStrokeColorN(s);break;case a.OPS.setFillColorN:this.setFillColorN(s);break;case a.OPS.shadingFill:this.shadingFill(s[0]);break;case a.OPS.setDash:this.setDash(s[0],s[1]);break;case a.OPS.setRenderingIntent:this.setRenderingIntent(s[0]);break;case a.OPS.setFlatness:this.setFlatness(s[0]);break;case a.OPS.setGState:this.setGState(s[0]);break;case a.OPS.fill:this.fill();break;case a.OPS.eoFill:this.eoFill();break;case a.OPS.stroke:this.stroke();break;case a.OPS.fillStroke:this.fillStroke();break;case a.OPS.eoFillStroke:this.eoFillStroke();break;case a.OPS.clip:this.clip("nonzero");break;case a.OPS.eoClip:this.clip("evenodd");break;case a.OPS.paintSolidColorImageMask:this.paintSolidColorImageMask();break;case a.OPS.paintImageXObject:this.paintImageXObject(s[0]);break;case a.OPS.paintInlineImageXObject:this.paintInlineImageXObject(s[0]);break;case a.OPS.paintImageMaskXObject:this.paintImageMaskXObject(s[0]);break;case a.OPS.paintFormXObjectBegin:this.paintFormXObjectBegin(s[0],s[1]);break;case a.OPS.paintFormXObjectEnd:this.paintFormXObjectEnd();break;case a.OPS.closePath:this.closePath();break;case a.OPS.closeStroke:this.closeStroke();break;case a.OPS.closeFillStroke:this.closeFillStroke();break;case a.OPS.closeEOFillStroke:this.closeEOFillStroke();break;case a.OPS.nextLine:this.nextLine();break;case a.OPS.transform:this.transform(s[0],s[1],s[2],s[3],s[4],s[5]);break;case a.OPS.constructPath:this.constructPath(s[0],s[1]);break;case a.OPS.endPath:this.endPath();break;case 92:this.group(n.items);break;default:(0,a.warn)("Unimplemented operator ".concat(i))}}}catch(t){r.e(t)}finally{r.f()}}},{key:"setWordSpacing",value:function(t){this.current.wordSpacing=t}},{key:"setCharSpacing",value:function(t){this.current.charSpacing=t}},{key:"nextLine",value:function(){this.moveText(0,this.current.leading)}},{key:"setTextMatrix",value:function(t,e,r,n,i,a){var o=this.current;o.textMatrix=o.lineMatrix=[t,e,r,n,i,a],o.textMatrixScale=Math.hypot(t,e),o.x=o.lineX=0,o.y=o.lineY=0,o.xcoords=[],o.ycoords=[],o.tspan=this.svgFactory.createElement("svg:tspan"),o.tspan.setAttributeNS(null,"font-family",o.fontFamily),o.tspan.setAttributeNS(null,"font-size","".concat(y(o.fontSize),"px")),o.tspan.setAttributeNS(null,"y",y(-o.y)),o.txtElement=this.svgFactory.createElement("svg:text"),o.txtElement.append(o.tspan)}},{key:"beginText",value:function(){var t=this.current;t.x=t.lineX=0,t.y=t.lineY=0,t.textMatrix=a.IDENTITY_MATRIX,t.lineMatrix=a.IDENTITY_MATRIX,t.textMatrixScale=1,t.tspan=this.svgFactory.createElement("svg:tspan"),t.txtElement=this.svgFactory.createElement("svg:text"),t.txtgrp=this.svgFactory.createElement("svg:g"),t.xcoords=[],t.ycoords=[]}},{key:"moveText",value:function(t,e){var r=this.current;r.x=r.lineX+=t,r.y=r.lineY+=e,r.xcoords=[],r.ycoords=[],r.tspan=this.svgFactory.createElement("svg:tspan"),r.tspan.setAttributeNS(null,"font-family",r.fontFamily),r.tspan.setAttributeNS(null,"font-size","".concat(y(r.fontSize),"px")),r.tspan.setAttributeNS(null,"y",y(-r.y))}},{key:"showText",value:function(t){var e=this.current,r=e.font,n=e.fontSize;if(0!==n){var i,o=e.fontSizeScale,s=e.charSpacing,l=e.wordSpacing,c=e.fontDirection,h=e.textHScale*c,f=r.vertical,d=f?1:-1,p=r.defaultVMetrics,v=n*e.fontMatrix[0],w=0,A=u(t);try{for(A.s();!(i=A.n()).done;){var k=i.value;if(null!==k)if("number"!=typeof k){var S=(k.isSpace?l:0)+s,x=k.fontChar,E=void 0,P=void 0,T=k.width;if(f){var C=void 0,O=k.vmetric||p;C=-(C=k.vmetric?O[1]:.5*T)*v;var F=O[2]*v;T=O?-O[0]:T,E=C/o,P=(w+F)/o}else E=w/o,P=0;(k.isInFont||r.missingFile)&&(e.xcoords.push(e.x+E),f&&e.ycoords.push(-e.y+P),e.tspan.textContent+=x),w+=f?T*v-S*c:T*v+S*c}else w+=d*k*n/1e3;else w+=c*l}}catch(t){A.e(t)}finally{A.f()}e.tspan.setAttributeNS(null,"x",e.xcoords.map(y).join(" ")),f?e.tspan.setAttributeNS(null,"y",e.ycoords.map(y).join(" ")):e.tspan.setAttributeNS(null,"y",y(-e.y)),f?e.y-=w:e.x+=w*h,e.tspan.setAttributeNS(null,"font-family",e.fontFamily),e.tspan.setAttributeNS(null,"font-size","".concat(y(e.fontSize),"px")),e.fontStyle!==g&&e.tspan.setAttributeNS(null,"font-style",e.fontStyle),e.fontWeight!==b&&e.tspan.setAttributeNS(null,"font-weight",e.fontWeight);var M=e.textRenderingMode&a.TextRenderingMode.FILL_STROKE_MASK;if(M===a.TextRenderingMode.FILL||M===a.TextRenderingMode.FILL_STROKE?(e.fillColor!==_&&e.tspan.setAttributeNS(null,"fill",e.fillColor),e.fillAlpha<1&&e.tspan.setAttributeNS(null,"fill-opacity",e.fillAlpha)):e.textRenderingMode===a.TextRenderingMode.ADD_TO_PATH?e.tspan.setAttributeNS(null,"fill","transparent"):e.tspan.setAttributeNS(null,"fill","none"),M===a.TextRenderingMode.STROKE||M===a.TextRenderingMode.FILL_STROKE){var R=1/(e.textMatrixScale||1);this._setStrokeAttributes(e.tspan,R)}var I=e.textMatrix;0!==e.textRise&&((I=I.slice())[5]+=e.textRise),e.txtElement.setAttributeNS(null,"transform","".concat(m(I)," scale(").concat(y(h),", -1)")),e.txtElement.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),e.txtElement.append(e.tspan),e.txtgrp.append(e.txtElement),this._ensureTransformGroup().append(e.txtElement)}}},{key:"setLeadingMoveText",value:function(t,e){this.setLeading(-e),this.moveText(t,e)}},{key:"addFontStyle",value:function(t){if(!t.data)throw new Error('addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.');this.cssStyle||(this.cssStyle=this.svgFactory.createElement("svg:style"),this.cssStyle.setAttributeNS(null,"type","text/css"),this.defs.append(this.cssStyle));var e=k(t.data,t.mimetype,this.forceDataSchema);this.cssStyle.textContent+='@font-face { font-family: "'.concat(t.loadedName,'";')+" src: url(".concat(e,"); }\n")}},{key:"setFont",value:function(t){var e=this.current,r=this.commonObjs.get(t[0]),n=t[1];e.font=r,!this.embedFonts||r.missingFile||this.embeddedFonts[r.loadedName]||(this.addFontStyle(r),this.embeddedFonts[r.loadedName]=r),e.fontMatrix=r.fontMatrix||a.FONT_IDENTITY_MATRIX;var i="normal";r.black?i="900":r.bold&&(i="bold");var o=r.italic?"italic":"normal";n<0?(n=-n,e.fontDirection=-1):e.fontDirection=1,e.fontSize=n,e.fontFamily=r.loadedName,e.fontWeight=i,e.fontStyle=o,e.tspan=this.svgFactory.createElement("svg:tspan"),e.tspan.setAttributeNS(null,"y",y(-e.y)),e.xcoords=[],e.ycoords=[]}},{key:"endText",value:function(){var t,e=this.current;e.textRenderingMode&a.TextRenderingMode.ADD_TO_PATH_FLAG&&null!==(t=e.txtElement)&&void 0!==t&&t.hasChildNodes()&&(e.element=e.txtElement,this.clip("nonzero"),this.endPath())}},{key:"setLineWidth",value:function(t){t>0&&(this.current.lineWidth=t)}},{key:"setLineCap",value:function(t){this.current.lineCap=w[t]}},{key:"setLineJoin",value:function(t){this.current.lineJoin=A[t]}},{key:"setMiterLimit",value:function(t){this.current.miterLimit=t}},{key:"setStrokeAlpha",value:function(t){this.current.strokeAlpha=t}},{key:"setStrokeRGBColor",value:function(t,e,r){this.current.strokeColor=a.Util.makeHexColor(t,e,r)}},{key:"setFillAlpha",value:function(t){this.current.fillAlpha=t}},{key:"setFillRGBColor",value:function(t,e,r){this.current.fillColor=a.Util.makeHexColor(t,e,r),this.current.tspan=this.svgFactory.createElement("svg:tspan"),this.current.xcoords=[],this.current.ycoords=[]}},{key:"setStrokeColorN",value:function(t){this.current.strokeColor=this._makeColorN_Pattern(t)}},{key:"setFillColorN",value:function(t){this.current.fillColor=this._makeColorN_Pattern(t)}},{key:"shadingFill",value:function(t){var e=this.viewport.width,r=this.viewport.height,n=a.Util.inverseTransform(this.transformMatrix),i=a.Util.applyTransform([0,0],n),o=a.Util.applyTransform([0,r],n),s=a.Util.applyTransform([e,0],n),l=a.Util.applyTransform([e,r],n),u=Math.min(i[0],o[0],s[0],l[0]),c=Math.min(i[1],o[1],s[1],l[1]),h=Math.max(i[0],o[0],s[0],l[0]),f=Math.max(i[1],o[1],s[1],l[1]),d=this.svgFactory.createElement("svg:rect");d.setAttributeNS(null,"x",u),d.setAttributeNS(null,"y",c),d.setAttributeNS(null,"width",h-u),d.setAttributeNS(null,"height",f-c),d.setAttributeNS(null,"fill",this._makeShadingPattern(t)),this.current.fillAlpha<1&&d.setAttributeNS(null,"fill-opacity",this.current.fillAlpha),this._ensureTransformGroup().append(d)}},{key:"_makeColorN_Pattern",value:function(t){return"TilingPattern"===t[0]?this._makeTilingPattern(t):this._makeShadingPattern(t)}},{key:"_makeTilingPattern",value:function(t){var e=t[1],r=t[2],n=t[3]||a.IDENTITY_MATRIX,i=l(t[4],4),o=i[0],u=i[1],c=i[2],h=i[3],f=t[5],d=t[6],p=t[7],v="shading".concat(T++),y=l(a.Util.normalizeRect([].concat(s(a.Util.applyTransform([o,u],n)),s(a.Util.applyTransform([c,h],n)))),4),m=y[0],g=y[1],b=y[2],_=y[3],w=l(a.Util.singularValueDecompose2dScale(n),2),A=f*w[0],k=d*w[1],S=this.svgFactory.createElement("svg:pattern");S.setAttributeNS(null,"id",v),S.setAttributeNS(null,"patternUnits","userSpaceOnUse"),S.setAttributeNS(null,"width",A),S.setAttributeNS(null,"height",k),S.setAttributeNS(null,"x","".concat(m)),S.setAttributeNS(null,"y","".concat(g));var x=this.svg,E=this.transformMatrix,P=this.current.fillColor,C=this.current.strokeColor,O=this.svgFactory.create(b-m,_-g);if(this.svg=O,this.transformMatrix=n,2===p){var F=a.Util.makeHexColor.apply(a.Util,s(e));this.current.fillColor=F,this.current.strokeColor=F}return this.executeOpTree(this.convertOpList(r)),this.svg=x,this.transformMatrix=E,this.current.fillColor=P,this.current.strokeColor=C,S.append(O.childNodes[0]),this.defs.append(S),"url(#".concat(v,")")}},{key:"_makeShadingPattern",value:function(t){switch("string"==typeof t&&(t=this.objs.get(t)),t[0]){case"RadialAxial":var e,r="shading".concat(T++),n=t[3];switch(t[1]){case"axial":var i=t[4],o=t[5];(e=this.svgFactory.createElement("svg:linearGradient")).setAttributeNS(null,"id",r),e.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),e.setAttributeNS(null,"x1",i[0]),e.setAttributeNS(null,"y1",i[1]),e.setAttributeNS(null,"x2",o[0]),e.setAttributeNS(null,"y2",o[1]);break;case"radial":var s=t[4],l=t[5],c=t[6],h=t[7];(e=this.svgFactory.createElement("svg:radialGradient")).setAttributeNS(null,"id",r),e.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),e.setAttributeNS(null,"cx",l[0]),e.setAttributeNS(null,"cy",l[1]),e.setAttributeNS(null,"r",h),e.setAttributeNS(null,"fx",s[0]),e.setAttributeNS(null,"fy",s[1]),e.setAttributeNS(null,"fr",c);break;default:throw new Error("Unknown RadialAxial type: ".concat(t[1]))}var f,d=u(n);try{for(d.s();!(f=d.n()).done;){var p=f.value,v=this.svgFactory.createElement("svg:stop");v.setAttributeNS(null,"offset",p[0]),v.setAttributeNS(null,"stop-color",p[1]),e.append(v)}}catch(t){d.e(t)}finally{d.f()}return this.defs.append(e),"url(#".concat(r,")");case"Mesh":return(0,a.warn)("Unimplemented pattern Mesh"),null;case"Dummy":return"hotpink";default:throw new Error("Unknown IR type: ".concat(t[0]))}}},{key:"setDash",value:function(t,e){this.current.dashArray=t,this.current.dashPhase=e}},{key:"constructPath",value:function(t,e){var r,n=this.current,i=n.x,o=n.y,s=[],l=0,c=u(t);try{for(c.s();!(r=c.n()).done;)switch(0|r.value){case a.OPS.rectangle:i=e[l++],o=e[l++];var h=e[l++],f=e[l++],d=i+h,p=o+f;s.push("M",y(i),y(o),"L",y(d),y(o),"L",y(d),y(p),"L",y(i),y(p),"Z");break;case a.OPS.moveTo:i=e[l++],o=e[l++],s.push("M",y(i),y(o));break;case a.OPS.lineTo:i=e[l++],o=e[l++],s.push("L",y(i),y(o));break;case a.OPS.curveTo:i=e[l+4],o=e[l+5],s.push("C",y(e[l]),y(e[l+1]),y(e[l+2]),y(e[l+3]),y(i),y(o)),l+=6;break;case a.OPS.curveTo2:s.push("C",y(i),y(o),y(e[l]),y(e[l+1]),y(e[l+2]),y(e[l+3])),i=e[l+2],o=e[l+3],l+=4;break;case a.OPS.curveTo3:i=e[l+2],o=e[l+3],s.push("C",y(e[l]),y(e[l+1]),y(i),y(o),y(i),y(o)),l+=4;break;case a.OPS.closePath:s.push("Z")}}catch(t){c.e(t)}finally{c.f()}s=s.join(" "),n.path&&t.length>0&&t[0]!==a.OPS.rectangle&&t[0]!==a.OPS.moveTo?s=n.path.getAttributeNS(null,"d")+s:(n.path=this.svgFactory.createElement("svg:path"),this._ensureTransformGroup().append(n.path)),n.path.setAttributeNS(null,"d",s),n.path.setAttributeNS(null,"fill","none"),n.element=n.path,n.setCurrentPoint(i,o)}},{key:"endPath",value:function(){var t=this.current;if(t.path=null,this.pendingClip)if(t.element){var e="clippath".concat(E++),r=this.svgFactory.createElement("svg:clipPath");r.setAttributeNS(null,"id",e),r.setAttributeNS(null,"transform",m(this.transformMatrix));var n=t.element.cloneNode(!0);if("evenodd"===this.pendingClip?n.setAttributeNS(null,"clip-rule","evenodd"):n.setAttributeNS(null,"clip-rule","nonzero"),this.pendingClip=null,r.append(n),this.defs.append(r),t.activeClipUrl){t.clipGroup=null;var i,a=u(this.extraStack);try{for(a.s();!(i=a.n()).done;)i.value.clipGroup=null}catch(t){a.e(t)}finally{a.f()}r.setAttributeNS(null,"clip-path",t.activeClipUrl)}t.activeClipUrl="url(#".concat(e,")"),this.tgrp=null}else this.pendingClip=null}},{key:"clip",value:function(t){this.pendingClip=t}},{key:"closePath",value:function(){var t=this.current;if(t.path){var e="".concat(t.path.getAttributeNS(null,"d"),"Z");t.path.setAttributeNS(null,"d",e)}}},{key:"setLeading",value:function(t){this.current.leading=-t}},{key:"setTextRise",value:function(t){this.current.textRise=t}},{key:"setTextRenderingMode",value:function(t){this.current.textRenderingMode=t}},{key:"setHScale",value:function(t){this.current.textHScale=t/100}},{key:"setRenderingIntent",value:function(t){}},{key:"setFlatness",value:function(t){}},{key:"setGState",value:function(t){var e,r=u(t);try{for(r.s();!(e=r.n()).done;){var n=l(e.value,2),i=n[0],o=n[1];switch(i){case"LW":this.setLineWidth(o);break;case"LC":this.setLineCap(o);break;case"LJ":this.setLineJoin(o);break;case"ML":this.setMiterLimit(o);break;case"D":this.setDash(o[0],o[1]);break;case"RI":this.setRenderingIntent(o);break;case"FL":this.setFlatness(o);break;case"Font":this.setFont(o);break;case"CA":this.setStrokeAlpha(o);break;case"ca":this.setFillAlpha(o);break;default:(0,a.warn)("Unimplemented graphic state operator ".concat(i))}}}catch(t){r.e(t)}finally{r.f()}}},{key:"fill",value:function(){var t=this.current;t.element&&(t.element.setAttributeNS(null,"fill",t.fillColor),t.element.setAttributeNS(null,"fill-opacity",t.fillAlpha),this.endPath())}},{key:"stroke",value:function(){var t=this.current;t.element&&(this._setStrokeAttributes(t.element),t.element.setAttributeNS(null,"fill","none"),this.endPath())}},{key:"_setStrokeAttributes",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=this.current,n=r.dashArray;1!==e&&n.length>0&&(n=n.map((function(t){return e*t}))),t.setAttributeNS(null,"stroke",r.strokeColor),t.setAttributeNS(null,"stroke-opacity",r.strokeAlpha),t.setAttributeNS(null,"stroke-miterlimit",y(r.miterLimit)),t.setAttributeNS(null,"stroke-linecap",r.lineCap),t.setAttributeNS(null,"stroke-linejoin",r.lineJoin),t.setAttributeNS(null,"stroke-width",y(e*r.lineWidth)+"px"),t.setAttributeNS(null,"stroke-dasharray",n.map(y).join(" ")),t.setAttributeNS(null,"stroke-dashoffset",y(e*r.dashPhase)+"px")}},{key:"eoFill",value:function(){var t;null===(t=this.current.element)||void 0===t||t.setAttributeNS(null,"fill-rule","evenodd"),this.fill()}},{key:"fillStroke",value:function(){this.stroke(),this.fill()}},{key:"eoFillStroke",value:function(){var t;null===(t=this.current.element)||void 0===t||t.setAttributeNS(null,"fill-rule","evenodd"),this.fillStroke()}},{key:"closeStroke",value:function(){this.closePath(),this.stroke()}},{key:"closeFillStroke",value:function(){this.closePath(),this.fillStroke()}},{key:"closeEOFillStroke",value:function(){this.closePath(),this.eoFillStroke()}},{key:"paintSolidColorImageMask",value:function(){var t=this.svgFactory.createElement("svg:rect");t.setAttributeNS(null,"x","0"),t.setAttributeNS(null,"y","0"),t.setAttributeNS(null,"width","1px"),t.setAttributeNS(null,"height","1px"),t.setAttributeNS(null,"fill",this.current.fillColor),this._ensureTransformGroup().append(t)}},{key:"paintImageXObject",value:function(t){var e=this.getObject(t);e?this.paintInlineImageXObject(e):(0,a.warn)("Dependent image with object ID ".concat(t," is not ready yet"))}},{key:"paintInlineImageXObject",value:function(t,e){var r=t.width,n=t.height,i=S(t,this.forceDataSchema,!!e),a=this.svgFactory.createElement("svg:rect");a.setAttributeNS(null,"x","0"),a.setAttributeNS(null,"y","0"),a.setAttributeNS(null,"width",y(r)),a.setAttributeNS(null,"height",y(n)),this.current.element=a,this.clip("nonzero");var o=this.svgFactory.createElement("svg:image");o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",i),o.setAttributeNS(null,"x","0"),o.setAttributeNS(null,"y",y(-n)),o.setAttributeNS(null,"width",y(r)+"px"),o.setAttributeNS(null,"height",y(n)+"px"),o.setAttributeNS(null,"transform","scale(".concat(y(1/r)," ").concat(y(-1/n),")")),e?e.append(o):this._ensureTransformGroup().append(o)}},{key:"paintImageMaskXObject",value:function(t){var e=this.getObject(t.data,t);if(e.bitmap)(0,a.warn)("paintImageMaskXObject: ImageBitmap support is not implemented, ensure that the `isOffscreenCanvasSupported` API parameter is disabled.");else{var r=this.current,n=e.width,i=e.height,o=r.fillColor;r.maskId="mask".concat(P++);var s=this.svgFactory.createElement("svg:mask");s.setAttributeNS(null,"id",r.maskId);var l=this.svgFactory.createElement("svg:rect");l.setAttributeNS(null,"x","0"),l.setAttributeNS(null,"y","0"),l.setAttributeNS(null,"width",y(n)),l.setAttributeNS(null,"height",y(i)),l.setAttributeNS(null,"fill",o),l.setAttributeNS(null,"mask","url(#".concat(r.maskId,")")),this.defs.append(s),this._ensureTransformGroup().append(l),this.paintInlineImageXObject(e,s)}}},{key:"paintFormXObjectBegin",value:function(t,e){if(Array.isArray(t)&&6===t.length&&this.transform(t[0],t[1],t[2],t[3],t[4],t[5]),e){var r=e[2]-e[0],n=e[3]-e[1],i=this.svgFactory.createElement("svg:rect");i.setAttributeNS(null,"x",e[0]),i.setAttributeNS(null,"y",e[1]),i.setAttributeNS(null,"width",y(r)),i.setAttributeNS(null,"height",y(n)),this.current.element=i,this.clip("nonzero"),this.endPath()}}},{key:"paintFormXObjectEnd",value:function(){}},{key:"_initialize",value:function(t){var e=this.svgFactory.create(t.width,t.height),r=this.svgFactory.createElement("svg:defs");e.append(r),this.defs=r;var n=this.svgFactory.createElement("svg:g");return n.setAttributeNS(null,"transform",m(t.transform)),e.append(n),this.svg=n,e}},{key:"_ensureClipGroup",value:function(){if(!this.current.clipGroup){var t=this.svgFactory.createElement("svg:g");t.setAttributeNS(null,"clip-path",this.current.activeClipUrl),this.svg.append(t),this.current.clipGroup=t}return this.current.clipGroup}},{key:"_ensureTransformGroup",value:function(){return this.tgrp||(this.tgrp=this.svgFactory.createElement("svg:g"),this.tgrp.setAttributeNS(null,"transform",m(this.transformMatrix)),this.current.activeClipUrl?this._ensureClipGroup().append(this.tgrp):this.svg.append(this.tgrp)),this.tgrp}}]),t}()},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PDFNodeStream=void 0;var n=r(1),i=r(162);function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&o(t,e)}function o(t,e){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},o(t,e)}function s(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=l(t);if(e){var i=l(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return function(t,e){if(e&&("object"===f(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,r)}}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}function u(){u=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,r){return t[e]=r}}function c(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=c;var d={};function p(){}function v(){}function y(){}var m={};l(m,a,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,a)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,s){var l=h(t[n],t,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==f(c)&&r.call(c,"__await")?e.resolve(c.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(c).then((function(t){u.value=t,o(u)}),(function(t){return i("throw",t,o,s)}))}s(l.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=h(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=h(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[a];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=l(y,s,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,l(t,s,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),l(A.prototype,o,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(c(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),l(_,s,"Generator"),l(_,a,(function(){return this})),l(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function c(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function h(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function o(t){c(a,n,i,o,s,"next",t)}function s(t){c(a,n,i,o,s,"throw",t)}o(void 0)}))}}function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(i)?i:String(i)),n)}var i}function y(t,e,r){return e&&v(t.prototype,e),r&&v(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var m=require("fs"),g=require("http"),b=require("https"),_=require("url"),w=/^file:\/\/\/[a-zA-Z]:\//,A=function(){function t(e){var r,n;p(this,t),this.source=e,this.url=(r=e.url,"file:"===(n=_.parse(r)).protocol||n.host?n:/^[a-z]:[/\\]/i.test(r)?_.parse("file:///".concat(r)):(n.host||(n.protocol="file:"),n)),this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol,this.isFsUrl="file:"===this.url.protocol,this.httpHeaders=this.isHttp&&e.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}return y(t,[{key:"_progressiveDataLength",get:function(){var t,e;return null!==(t=null===(e=this._fullRequestReader)||void 0===e?void 0:e._loaded)&&void 0!==t?t:0}},{key:"getFullReader",value:function(){return(0,n.assert)(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new T(this):new E(this),this._fullRequestReader}},{key:"getRangeReader",value:function(t,e){if(e<=this._progressiveDataLength)return null;var r=this.isFsUrl?new C(this,t,e):new P(this,t,e);return this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(t){var e;null===(e=this._fullRequestReader)||void 0===e||e.cancel(t);var r,n=function(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return d(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}(this._rangeRequestReaders.slice(0));try{for(n.s();!(r=n.n()).done;)r.value.cancel(t)}catch(t){n.e(t)}finally{n.f()}}}]),t}();e.PDFNodeStream=A;var k=function(){function t(e){p(this,t),this._url=e.url,this._done=!1,this._storedError=null,this.onProgress=null;var r=e.source;this._contentLength=r.length,this._loaded=0,this._filename=null,this._disableRange=r.disableRange||!1,this._rangeChunkSize=r.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!r.disableStream,this._isRangeSupported=!r.disableRange,this._readableStream=null,this._readCapability=(0,n.createPromiseCapability)(),this._headersCapability=(0,n.createPromiseCapability)()}var e;return y(t,[{key:"headersReady",get:function(){return this._headersCapability.promise}},{key:"filename",get:function(){return this._filename}},{key:"contentLength",get:function(){return this._contentLength}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"read",value:(e=h(u().mark((function t(){var e,r,i;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this._readCapability.promise;case 2:if(!this._done){t.next=4;break}return t.abrupt("return",{value:void 0,done:!0});case 4:if(!this._storedError){t.next=6;break}throw this._storedError;case 6:if(null!==(r=this._readableStream.read())){t.next=10;break}return this._readCapability=(0,n.createPromiseCapability)(),t.abrupt("return",this.read());case 10:return this._loaded+=r.length,null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:this._loaded,total:this._contentLength}),i=new Uint8Array(r).buffer,t.abrupt("return",{value:i,done:!1});case 14:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}},{key:"_error",value:function(t){this._storedError=t,this._readCapability.resolve()}},{key:"_setReadableStream",value:function(t){var e=this;this._readableStream=t,t.on("readable",(function(){e._readCapability.resolve()})),t.on("end",(function(){t.destroy(),e._done=!0,e._readCapability.resolve()})),t.on("error",(function(t){e._error(t)})),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new n.AbortException("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}]),t}(),S=function(){function t(e){p(this,t),this._url=e.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=(0,n.createPromiseCapability)();var r=e.source;this._isStreamingSupported=!r.disableStream}var e;return y(t,[{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"read",value:(e=h(u().mark((function t(){var e,r,i;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this._readCapability.promise;case 2:if(!this._done){t.next=4;break}return t.abrupt("return",{value:void 0,done:!0});case 4:if(!this._storedError){t.next=6;break}throw this._storedError;case 6:if(null!==(r=this._readableStream.read())){t.next=10;break}return this._readCapability=(0,n.createPromiseCapability)(),t.abrupt("return",this.read());case 10:return this._loaded+=r.length,null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:this._loaded}),i=new Uint8Array(r).buffer,t.abrupt("return",{value:i,done:!1});case 14:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}},{key:"_error",value:function(t){this._storedError=t,this._readCapability.resolve()}},{key:"_setReadableStream",value:function(t){var e=this;this._readableStream=t,t.on("readable",(function(){e._readCapability.resolve()})),t.on("end",(function(){t.destroy(),e._done=!0,e._readCapability.resolve()})),t.on("error",(function(t){e._error(t)})),this._storedError&&this._readableStream.destroy(this._storedError)}}]),t}();function x(t,e){return{protocol:t.protocol,auth:t.auth,host:t.hostname,port:t.port,path:t.path,method:"GET",headers:e}}var E=function(t){a(r,t);var e=s(r);function r(t){var a;p(this,r);var o=function(e){if(404===e.statusCode){var r=new n.MissingPDFException('Missing PDF "'.concat(a._url,'".'));return a._storedError=r,void a._headersCapability.reject(r)}a._headersCapability.resolve(),a._setReadableStream(e);var o=function(t){return a._readableStream.headers[t.toLowerCase()]},s=(0,i.validateRangeRequestCapabilities)({getResponseHeader:o,isHttp:t.isHttp,rangeChunkSize:a._rangeChunkSize,disableRange:a._disableRange}),l=s.allowRangeRequests,u=s.suggestedLength;a._isRangeSupported=l,a._contentLength=u||a._contentLength,a._filename=(0,i.extractFilenameFromHeader)(o)};return(a=e.call(this,t))._request=null,"http:"===a._url.protocol?a._request=g.request(x(a._url,t.httpHeaders),o):a._request=b.request(x(a._url,t.httpHeaders),o),a._request.on("error",(function(t){a._storedError=t,a._headersCapability.reject(t)})),a._request.end(),a}return y(r)}(k),P=function(t){a(r,t);var e=s(r);function r(t,i,a){var o;for(var s in p(this,r),(o=e.call(this,t))._httpHeaders={},t.httpHeaders){var l=t.httpHeaders[s];void 0!==l&&(o._httpHeaders[s]=l)}o._httpHeaders.Range="bytes=".concat(i,"-").concat(a-1);var u=function(t){if(404!==t.statusCode)o._setReadableStream(t);else{var e=new n.MissingPDFException('Missing PDF "'.concat(o._url,'".'));o._storedError=e}};return o._request=null,"http:"===o._url.protocol?o._request=g.request(x(o._url,o._httpHeaders),u):o._request=b.request(x(o._url,o._httpHeaders),u),o._request.on("error",(function(t){o._storedError=t})),o._request.end(),o}return y(r)}(S),T=function(t){a(r,t);var e=s(r);function r(t){var i;p(this,r),i=e.call(this,t);var a=decodeURIComponent(i._url.path);return w.test(i._url.href)&&(a=a.replace(/^\//,"")),m.lstat(a,(function(t,e){if(t)return"ENOENT"===t.code&&(t=new n.MissingPDFException('Missing PDF "'.concat(a,'".'))),i._storedError=t,void i._headersCapability.reject(t);i._contentLength=e.size,i._setReadableStream(m.createReadStream(a)),i._headersCapability.resolve()})),i}return y(r)}(k),C=function(t){a(r,t);var e=s(r);function r(t,n,i){var a;p(this,r),a=e.call(this,t);var o=decodeURIComponent(a._url.path);return w.test(a._url.href)&&(o=o.replace(/^\//,"")),a._setReadableStream(m.createReadStream(o,{start:n,end:i-1})),a}return y(r)}(S)},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createResponseStatusError=function(t,e){return 404===t||0===t&&e.startsWith("file:")?new n.MissingPDFException('Missing PDF "'+e+'".'):new n.UnexpectedResponseException("Unexpected server response (".concat(t,') while retrieving PDF "').concat(e,'".'),t)},e.extractFilenameFromHeader=function(t){var e=t("Content-Disposition");if(e){var r=(0,i.getFilenameFromContentDispositionHeader)(e);if(r.includes("%"))try{r=decodeURIComponent(r)}catch(t){}if((0,a.isPdfFile)(r))return r}return null},e.validateRangeRequestCapabilities=function(t){var e=t.getResponseHeader,r=t.isHttp,n=t.rangeChunkSize,i=t.disableRange,a={allowRangeRequests:!1,suggestedLength:void 0},o=parseInt(e("Content-Length"),10);return Number.isInteger(o)?(a.suggestedLength=o,o<=2*n||i||!r||"bytes"!==e("Accept-Ranges")||"identity"!==(e("Content-Encoding")||"identity")||(a.allowRangeRequests=!0),a):a},e.validateResponseStatus=function(t){return 200===t||206===t};var n=r(1),i=r(163),a=r(137)},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getFilenameFromContentDispositionHeader=function(t){var e=!0,r=s("filename\\*","i").exec(t);if(r){var a=c(r=r[1]);return u(a=f(a=h(a=unescape(a))))}if(r=function(t){for(var e,r=[],n=s("filename\\*((?!0\\d)\\d+)(\\*?)","ig");null!==(e=n.exec(t));){var a=i(e,4),o=a[1],l=a[2],u=a[3];if((o=parseInt(o,10))in r){if(0===o)break}else r[o]=[l,u]}for(var f=[],d=0;d<r.length&&d in r;++d){var p=i(r[d],2),v=p[0],y=p[1];y=c(y),v&&(y=unescape(y),0===d&&(y=h(y))),f.push(y)}return f.join("")}(t))return u(f(r));if(r=s("filename","i").exec(t)){var o=c(r=r[1]);return u(o=f(o))}function s(t,e){return new RegExp("(?:^|;)\\s*"+t+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',e)}function l(t,r){if(t){if(!/^[\x00-\xFF]+$/.test(r))return r;try{var i=new TextDecoder(t,{fatal:!0}),a=(0,n.stringToBytes)(r);r=i.decode(a),e=!1}catch(t){}}return r}function u(t){return e&&/[\x80-\xff]/.test(t)&&(t=l("utf-8",t),e&&(t=l("iso-8859-1",t))),t}function c(t){if(t.startsWith('"')){for(var e=t.slice(1).split('\\"'),r=0;r<e.length;++r){var n=e[r].indexOf('"');-1!==n&&(e[r]=e[r].slice(0,n),e.length=r+1),e[r]=e[r].replace(/\\(.)/g,"$1")}t=e.join('"')}return t}function h(t){var e=t.indexOf("'");return-1===e?t:l(t.slice(0,e),t.slice(e+1).replace(/^[^']*'/,""))}function f(t){return!t.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(t)?t:t.replace(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,(function(t,e,r,n){if("q"===r||"Q"===r)return l(e,n=(n=n.replace(/_/g," ")).replace(/=([0-9a-fA-F]{2})/g,(function(t,e){return String.fromCharCode(parseInt(e,16))})));try{n=atob(n)}catch(t){}return l(e,n)}))}return""};var n=r(1);function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],l=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){u=!0,i=t}finally{try{if(!l&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PDFNetworkStream=void 0;var n=r(1),i=r(162);function a(){a=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function u(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};u(m,o,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,o)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,s){var l=f(t[n],t,a);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==c(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(h).then((function(t){u.value=t,o(u)}),(function(t){return i("throw",t,o,s)}))}s(l.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=u(y,l,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,u(t,l,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),u(A.prototype,s,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),u(_,l,"Generator"),u(_,o,(function(){return this})),u(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function o(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function s(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function s(t){o(a,n,i,s,l,"next",t)}function l(t){o(a,n,i,s,l,"throw",t)}s(void 0)}))}}function l(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function f(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(i)?i:String(i)),n)}var i}function d(t,e,r){return e&&f(t.prototype,e),r&&f(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}var p=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};h(this,t),this.url=e,this.isHttp=/^https?:/i.test(e),this.httpHeaders=this.isHttp&&r.httpHeaders||Object.create(null),this.withCredentials=r.withCredentials||!1,this.getXhr=r.getXhr||function(){return new XMLHttpRequest},this.currXhrId=0,this.pendingRequests=Object.create(null)}return d(t,[{key:"requestRange",value:function(t,e,r){var n={begin:t,end:e};for(var i in r)n[i]=r[i];return this.request(n)}},{key:"requestFull",value:function(t){return this.request(t)}},{key:"request",value:function(t){var e=this.getXhr(),r=this.currXhrId++,n=this.pendingRequests[r]={xhr:e};for(var i in e.open("GET",this.url, !0),e.withCredentials=this.withCredentials,this.httpHeaders){var a=this.httpHeaders[i];void 0!==a&&e.setRequestHeader(i,a)}return this.isHttp&&"begin"in t&&"end"in t?(e.setRequestHeader("Range","bytes=".concat(t.begin,"-").concat(t.end-1)),n.expectedStatus=206):n.expectedStatus=200,e.responseType="arraybuffer",t.onError&&(e.onerror=function(r){t.onError(e.status)}),e.onreadystatechange=this.onStateChange.bind(this,r),e.onprogress=this.onProgress.bind(this,r),n.onHeadersReceived=t.onHeadersReceived,n.onDone=t.onDone,n.onError=t.onError,n.onProgress=t.onProgress,e.send(null),r}},{key:"onProgress",value:function(t,e){var r,n=this.pendingRequests[t];n&&(null===(r=n.onProgress)||void 0===r||r.call(n,e))}},{key:"onStateChange",value:function(t,e){var r=this.pendingRequests[t];if(r){var i=r.xhr;if(i.readyState>=2&&r.onHeadersReceived&&(r.onHeadersReceived(),delete r.onHeadersReceived),4===i.readyState&&t in this.pendingRequests)if(delete this.pendingRequests[t],0===i.status&&this.isHttp){var a;null===(a=r.onError)||void 0===a||a.call(r,i.status)}else{var o=i.status||200;if(200===o&&206===r.expectedStatus||o===r.expectedStatus){var s=function(t){var e=t.response;return"string"!=typeof e?e:(0,n.stringToBytes)(e).buffer}(i);if(206===o){var l=i.getResponseHeader("Content-Range"),u=/bytes (\d+)-(\d+)\/(\d+)/.exec(l);r.onDone({begin:parseInt(u[1],10),chunk:s})}else if(s)r.onDone({begin:0,chunk:s});else{var c;null===(c=r.onError)||void 0===c||c.call(r,i.status)}}else{var h;null===(h=r.onError)||void 0===h||h.call(r,i.status)}}}}},{key:"getRequestXhr",value:function(t){return this.pendingRequests[t].xhr}},{key:"isPendingRequest",value:function(t){return t in this.pendingRequests}},{key:"abortRequest",value:function(t){var e=this.pendingRequests[t].xhr;delete this.pendingRequests[t],e.abort()}}]),t}(),v=function(){function t(e){h(this,t),this._source=e,this._manager=new p(e.url,{httpHeaders:e.httpHeaders,withCredentials:e.withCredentials}),this._rangeChunkSize=e.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}return d(t,[{key:"_onRangeRequestReaderClosed",value:function(t){var e=this._rangeRequestReaders.indexOf(t);e>=0&&this._rangeRequestReaders.splice(e,1)}},{key:"getFullReader",value:function(){return(0,n.assert)(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new y(this._manager,this._source),this._fullRequestReader}},{key:"getRangeReader",value:function(t,e){var r=new m(this._manager,t,e);return r.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(t){var e;null===(e=this._fullRequestReader)||void 0===e||e.cancel(t);var r,n=l(this._rangeRequestReaders.slice(0));try{for(n.s();!(r=n.n()).done;)r.value.cancel(t)}catch(t){n.e(t)}finally{n.f()}}}]),t}();e.PDFNetworkStream=v;var y=function(){function t(e,r){h(this,t),this._manager=e;var i={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=r.url,this._fullRequestId=e.requestFull(i),this._headersReceivedCapability=(0,n.createPromiseCapability)(),this._disableRange=r.disableRange||!1,this._contentLength=r.length,this._rangeChunkSize=r.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}var e;return d(t,[{key:"_onHeadersReceived",value:function(){var t=this._fullRequestId,e=this._manager.getRequestXhr(t),r=function(t){return e.getResponseHeader(t)},n=(0,i.validateRangeRequestCapabilities)({getResponseHeader:r,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange}),a=n.allowRangeRequests,o=n.suggestedLength;a&&(this._isRangeSupported=!0),this._contentLength=o||this._contentLength,this._filename=(0,i.extractFilenameFromHeader)(r),this._isRangeSupported&&this._manager.abortRequest(t),this._headersReceivedCapability.resolve()}},{key:"_onDone",value:function(t){if(t&&(this._requests.length>0?this._requests.shift().resolve({value:t.chunk,done:!1}):this._cachedChunks.push(t.chunk)),this._done=!0,!(this._cachedChunks.length>0)){var e,r=l(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0}}},{key:"_onError",value:function(t){this._storedError=(0,i.createResponseStatusError)(t,this._url),this._headersReceivedCapability.reject(this._storedError);var e,r=l(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.reject(this._storedError)}catch(t){r.e(t)}finally{r.f()}this._requests.length=0,this._cachedChunks.length=0}},{key:"_onProgress",value:function(t){var e;null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:t.loaded,total:t.lengthComputable?t.total:this._contentLength})}},{key:"filename",get:function(){return this._filename}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"contentLength",get:function(){return this._contentLength}},{key:"headersReady",get:function(){return this._headersReceivedCapability.promise}},{key:"read",value:(e=s(a().mark((function t(){var e,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this._storedError){t.next=2;break}throw this._storedError;case 2:if(!(this._cachedChunks.length>0)){t.next=5;break}return e=this._cachedChunks.shift(),t.abrupt("return",{value:e,done:!1});case 5:if(!this._done){t.next=7;break}return t.abrupt("return",{value:void 0,done:!0});case 7:return r=(0,n.createPromiseCapability)(),this._requests.push(r),t.abrupt("return",r.promise);case 10:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._done=!0,this._headersReceivedCapability.reject(t);var e,r=l(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}]),t}(),m=function(){function t(e,r,n){h(this,t),this._manager=e;var i={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=e.url,this._requestId=e.requestRange(r,n,i),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}var e;return d(t,[{key:"_close",value:function(){var t;null===(t=this.onClosed)||void 0===t||t.call(this,this)}},{key:"_onDone",value:function(t){var e=t.chunk;this._requests.length>0?this._requests.shift().resolve({value:e,done:!1}):this._queuedChunk=e,this._done=!0;var r,n=l(this._requests);try{for(n.s();!(r=n.n()).done;)r.value.resolve({value:void 0,done:!0})}catch(t){n.e(t)}finally{n.f()}this._requests.length=0,this._close()}},{key:"_onError",value:function(t){this._storedError=(0,i.createResponseStatusError)(t,this._url);var e,r=l(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.reject(this._storedError)}catch(t){r.e(t)}finally{r.f()}this._requests.length=0,this._queuedChunk=null}},{key:"_onProgress",value:function(t){var e;this.isStreamingSupported||null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:t.loaded})}},{key:"isStreamingSupported",get:function(){return!1}},{key:"read",value:(e=s(a().mark((function t(){var e,r;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this._storedError){t.next=2;break}throw this._storedError;case 2:if(null===this._queuedChunk){t.next=6;break}return e=this._queuedChunk,this._queuedChunk=null,t.abrupt("return",{value:e,done:!1});case 6:if(!this._done){t.next=8;break}return t.abrupt("return",{value:void 0,done:!0});case 8:return r=(0,n.createPromiseCapability)(),this._requests.push(r),t.abrupt("return",r.promise);case 11:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){this._done=!0;var e,r=l(this._requests);try{for(r.s();!(e=r.n()).done;)e.value.resolve({value:void 0,done:!0})}catch(t){r.e(t)}finally{r.f()}this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}]),t}()},(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PDFFetchStream=void 0;var n=r(1),i=r(162);function a(){a=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function c(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,r){return t[e]=r}}function h(t,e,r,i){var a=e&&e.prototype instanceof p?e:p,o=Object.create(a.prototype),s=new P(i||[]);return n(o,"_invoke",{value:k(t,r,s)}),o}function f(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var d={};function p(){}function v(){}function y(){}var m={};c(m,o,(function(){return this}));var g=Object.getPrototypeOf,b=g&&g(g(T([])));b&&b!==e&&r.call(b,o)&&(m=b);var _=y.prototype=p.prototype=Object.create(m);function w(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(n,a,o,s){var u=f(t[n],t,a);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==l(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return i("throw",t,o,s)}))}s(u.arg)}var a;n(this,"_invoke",{value:function(t,r){function n(){return new e((function(e,n){i(t,r,e,n)}))}return a=a?a.then(n,n):n()}})}function k(t,e,r){var n="suspendedStart";return function(i,a){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw a;return{value:void 0,done:!0}}for(r.method=i,r.arg=a;;){var o=r.delegate;if(o){var s=S(o,r);if(s){if(s===d)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=f(t,e,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function S(t,e){var r=e.method,n=t.iterator[r];if(void 0===n)return e.delegate=null,"throw"===r&&t.iterator.return&&(e.method="return",e.arg=void 0,S(t,e),"throw"===e.method)||"return"!==r&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;var i=f(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,d;var a=i.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:C}}function C(){return{value:void 0,done:!0}}return v.prototype=y,n(_,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:v,configurable:!0}),v.displayName=c(y,u,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===v||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,u,"GeneratorFunction")),t.prototype=Object.create(_),t},t.awrap=function(t){return{__await:t}},w(A.prototype),c(A.prototype,s,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,i,a){void 0===a&&(a=Promise);var o=new A(h(e,r,n,i),a);return t.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},w(_),c(_,u,"Generator"),c(_,o,(function(){return this})),c(_,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},t.values=T,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return o.type="throw",o.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),d}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;E(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),d}},t}function o(t,e,r,n,i,a,o){try{var s=t[a](o),l=s.value}catch(t){return void r(t)}s.done?e(l):Promise.resolve(l).then(n,i)}function s(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function s(t){o(a,n,i,s,l,"next",t)}function l(t){o(a,n,i,s,l,"throw",t)}s(void 0)}))}}function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==l(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===l(i)?i:String(i)),n)}var i}function f(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function d(t,e,r){return{method:"GET",headers:t,signal:r.signal,mode:"cors",credentials:e?"include":"same-origin",redirect:"follow"}}function p(t){var e=new Headers;for(var r in t){var n=t[r];void 0!==n&&e.append(r,n)}return e}var v=function(){function t(e){c(this,t),this.source=e,this.isHttp=/^https?:/i.test(e.url),this.httpHeaders=this.isHttp&&e.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}return f(t,[{key:"_progressiveDataLength",get:function(){var t,e;return null!==(t=null===(e=this._fullRequestReader)||void 0===e?void 0:e._loaded)&&void 0!==t?t:0}},{key:"getFullReader",value:function(){return(0,n.assert)(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new y(this),this._fullRequestReader}},{key:"getRangeReader",value:function(t,e){if(e<=this._progressiveDataLength)return null;var r=new m(this,t,e);return this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(t){var e;null===(e=this._fullRequestReader)||void 0===e||e.cancel(t);var r,n=function(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}(this._rangeRequestReaders.slice(0));try{for(n.s();!(r=n.n()).done;)r.value.cancel(t)}catch(t){n.e(t)}finally{n.f()}}}]),t}();e.PDFFetchStream=v;var y=function(){function t(e){var r=this;c(this,t),this._stream=e,this._reader=null,this._loaded=0,this._filename=null;var a=e.source;this._withCredentials=a.withCredentials||!1,this._contentLength=a.length,this._headersCapability=(0,n.createPromiseCapability)(),this._disableRange=a.disableRange||!1,this._rangeChunkSize=a.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!a.disableStream,this._isRangeSupported=!a.disableRange,this._headers=p(this._stream.httpHeaders);var o=a.url;fetch(o,d(this._headers,this._withCredentials,this._abortController)).then((function(t){if(!(0,i.validateResponseStatus)(t.status))throw(0,i.createResponseStatusError)(t.status,o);r._reader=t.body.getReader(),r._headersCapability.resolve();var e=function(e){return t.headers.get(e)},a=(0,i.validateRangeRequestCapabilities)({getResponseHeader:e,isHttp:r._stream.isHttp,rangeChunkSize:r._rangeChunkSize,disableRange:r._disableRange}),s=a.allowRangeRequests,l=a.suggestedLength;r._isRangeSupported=s,r._contentLength=l||r._contentLength,r._filename=(0,i.extractFilenameFromHeader)(e),!r._isStreamingSupported&&r._isRangeSupported&&r.cancel(new n.AbortException("Streaming is disabled."))})).catch(this._headersCapability.reject),this.onProgress=null}var e;return f(t,[{key:"headersReady",get:function(){return this._headersCapability.promise}},{key:"filename",get:function(){return this._filename}},{key:"contentLength",get:function(){return this._contentLength}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"read",value:(e=s(a().mark((function t(){var e,r,n,i,o;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this._headersCapability.promise;case 2:return t.next=4,this._reader.read();case 4:if(r=t.sent,n=r.value,!(i=r.done)){t.next=9;break}return t.abrupt("return",{value:n,done:i});case 9:return this._loaded+=n.byteLength,null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:this._loaded,total:this._contentLength}),o=new Uint8Array(n).buffer,t.abrupt("return",{value:o,done:!1});case 13:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){var e;null===(e=this._reader)||void 0===e||e.cancel(t),this._abortController.abort()}}]),t}(),m=function(){function t(e,r,a){var o=this;c(this,t),this._stream=e,this._reader=null,this._loaded=0;var s=e.source;this._withCredentials=s.withCredentials||!1,this._readCapability=(0,n.createPromiseCapability)(),this._isStreamingSupported=!s.disableStream,this._abortController=new AbortController,this._headers=p(this._stream.httpHeaders),this._headers.append("Range","bytes=".concat(r,"-").concat(a-1));var l=s.url;fetch(l,d(this._headers,this._withCredentials,this._abortController)).then((function(t){if(!(0,i.validateResponseStatus)(t.status))throw(0,i.createResponseStatusError)(t.status,l);o._readCapability.resolve(),o._reader=t.body.getReader()})).catch(this._readCapability.reject),this.onProgress=null}var e;return f(t,[{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"read",value:(e=s(a().mark((function t(){var e,r,n,i,o;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this._readCapability.promise;case 2:return t.next=4,this._reader.read();case 4:if(r=t.sent,n=r.value,!(i=r.done)){t.next=9;break}return t.abrupt("return",{value:n,done:i});case 9:return this._loaded+=n.byteLength,null===(e=this.onProgress)||void 0===e||e.call(this,{loaded:this._loaded}),o=new Uint8Array(n).buffer,t.abrupt("return",{value:o,done:!1});case 13:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})},{key:"cancel",value:function(t){var e;null===(e=this._reader)||void 0===e||e.cancel(t),this._abortController.abort()}}]),t}()}],__webpack_module_cache__={};function __w_pdfjs_require__(t){var e=__webpack_module_cache__[t];if(void 0!==e)return e.exports;var r=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t](r,r.exports,__w_pdfjs_require__),r.exports}var __nested_webpack_exports__={};return(()=>{var t=__nested_webpack_exports__;Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"AbortException",{enumerable:!0,get:function(){return e.AbortException}}),Object.defineProperty(t,"AnnotationEditorLayer",{enumerable:!0,get:function(){return a.AnnotationEditorLayer}}),Object.defineProperty(t,"AnnotationEditorParamsType",{enumerable:!0,get:function(){return e.AnnotationEditorParamsType}}),Object.defineProperty(t,"AnnotationEditorType",{enumerable:!0,get:function(){return e.AnnotationEditorType}}),Object.defineProperty(t,"AnnotationEditorUIManager",{enumerable:!0,get:function(){return o.AnnotationEditorUIManager}}),Object.defineProperty(t,"AnnotationLayer",{enumerable:!0,get:function(){return s.AnnotationLayer}}),Object.defineProperty(t,"AnnotationMode",{enumerable:!0,get:function(){return e.AnnotationMode}}),Object.defineProperty(t,"CMapCompressionType",{enumerable:!0,get:function(){return e.CMapCompressionType}}),Object.defineProperty(t,"GlobalWorkerOptions",{enumerable:!0,get:function(){return l.GlobalWorkerOptions}}),Object.defineProperty(t,"InvalidPDFException",{enumerable:!0,get:function(){return e.InvalidPDFException}}),Object.defineProperty(t,"MissingPDFException",{enumerable:!0,get:function(){return e.MissingPDFException}}),Object.defineProperty(t,"OPS",{enumerable:!0,get:function(){return e.OPS}}),Object.defineProperty(t,"PDFDataRangeTransport",{enumerable:!0,get:function(){return r.PDFDataRangeTransport}}),Object.defineProperty(t,"PDFDateString",{enumerable:!0,get:function(){return n.PDFDateString}}),Object.defineProperty(t,"PDFWorker",{enumerable:!0,get:function(){return r.PDFWorker}}),Object.defineProperty(t,"PasswordResponses",{enumerable:!0,get:function(){return e.PasswordResponses}}),Object.defineProperty(t,"PermissionFlag",{enumerable:!0,get:function(){return e.PermissionFlag}}),Object.defineProperty(t,"PixelsPerInch",{enumerable:!0,get:function(){return n.PixelsPerInch}}),Object.defineProperty(t,"RenderingCancelledException",{enumerable:!0,get:function(){return n.RenderingCancelledException}}),Object.defineProperty(t,"SVGGraphics",{enumerable:!0,get:function(){return c.SVGGraphics}}),Object.defineProperty(t,"UNSUPPORTED_FEATURES",{enumerable:!0,get:function(){return e.UNSUPPORTED_FEATURES}}),Object.defineProperty(t,"UnexpectedResponseException",{enumerable:!0,get:function(){return e.UnexpectedResponseException}}),Object.defineProperty(t,"Util",{enumerable:!0,get:function(){return e.Util}}),Object.defineProperty(t,"VerbosityLevel",{enumerable:!0,get:function(){return e.VerbosityLevel}}),Object.defineProperty(t,"XfaLayer",{enumerable:!0,get:function(){return h.XfaLayer}}),Object.defineProperty(t,"build",{enumerable:!0,get:function(){return r.build}}),Object.defineProperty(t,"createPromiseCapability",{enumerable:!0,get:function(){return e.createPromiseCapability}}),Object.defineProperty(t,"createValidAbsoluteUrl",{enumerable:!0,get:function(){return e.createValidAbsoluteUrl}}),Object.defineProperty(t,"getDocument",{enumerable:!0,get:function(){return r.getDocument}}),Object.defineProperty(t,"getFilenameFromUrl",{enumerable:!0,get:function(){return n.getFilenameFromUrl}}),Object.defineProperty(t,"getPdfFilenameFromUrl",{enumerable:!0,get:function(){return n.getPdfFilenameFromUrl}}),Object.defineProperty(t,"getXfaPageViewport",{enumerable:!0,get:function(){return n.getXfaPageViewport}}),Object.defineProperty(t,"isDataScheme",{enumerable:!0,get:function(){return n.isDataScheme}}),Object.defineProperty(t,"isPdfFile",{enumerable:!0,get:function(){return n.isPdfFile}}),Object.defineProperty(t,"loadScript",{enumerable:!0,get:function(){return n.loadScript}}),Object.defineProperty(t,"renderTextLayer",{enumerable:!0,get:function(){return i.renderTextLayer}}),Object.defineProperty(t,"setLayerDimensions",{enumerable:!0,get:function(){return n.setLayerDimensions}}),Object.defineProperty(t,"shadow",{enumerable:!0,get:function(){return e.shadow}}),Object.defineProperty(t,"updateTextLayer",{enumerable:!0,get:function(){return i.updateTextLayer}}),Object.defineProperty(t,"version",{enumerable:!0,get:function(){return r.version}});var e=__w_pdfjs_require__(1),r=__w_pdfjs_require__(133),n=__w_pdfjs_require__(137),i=__w_pdfjs_require__(151),a=__w_pdfjs_require__(152),o=__w_pdfjs_require__(136),s=__w_pdfjs_require__(157),l=__w_pdfjs_require__(144),u=__w_pdfjs_require__(3),c=__w_pdfjs_require__(160),h=__w_pdfjs_require__(159);if(u.isNodeJS){var f=__w_pdfjs_require__(161).PDFNodeStream;(0,r.setPDFNetworkStreamFactory)((function(t){return new f(t)}))}else{var d=__w_pdfjs_require__(164).PDFNetworkStream,p=__w_pdfjs_require__(165).PDFFetchStream;(0,r.setPDFNetworkStreamFactory)((function(t){return(0,n.isValidFetchUrl)(t.url)?new p(t):new d(t)}))}})(),__nested_webpack_exports__})(),"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define("pdfjs-dist/build/pdf",[],factory):"object"==typeof exports?exports["pdfjs-dist/build/pdf"]=factory():root["pdfjs-dist/build/pdf"]=root.pdfjsLib=factory();';